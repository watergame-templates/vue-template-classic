schema {
  query: LeanStorage
  mutation: LeanStorageMutation
}

type _Conversation {
  unique: Boolean
  updatedAt: Date
  name: String
  objectId: ID
  m: Array
  tr: Boolean
  createdAt: Date
  type: Float
  lm: Date
  c: String
  uniqueId: String
  mu: Array
  sys: Boolean
  price: String
  conver: String
}

input _ConversationContainedInArgument {
  unique: [ID]
  updatedAt: [ID]
  name: [ID]
  objectId: [ID]
  m: [ID]
  tr: [ID]
  createdAt: [ID]
  type: [ID]
  lm: [ID]
  c: [ID]
  uniqueId: [ID]
  mu: [ID]
  sys: [ID]
  price: [ID]
  conver: [ID]
}

input _ConversationContainsAllArgument {
  unique: [ID]
  updatedAt: [ID]
  name: [ID]
  objectId: [ID]
  m: [ID]
  tr: [ID]
  createdAt: [ID]
  type: [ID]
  lm: [ID]
  c: [ID]
  uniqueId: [ID]
  mu: [ID]
  sys: [ID]
  price: [ID]
  conver: [ID]
}

input _ConversationEqualToArgument {
  unique: Boolean
  updatedAt: Date
  name: String
  objectId: String
  m: Array
  tr: Boolean
  createdAt: Date
  type: Float
  lm: Date
  c: String
  uniqueId: String
  mu: Array
  sys: Boolean
  price: String
  conver: String
}

input _ConversationExistsArgument {
  unique: Boolean
  updatedAt: Boolean
  name: Boolean
  objectId: Boolean
  m: Boolean
  tr: Boolean
  createdAt: Boolean
  type: Boolean
  lm: Boolean
  c: Boolean
  uniqueId: Boolean
  mu: Boolean
  sys: Boolean
  price: Boolean
  conver: Boolean
}

enum _ConversationFields {
  unique
  updatedAt
  name
  objectId
  m
  tr
  createdAt
  type
  lm
  c
  uniqueId
  mu
  sys
  price
  conver
}

input _ConversationGreaterThanArgument {
  unique: Boolean
  updatedAt: Date
  name: String
  objectId: String
  m: Array
  tr: Boolean
  createdAt: Date
  type: Float
  lm: Date
  c: String
  uniqueId: String
  mu: Array
  sys: Boolean
  price: String
  conver: String
}

input _ConversationGreaterThanOrEqualToArgument {
  unique: Boolean
  updatedAt: Date
  name: String
  objectId: String
  m: Array
  tr: Boolean
  createdAt: Date
  type: Float
  lm: Date
  c: String
  uniqueId: String
  mu: Array
  sys: Boolean
  price: String
  conver: String
}

input _ConversationLessThanArgument {
  unique: Boolean
  updatedAt: Date
  name: String
  objectId: String
  m: Array
  tr: Boolean
  createdAt: Date
  type: Float
  lm: Date
  c: String
  uniqueId: String
  mu: Array
  sys: Boolean
  price: String
  conver: String
}

input _ConversationLessThanOrEqualToArgument {
  unique: Boolean
  updatedAt: Date
  name: String
  objectId: String
  m: Array
  tr: Boolean
  createdAt: Date
  type: Float
  lm: Date
  c: String
  uniqueId: String
  mu: Array
  sys: Boolean
  price: String
  conver: String
}

type _File {
  mime_type: String
  updatedAt: Date
  key: String
  name: String
  objectId: ID
  createdAt: Date
  url: String
  provider: String
  metaData: Object
  bucket: String
}

input _FileContainedInArgument {
  mime_type: [ID]
  updatedAt: [ID]
  key: [ID]
  name: [ID]
  objectId: [ID]
  createdAt: [ID]
  url: [ID]
  provider: [ID]
  metaData: [ID]
  bucket: [ID]
}

input _FileContainsAllArgument {
  mime_type: [ID]
  updatedAt: [ID]
  key: [ID]
  name: [ID]
  objectId: [ID]
  createdAt: [ID]
  url: [ID]
  provider: [ID]
  metaData: [ID]
  bucket: [ID]
}

input _FileEqualToArgument {
  mime_type: String
  updatedAt: Date
  key: String
  name: String
  objectId: String
  createdAt: Date
  url: String
  provider: String
  metaData: Object
  bucket: String
}

input _FileExistsArgument {
  mime_type: Boolean
  updatedAt: Boolean
  key: Boolean
  name: Boolean
  objectId: Boolean
  createdAt: Boolean
  url: Boolean
  provider: Boolean
  metaData: Boolean
  bucket: Boolean
}

enum _FileFields {
  mime_type
  updatedAt
  key
  name
  objectId
  createdAt
  url
  provider
  metaData
  bucket
}

input _FileGreaterThanArgument {
  mime_type: String
  updatedAt: Date
  key: String
  name: String
  objectId: String
  createdAt: Date
  url: String
  provider: String
  metaData: Object
  bucket: String
}

input _FileGreaterThanOrEqualToArgument {
  mime_type: String
  updatedAt: Date
  key: String
  name: String
  objectId: String
  createdAt: Date
  url: String
  provider: String
  metaData: Object
  bucket: String
}

input _FileLessThanArgument {
  mime_type: String
  updatedAt: Date
  key: String
  name: String
  objectId: String
  createdAt: Date
  url: String
  provider: String
  metaData: Object
  bucket: String
}

input _FileLessThanOrEqualToArgument {
  mime_type: String
  updatedAt: Date
  key: String
  name: String
  objectId: String
  createdAt: Date
  url: String
  provider: String
  metaData: Object
  bucket: String
}

type _Followee {
  user: _User
  followee: _User
  objectId: ID
  createdAt: Date
  updatedAt: Date
}

input _FolloweeContainedInArgument {
  user: [ID]
  followee: [ID]
  objectId: [ID]
  createdAt: [ID]
  updatedAt: [ID]
}

input _FolloweeContainsAllArgument {
  user: [ID]
  followee: [ID]
  objectId: [ID]
  createdAt: [ID]
  updatedAt: [ID]
}

input _FolloweeEqualToArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
}

input _FolloweeExistsArgument {
  user: Boolean
  followee: Boolean
  objectId: Boolean
  createdAt: Boolean
  updatedAt: Boolean
}

enum _FolloweeFields {
  user
  followee
  objectId
  createdAt
  updatedAt
}

input _FolloweeGreaterThanArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
}

input _FolloweeGreaterThanOrEqualToArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
}

input _FolloweeLessThanArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
}

input _FolloweeLessThanOrEqualToArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
}

type _Follower {
  user: _User
  follower: _User
  objectId: ID
  createdAt: Date
  updatedAt: Date
}

input _FollowerContainedInArgument {
  user: [ID]
  follower: [ID]
  objectId: [ID]
  createdAt: [ID]
  updatedAt: [ID]
}

input _FollowerContainsAllArgument {
  user: [ID]
  follower: [ID]
  objectId: [ID]
  createdAt: [ID]
  updatedAt: [ID]
}

input _FollowerEqualToArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
}

input _FollowerExistsArgument {
  user: Boolean
  follower: Boolean
  objectId: Boolean
  createdAt: Boolean
  updatedAt: Boolean
}

enum _FollowerFields {
  user
  follower
  objectId
  createdAt
  updatedAt
}

input _FollowerGreaterThanArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
}

input _FollowerGreaterThanOrEqualToArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
}

input _FollowerLessThanArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
}

input _FollowerLessThanOrEqualToArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
}

type _Installation {
  valid: Boolean
  vendor: String
  timeZone: String
  updatedAt: Date
  channels: Array
  objectId: ID
  deviceToken: String
  createdAt: Date
  deviceType: String
  installationId: String
  badge: Float
}

input _InstallationContainedInArgument {
  valid: [ID]
  vendor: [ID]
  timeZone: [ID]
  updatedAt: [ID]
  channels: [ID]
  objectId: [ID]
  deviceToken: [ID]
  createdAt: [ID]
  deviceType: [ID]
  installationId: [ID]
  badge: [ID]
}

input _InstallationContainsAllArgument {
  valid: [ID]
  vendor: [ID]
  timeZone: [ID]
  updatedAt: [ID]
  channels: [ID]
  objectId: [ID]
  deviceToken: [ID]
  createdAt: [ID]
  deviceType: [ID]
  installationId: [ID]
  badge: [ID]
}

input _InstallationEqualToArgument {
  valid: Boolean
  vendor: String
  timeZone: String
  updatedAt: Date
  channels: Array
  objectId: String
  deviceToken: String
  createdAt: Date
  deviceType: String
  installationId: String
  badge: Float
}

input _InstallationExistsArgument {
  valid: Boolean
  vendor: Boolean
  timeZone: Boolean
  updatedAt: Boolean
  channels: Boolean
  objectId: Boolean
  deviceToken: Boolean
  createdAt: Boolean
  deviceType: Boolean
  installationId: Boolean
  badge: Boolean
}

enum _InstallationFields {
  valid
  vendor
  timeZone
  updatedAt
  channels
  objectId
  deviceToken
  createdAt
  deviceType
  installationId
  badge
}

input _InstallationGreaterThanArgument {
  valid: Boolean
  vendor: String
  timeZone: String
  updatedAt: Date
  channels: Array
  objectId: String
  deviceToken: String
  createdAt: Date
  deviceType: String
  installationId: String
  badge: Float
}

input _InstallationGreaterThanOrEqualToArgument {
  valid: Boolean
  vendor: String
  timeZone: String
  updatedAt: Date
  channels: Array
  objectId: String
  deviceToken: String
  createdAt: Date
  deviceType: String
  installationId: String
  badge: Float
}

input _InstallationLessThanArgument {
  valid: Boolean
  vendor: String
  timeZone: String
  updatedAt: Date
  channels: Array
  objectId: String
  deviceToken: String
  createdAt: Date
  deviceType: String
  installationId: String
  badge: Float
}

input _InstallationLessThanOrEqualToArgument {
  valid: Boolean
  vendor: String
  timeZone: String
  updatedAt: Date
  channels: Array
  objectId: String
  deviceToken: String
  createdAt: Date
  deviceType: String
  installationId: String
  badge: Float
}

type _Role {
  name: String
  users(objectId: ID, ascending: _UserFields, descending: _UserFields, limit: Int, equalTo: _UserEqualToArgument, greaterThan: _UserGreaterThanArgument, greaterThanOrEqualTo: _UserGreaterThanOrEqualToArgument, lessThan: _UserLessThanArgument, lessThanOrEqualTo: _UserLessThanOrEqualToArgument, containedIn: _UserContainedInArgument, containsAll: _UserContainsAllArgument, exists: _UserExistsArgument): [_User]
  roles(objectId: ID, ascending: _RoleFields, descending: _RoleFields, limit: Int, equalTo: _RoleEqualToArgument, greaterThan: _RoleGreaterThanArgument, greaterThanOrEqualTo: _RoleGreaterThanOrEqualToArgument, lessThan: _RoleLessThanArgument, lessThanOrEqualTo: _RoleLessThanOrEqualToArgument, containedIn: _RoleContainedInArgument, containsAll: _RoleContainsAllArgument, exists: _RoleExistsArgument): [_Role]
  objectId: ID
  createdAt: Date
  updatedAt: Date
  rolesOf_Role(objectId: ID, ascending: _RoleFields, descending: _RoleFields, limit: Int, equalTo: _RoleEqualToArgument, greaterThan: _RoleGreaterThanArgument, greaterThanOrEqualTo: _RoleGreaterThanOrEqualToArgument, lessThan: _RoleLessThanArgument, lessThanOrEqualTo: _RoleLessThanOrEqualToArgument, containedIn: _RoleContainedInArgument, containsAll: _RoleContainsAllArgument, exists: _RoleExistsArgument): [_Role]
}

input _RoleContainedInArgument {
  name: [ID]
  users: [ID]
  roles: [ID]
  objectId: [ID]
  createdAt: [ID]
  updatedAt: [ID]
}

input _RoleContainsAllArgument {
  name: [ID]
  users: [ID]
  roles: [ID]
  objectId: [ID]
  createdAt: [ID]
  updatedAt: [ID]
}

input _RoleEqualToArgument {
  name: String
  objectId: String
  createdAt: Date
  updatedAt: Date
}

input _RoleExistsArgument {
  name: Boolean
  users: Boolean
  roles: Boolean
  objectId: Boolean
  createdAt: Boolean
  updatedAt: Boolean
}

enum _RoleFields {
  name
  users
  roles
  objectId
  createdAt
  updatedAt
}

input _RoleGreaterThanArgument {
  name: String
  objectId: String
  createdAt: Date
  updatedAt: Date
}

input _RoleGreaterThanOrEqualToArgument {
  name: String
  objectId: String
  createdAt: Date
  updatedAt: Date
}

input _RoleLessThanArgument {
  name: String
  objectId: String
  createdAt: Date
  updatedAt: Date
}

input _RoleLessThanOrEqualToArgument {
  name: String
  objectId: String
  createdAt: Date
  updatedAt: Date
}

type _User {
  salt: String
  indentify: Boolean
  email: String
  sessionToken: String
  updatedAt: Date
  sex: Float
  IDCardNum: String
  password: String
  handIDCard: File
  objectId: ID
  username: String
  createdAt: Date
  emailVerified: Boolean
  mobilePhoneNumber: String
  avatar: File
  IDCardName: String
  IDCard: File
  authData: Object
  mobilePhoneVerified: Boolean
  createdbyOfDemo_Education(objectId: ID, ascending: Demo_EducationFields, descending: Demo_EducationFields, limit: Int, equalTo: Demo_EducationEqualToArgument, greaterThan: Demo_EducationGreaterThanArgument, greaterThanOrEqualTo: Demo_EducationGreaterThanOrEqualToArgument, lessThan: Demo_EducationLessThanArgument, lessThanOrEqualTo: Demo_EducationLessThanOrEqualToArgument, containedIn: Demo_EducationContainedInArgument, containsAll: Demo_EducationContainsAllArgument, exists: Demo_EducationExistsArgument): [Demo_Education]
  createdbyOfCX_ChargeOrder(objectId: ID, ascending: CX_ChargeOrderFields, descending: CX_ChargeOrderFields, limit: Int, equalTo: CX_ChargeOrderEqualToArgument, greaterThan: CX_ChargeOrderGreaterThanArgument, greaterThanOrEqualTo: CX_ChargeOrderGreaterThanOrEqualToArgument, lessThan: CX_ChargeOrderLessThanArgument, lessThanOrEqualTo: CX_ChargeOrderLessThanOrEqualToArgument, containedIn: CX_ChargeOrderContainedInArgument, containsAll: CX_ChargeOrderContainsAllArgument, exists: CX_ChargeOrderExistsArgument): [CX_ChargeOrder]
  updatedbyOfBASE_Sharelog(objectId: ID, ascending: BASE_SharelogFields, descending: BASE_SharelogFields, limit: Int, equalTo: BASE_SharelogEqualToArgument, greaterThan: BASE_SharelogGreaterThanArgument, greaterThanOrEqualTo: BASE_SharelogGreaterThanOrEqualToArgument, lessThan: BASE_SharelogLessThanArgument, lessThanOrEqualTo: BASE_SharelogLessThanOrEqualToArgument, containedIn: BASE_SharelogContainedInArgument, containsAll: BASE_SharelogContainsAllArgument, exists: BASE_SharelogExistsArgument): [BASE_Sharelog]
  createdbyOfBASE_Sharelog(objectId: ID, ascending: BASE_SharelogFields, descending: BASE_SharelogFields, limit: Int, equalTo: BASE_SharelogEqualToArgument, greaterThan: BASE_SharelogGreaterThanArgument, greaterThanOrEqualTo: BASE_SharelogGreaterThanOrEqualToArgument, lessThan: BASE_SharelogLessThanArgument, lessThanOrEqualTo: BASE_SharelogLessThanOrEqualToArgument, containedIn: BASE_SharelogContainedInArgument, containsAll: BASE_SharelogContainsAllArgument, exists: BASE_SharelogExistsArgument): [BASE_Sharelog]
  createdbyOfOrder(objectId: ID, ascending: OrderFields, descending: OrderFields, limit: Int, equalTo: OrderEqualToArgument, greaterThan: OrderGreaterThanArgument, greaterThanOrEqualTo: OrderGreaterThanOrEqualToArgument, lessThan: OrderLessThanArgument, lessThanOrEqualTo: OrderLessThanOrEqualToArgument, containedIn: OrderContainedInArgument, containsAll: OrderContainsAllArgument, exists: OrderExistsArgument): [Order]
  createdbyOfSetting(objectId: ID, ascending: SettingFields, descending: SettingFields, limit: Int, equalTo: SettingEqualToArgument, greaterThan: SettingGreaterThanArgument, greaterThanOrEqualTo: SettingGreaterThanOrEqualToArgument, lessThan: SettingLessThanArgument, lessThanOrEqualTo: SettingLessThanOrEqualToArgument, containedIn: SettingContainedInArgument, containsAll: SettingContainsAllArgument, exists: SettingExistsArgument): [Setting]
  createdbyOfBASE_Sharelog_Cost(objectId: ID, ascending: BASE_Sharelog_CostFields, descending: BASE_Sharelog_CostFields, limit: Int, equalTo: BASE_Sharelog_CostEqualToArgument, greaterThan: BASE_Sharelog_CostGreaterThanArgument, greaterThanOrEqualTo: BASE_Sharelog_CostGreaterThanOrEqualToArgument, lessThan: BASE_Sharelog_CostLessThanArgument, lessThanOrEqualTo: BASE_Sharelog_CostLessThanOrEqualToArgument, containedIn: BASE_Sharelog_CostContainedInArgument, containsAll: BASE_Sharelog_CostContainsAllArgument, exists: BASE_Sharelog_CostExistsArgument): [BASE_Sharelog_Cost]
  createdbyOfStore(objectId: ID, ascending: StoreFields, descending: StoreFields, limit: Int, equalTo: StoreEqualToArgument, greaterThan: StoreGreaterThanArgument, greaterThanOrEqualTo: StoreGreaterThanOrEqualToArgument, lessThan: StoreLessThanArgument, lessThanOrEqualTo: StoreLessThanOrEqualToArgument, containedIn: StoreContainedInArgument, containsAll: StoreContainsAllArgument, exists: StoreExistsArgument): [Store]
  createdbyOfBASE_Transfer(objectId: ID, ascending: BASE_TransferFields, descending: BASE_TransferFields, limit: Int, equalTo: BASE_TransferEqualToArgument, greaterThan: BASE_TransferGreaterThanArgument, greaterThanOrEqualTo: BASE_TransferGreaterThanOrEqualToArgument, lessThan: BASE_TransferLessThanArgument, lessThanOrEqualTo: BASE_TransferLessThanOrEqualToArgument, containedIn: BASE_TransferContainedInArgument, containsAll: BASE_TransferContainsAllArgument, exists: BASE_TransferExistsArgument): [BASE_Transfer]
  createdbyOfCategory(objectId: ID, ascending: CategoryFields, descending: CategoryFields, limit: Int, equalTo: CategoryEqualToArgument, greaterThan: CategoryGreaterThanArgument, greaterThanOrEqualTo: CategoryGreaterThanOrEqualToArgument, lessThan: CategoryLessThanArgument, lessThanOrEqualTo: CategoryLessThanOrEqualToArgument, containedIn: CategoryContainedInArgument, containsAll: CategoryContainsAllArgument, exists: CategoryExistsArgument): [Category]
  createdbyOfCX_Technician_Certificate(objectId: ID, ascending: CX_Technician_CertificateFields, descending: CX_Technician_CertificateFields, limit: Int, equalTo: CX_Technician_CertificateEqualToArgument, greaterThan: CX_Technician_CertificateGreaterThanArgument, greaterThanOrEqualTo: CX_Technician_CertificateGreaterThanOrEqualToArgument, lessThan: CX_Technician_CertificateLessThanArgument, lessThanOrEqualTo: CX_Technician_CertificateLessThanOrEqualToArgument, containedIn: CX_Technician_CertificateContainedInArgument, containsAll: CX_Technician_CertificateContainsAllArgument, exists: CX_Technician_CertificateExistsArgument): [CX_Technician_Certificate]
  createdbyOfBASE_Article(objectId: ID, ascending: BASE_ArticleFields, descending: BASE_ArticleFields, limit: Int, equalTo: BASE_ArticleEqualToArgument, greaterThan: BASE_ArticleGreaterThanArgument, greaterThanOrEqualTo: BASE_ArticleGreaterThanOrEqualToArgument, lessThan: BASE_ArticleLessThanArgument, lessThanOrEqualTo: BASE_ArticleLessThanOrEqualToArgument, containedIn: BASE_ArticleContainedInArgument, containsAll: BASE_ArticleContainsAllArgument, exists: BASE_ArticleExistsArgument): [BASE_Article]
  userOf_Follower(objectId: ID, ascending: _FollowerFields, descending: _FollowerFields, limit: Int, equalTo: _FollowerEqualToArgument, greaterThan: _FollowerGreaterThanArgument, greaterThanOrEqualTo: _FollowerGreaterThanOrEqualToArgument, lessThan: _FollowerLessThanArgument, lessThanOrEqualTo: _FollowerLessThanOrEqualToArgument, containedIn: _FollowerContainedInArgument, containsAll: _FollowerContainsAllArgument, exists: _FollowerExistsArgument): [_Follower]
  followerOf_Follower(objectId: ID, ascending: _FollowerFields, descending: _FollowerFields, limit: Int, equalTo: _FollowerEqualToArgument, greaterThan: _FollowerGreaterThanArgument, greaterThanOrEqualTo: _FollowerGreaterThanOrEqualToArgument, lessThan: _FollowerLessThanArgument, lessThanOrEqualTo: _FollowerLessThanOrEqualToArgument, containedIn: _FollowerContainedInArgument, containsAll: _FollowerContainsAllArgument, exists: _FollowerExistsArgument): [_Follower]
  createdbyOfBASE_Address(objectId: ID, ascending: BASE_AddressFields, descending: BASE_AddressFields, limit: Int, equalTo: BASE_AddressEqualToArgument, greaterThan: BASE_AddressGreaterThanArgument, greaterThanOrEqualTo: BASE_AddressGreaterThanOrEqualToArgument, lessThan: BASE_AddressLessThanArgument, lessThanOrEqualTo: BASE_AddressLessThanOrEqualToArgument, containedIn: BASE_AddressContainedInArgument, containsAll: BASE_AddressContainsAllArgument, exists: BASE_AddressExistsArgument): [BASE_Address]
  createdbyOfCustomer_FavoriteLine(objectId: ID, ascending: Customer_FavoriteLineFields, descending: Customer_FavoriteLineFields, limit: Int, equalTo: Customer_FavoriteLineEqualToArgument, greaterThan: Customer_FavoriteLineGreaterThanArgument, greaterThanOrEqualTo: Customer_FavoriteLineGreaterThanOrEqualToArgument, lessThan: Customer_FavoriteLineLessThanArgument, lessThanOrEqualTo: Customer_FavoriteLineLessThanOrEqualToArgument, containedIn: Customer_FavoriteLineContainedInArgument, containsAll: Customer_FavoriteLineContainsAllArgument, exists: Customer_FavoriteLineExistsArgument): [Customer_FavoriteLine]
  createdbyOfCX_Service(objectId: ID, ascending: CX_ServiceFields, descending: CX_ServiceFields, limit: Int, equalTo: CX_ServiceEqualToArgument, greaterThan: CX_ServiceGreaterThanArgument, greaterThanOrEqualTo: CX_ServiceGreaterThanOrEqualToArgument, lessThan: CX_ServiceLessThanArgument, lessThanOrEqualTo: CX_ServiceLessThanOrEqualToArgument, containedIn: CX_ServiceContainedInArgument, containsAll: CX_ServiceContainsAllArgument, exists: CX_ServiceExistsArgument): [CX_Service]
  userOfCustomer(objectId: ID, ascending: CustomerFields, descending: CustomerFields, limit: Int, equalTo: CustomerEqualToArgument, greaterThan: CustomerGreaterThanArgument, greaterThanOrEqualTo: CustomerGreaterThanOrEqualToArgument, lessThan: CustomerLessThanArgument, lessThanOrEqualTo: CustomerLessThanOrEqualToArgument, containedIn: CustomerContainedInArgument, containsAll: CustomerContainsAllArgument, exists: CustomerExistsArgument): [Customer]
  createdbyOfCustomer(objectId: ID, ascending: CustomerFields, descending: CustomerFields, limit: Int, equalTo: CustomerEqualToArgument, greaterThan: CustomerGreaterThanArgument, greaterThanOrEqualTo: CustomerGreaterThanOrEqualToArgument, lessThan: CustomerLessThanArgument, lessThanOrEqualTo: CustomerLessThanOrEqualToArgument, containedIn: CustomerContainedInArgument, containsAll: CustomerContainsAllArgument, exists: CustomerExistsArgument): [Customer]
  createdbyOfTechnician_Region(objectId: ID, ascending: Technician_RegionFields, descending: Technician_RegionFields, limit: Int, equalTo: Technician_RegionEqualToArgument, greaterThan: Technician_RegionGreaterThanArgument, greaterThanOrEqualTo: Technician_RegionGreaterThanOrEqualToArgument, lessThan: Technician_RegionLessThanArgument, lessThanOrEqualTo: Technician_RegionLessThanOrEqualToArgument, containedIn: Technician_RegionContainedInArgument, containsAll: Technician_RegionContainsAllArgument, exists: Technician_RegionExistsArgument): [Technician_Region]
  createdbyOfTechnician(objectId: ID, ascending: TechnicianFields, descending: TechnicianFields, limit: Int, equalTo: TechnicianEqualToArgument, greaterThan: TechnicianGreaterThanArgument, greaterThanOrEqualTo: TechnicianGreaterThanOrEqualToArgument, lessThan: TechnicianLessThanArgument, lessThanOrEqualTo: TechnicianLessThanOrEqualToArgument, containedIn: TechnicianContainedInArgument, containsAll: TechnicianContainsAllArgument, exists: TechnicianExistsArgument): [Technician]
  createdbyOfTechnician_Certificate(objectId: ID, ascending: Technician_CertificateFields, descending: Technician_CertificateFields, limit: Int, equalTo: Technician_CertificateEqualToArgument, greaterThan: Technician_CertificateGreaterThanArgument, greaterThanOrEqualTo: Technician_CertificateGreaterThanOrEqualToArgument, lessThan: Technician_CertificateLessThanArgument, lessThanOrEqualTo: Technician_CertificateLessThanOrEqualToArgument, containedIn: Technician_CertificateContainedInArgument, containsAll: Technician_CertificateContainsAllArgument, exists: Technician_CertificateExistsArgument): [Technician_Certificate]
  createdbyOfStore_Category(objectId: ID, ascending: Store_CategoryFields, descending: Store_CategoryFields, limit: Int, equalTo: Store_CategoryEqualToArgument, greaterThan: Store_CategoryGreaterThanArgument, greaterThanOrEqualTo: Store_CategoryGreaterThanOrEqualToArgument, lessThan: Store_CategoryLessThanArgument, lessThanOrEqualTo: Store_CategoryLessThanOrEqualToArgument, containedIn: Store_CategoryContainedInArgument, containsAll: Store_CategoryContainsAllArgument, exists: Store_CategoryExistsArgument): [Store_Category]
  createdbyOfCX_DeliveryOrder(objectId: ID, ascending: CX_DeliveryOrderFields, descending: CX_DeliveryOrderFields, limit: Int, equalTo: CX_DeliveryOrderEqualToArgument, greaterThan: CX_DeliveryOrderGreaterThanArgument, greaterThanOrEqualTo: CX_DeliveryOrderGreaterThanOrEqualToArgument, lessThan: CX_DeliveryOrderLessThanArgument, lessThanOrEqualTo: CX_DeliveryOrderLessThanOrEqualToArgument, containedIn: CX_DeliveryOrderContainedInArgument, containsAll: CX_DeliveryOrderContainsAllArgument, exists: CX_DeliveryOrderExistsArgument): [CX_DeliveryOrder]
  createdbyOfCustomer_CartSKU(objectId: ID, ascending: Customer_CartSKUFields, descending: Customer_CartSKUFields, limit: Int, equalTo: Customer_CartSKUEqualToArgument, greaterThan: Customer_CartSKUGreaterThanArgument, greaterThanOrEqualTo: Customer_CartSKUGreaterThanOrEqualToArgument, lessThan: Customer_CartSKULessThanArgument, lessThanOrEqualTo: Customer_CartSKULessThanOrEqualToArgument, containedIn: Customer_CartSKUContainedInArgument, containsAll: Customer_CartSKUContainsAllArgument, exists: Customer_CartSKUExistsArgument): [Customer_CartSKU]
  createdbyOfActivity(objectId: ID, ascending: ActivityFields, descending: ActivityFields, limit: Int, equalTo: ActivityEqualToArgument, greaterThan: ActivityGreaterThanArgument, greaterThanOrEqualTo: ActivityGreaterThanOrEqualToArgument, lessThan: ActivityLessThanArgument, lessThanOrEqualTo: ActivityLessThanOrEqualToArgument, containedIn: ActivityContainedInArgument, containsAll: ActivityContainsAllArgument, exists: ActivityExistsArgument): [Activity]
  createdbyOfCustomer_Address(objectId: ID, ascending: Customer_AddressFields, descending: Customer_AddressFields, limit: Int, equalTo: Customer_AddressEqualToArgument, greaterThan: Customer_AddressGreaterThanArgument, greaterThanOrEqualTo: Customer_AddressGreaterThanOrEqualToArgument, lessThan: Customer_AddressLessThanArgument, lessThanOrEqualTo: Customer_AddressLessThanOrEqualToArgument, containedIn: Customer_AddressContainedInArgument, containsAll: Customer_AddressContainsAllArgument, exists: Customer_AddressExistsArgument): [Customer_Address]
  createdbyOfStore_Branch(objectId: ID, ascending: Store_BranchFields, descending: Store_BranchFields, limit: Int, equalTo: Store_BranchEqualToArgument, greaterThan: Store_BranchGreaterThanArgument, greaterThanOrEqualTo: Store_BranchGreaterThanOrEqualToArgument, lessThan: Store_BranchLessThanArgument, lessThanOrEqualTo: Store_BranchLessThanOrEqualToArgument, containedIn: Store_BranchContainedInArgument, containsAll: Store_BranchContainsAllArgument, exists: Store_BranchExistsArgument): [Store_Branch]
  createdbyOfCX_Technician_Experience(objectId: ID, ascending: CX_Technician_ExperienceFields, descending: CX_Technician_ExperienceFields, limit: Int, equalTo: CX_Technician_ExperienceEqualToArgument, greaterThan: CX_Technician_ExperienceGreaterThanArgument, greaterThanOrEqualTo: CX_Technician_ExperienceGreaterThanOrEqualToArgument, lessThan: CX_Technician_ExperienceLessThanArgument, lessThanOrEqualTo: CX_Technician_ExperienceLessThanOrEqualToArgument, containedIn: CX_Technician_ExperienceContainedInArgument, containsAll: CX_Technician_ExperienceContainsAllArgument, exists: CX_Technician_ExperienceExistsArgument): [CX_Technician_Experience]
  createdbyOfTopic(objectId: ID, ascending: TopicFields, descending: TopicFields, limit: Int, equalTo: TopicEqualToArgument, greaterThan: TopicGreaterThanArgument, greaterThanOrEqualTo: TopicGreaterThanOrEqualToArgument, lessThan: TopicLessThanArgument, lessThanOrEqualTo: TopicLessThanOrEqualToArgument, containedIn: TopicContainedInArgument, containsAll: TopicContainsAllArgument, exists: TopicExistsArgument): [Topic]
  userOf_Followee(objectId: ID, ascending: _FolloweeFields, descending: _FolloweeFields, limit: Int, equalTo: _FolloweeEqualToArgument, greaterThan: _FolloweeGreaterThanArgument, greaterThanOrEqualTo: _FolloweeGreaterThanOrEqualToArgument, lessThan: _FolloweeLessThanArgument, lessThanOrEqualTo: _FolloweeLessThanOrEqualToArgument, containedIn: _FolloweeContainedInArgument, containsAll: _FolloweeContainsAllArgument, exists: _FolloweeExistsArgument): [_Followee]
  followeeOf_Followee(objectId: ID, ascending: _FolloweeFields, descending: _FolloweeFields, limit: Int, equalTo: _FolloweeEqualToArgument, greaterThan: _FolloweeGreaterThanArgument, greaterThanOrEqualTo: _FolloweeGreaterThanOrEqualToArgument, lessThan: _FolloweeLessThanArgument, lessThanOrEqualTo: _FolloweeLessThanOrEqualToArgument, containedIn: _FolloweeContainedInArgument, containsAll: _FolloweeContainsAllArgument, exists: _FolloweeExistsArgument): [_Followee]
  createdbyOfTechnician_Category(objectId: ID, ascending: Technician_CategoryFields, descending: Technician_CategoryFields, limit: Int, equalTo: Technician_CategoryEqualToArgument, greaterThan: Technician_CategoryGreaterThanArgument, greaterThanOrEqualTo: Technician_CategoryGreaterThanOrEqualToArgument, lessThan: Technician_CategoryLessThanArgument, lessThanOrEqualTo: Technician_CategoryLessThanOrEqualToArgument, containedIn: Technician_CategoryContainedInArgument, containsAll: Technician_CategoryContainsAllArgument, exists: Technician_CategoryExistsArgument): [Technician_Category]
  updatedbyOfCX_Router(objectId: ID, ascending: CX_RouterFields, descending: CX_RouterFields, limit: Int, equalTo: CX_RouterEqualToArgument, greaterThan: CX_RouterGreaterThanArgument, greaterThanOrEqualTo: CX_RouterGreaterThanOrEqualToArgument, lessThan: CX_RouterLessThanArgument, lessThanOrEqualTo: CX_RouterLessThanOrEqualToArgument, containedIn: CX_RouterContainedInArgument, containsAll: CX_RouterContainsAllArgument, exists: CX_RouterExistsArgument): [CX_Router]
  createdbyOfCX_Router(objectId: ID, ascending: CX_RouterFields, descending: CX_RouterFields, limit: Int, equalTo: CX_RouterEqualToArgument, greaterThan: CX_RouterGreaterThanArgument, greaterThanOrEqualTo: CX_RouterGreaterThanOrEqualToArgument, lessThan: CX_RouterLessThanArgument, lessThanOrEqualTo: CX_RouterLessThanOrEqualToArgument, containedIn: CX_RouterContainedInArgument, containsAll: CX_RouterContainsAllArgument, exists: CX_RouterExistsArgument): [CX_Router]
  createdbyOfCX_Router_Line(objectId: ID, ascending: CX_Router_LineFields, descending: CX_Router_LineFields, limit: Int, equalTo: CX_Router_LineEqualToArgument, greaterThan: CX_Router_LineGreaterThanArgument, greaterThanOrEqualTo: CX_Router_LineGreaterThanOrEqualToArgument, lessThan: CX_Router_LineLessThanArgument, lessThanOrEqualTo: CX_Router_LineLessThanOrEqualToArgument, containedIn: CX_Router_LineContainedInArgument, containsAll: CX_Router_LineContainsAllArgument, exists: CX_Router_LineExistsArgument): [CX_Router_Line]
  createdbyOfCX_Job(objectId: ID, ascending: CX_JobFields, descending: CX_JobFields, limit: Int, equalTo: CX_JobEqualToArgument, greaterThan: CX_JobGreaterThanArgument, greaterThanOrEqualTo: CX_JobGreaterThanOrEqualToArgument, lessThan: CX_JobLessThanArgument, lessThanOrEqualTo: CX_JobLessThanOrEqualToArgument, containedIn: CX_JobContainedInArgument, containsAll: CX_JobContainsAllArgument, exists: CX_JobExistsArgument): [CX_Job]
  createdbyOfSupplier(objectId: ID, ascending: SupplierFields, descending: SupplierFields, limit: Int, equalTo: SupplierEqualToArgument, greaterThan: SupplierGreaterThanArgument, greaterThanOrEqualTo: SupplierGreaterThanOrEqualToArgument, lessThan: SupplierLessThanArgument, lessThanOrEqualTo: SupplierLessThanOrEqualToArgument, containedIn: SupplierContainedInArgument, containsAll: SupplierContainsAllArgument, exists: SupplierExistsArgument): [Supplier]
  createdbyOfAccount(objectId: ID, ascending: AccountFields, descending: AccountFields, limit: Int, equalTo: AccountEqualToArgument, greaterThan: AccountGreaterThanArgument, greaterThanOrEqualTo: AccountGreaterThanOrEqualToArgument, lessThan: AccountLessThanArgument, lessThanOrEqualTo: AccountLessThanOrEqualToArgument, containedIn: AccountContainedInArgument, containsAll: AccountContainsAllArgument, exists: AccountExistsArgument): [Account]
  createdbyOfCX_Calendar_Day(objectId: ID, ascending: CX_Calendar_DayFields, descending: CX_Calendar_DayFields, limit: Int, equalTo: CX_Calendar_DayEqualToArgument, greaterThan: CX_Calendar_DayGreaterThanArgument, greaterThanOrEqualTo: CX_Calendar_DayGreaterThanOrEqualToArgument, lessThan: CX_Calendar_DayLessThanArgument, lessThanOrEqualTo: CX_Calendar_DayLessThanOrEqualToArgument, containedIn: CX_Calendar_DayContainedInArgument, containsAll: CX_Calendar_DayContainsAllArgument, exists: CX_Calendar_DayExistsArgument): [CX_Calendar_Day]
  createdbyOfBASE_Payment(objectId: ID, ascending: BASE_PaymentFields, descending: BASE_PaymentFields, limit: Int, equalTo: BASE_PaymentEqualToArgument, greaterThan: BASE_PaymentGreaterThanArgument, greaterThanOrEqualTo: BASE_PaymentGreaterThanOrEqualToArgument, lessThan: BASE_PaymentLessThanArgument, lessThanOrEqualTo: BASE_PaymentLessThanOrEqualToArgument, containedIn: BASE_PaymentContainedInArgument, containsAll: BASE_PaymentContainsAllArgument, exists: BASE_PaymentExistsArgument): [BASE_Payment]
  updatedbyOfCX_Store(objectId: ID, ascending: CX_StoreFields, descending: CX_StoreFields, limit: Int, equalTo: CX_StoreEqualToArgument, greaterThan: CX_StoreGreaterThanArgument, greaterThanOrEqualTo: CX_StoreGreaterThanOrEqualToArgument, lessThan: CX_StoreLessThanArgument, lessThanOrEqualTo: CX_StoreLessThanOrEqualToArgument, containedIn: CX_StoreContainedInArgument, containsAll: CX_StoreContainsAllArgument, exists: CX_StoreExistsArgument): [CX_Store]
  createdbyOfCX_Store(objectId: ID, ascending: CX_StoreFields, descending: CX_StoreFields, limit: Int, equalTo: CX_StoreEqualToArgument, greaterThan: CX_StoreGreaterThanArgument, greaterThanOrEqualTo: CX_StoreGreaterThanOrEqualToArgument, lessThan: CX_StoreLessThanArgument, lessThanOrEqualTo: CX_StoreLessThanOrEqualToArgument, containedIn: CX_StoreContainedInArgument, containsAll: CX_StoreContainsAllArgument, exists: CX_StoreExistsArgument): [CX_Store]
  createdbyOfBASE_Region(objectId: ID, ascending: BASE_RegionFields, descending: BASE_RegionFields, limit: Int, equalTo: BASE_RegionEqualToArgument, greaterThan: BASE_RegionGreaterThanArgument, greaterThanOrEqualTo: BASE_RegionGreaterThanOrEqualToArgument, lessThan: BASE_RegionLessThanArgument, lessThanOrEqualTo: BASE_RegionLessThanOrEqualToArgument, containedIn: BASE_RegionContainedInArgument, containsAll: BASE_RegionContainsAllArgument, exists: BASE_RegionExistsArgument): [BASE_Region]
  updatedbyOfCX_Technician(objectId: ID, ascending: CX_TechnicianFields, descending: CX_TechnicianFields, limit: Int, equalTo: CX_TechnicianEqualToArgument, greaterThan: CX_TechnicianGreaterThanArgument, greaterThanOrEqualTo: CX_TechnicianGreaterThanOrEqualToArgument, lessThan: CX_TechnicianLessThanArgument, lessThanOrEqualTo: CX_TechnicianLessThanOrEqualToArgument, containedIn: CX_TechnicianContainedInArgument, containsAll: CX_TechnicianContainsAllArgument, exists: CX_TechnicianExistsArgument): [CX_Technician]
  createdbyOfCX_Technician(objectId: ID, ascending: CX_TechnicianFields, descending: CX_TechnicianFields, limit: Int, equalTo: CX_TechnicianEqualToArgument, greaterThan: CX_TechnicianGreaterThanArgument, greaterThanOrEqualTo: CX_TechnicianGreaterThanOrEqualToArgument, lessThan: CX_TechnicianLessThanArgument, lessThanOrEqualTo: CX_TechnicianLessThanOrEqualToArgument, containedIn: CX_TechnicianContainedInArgument, containsAll: CX_TechnicianContainsAllArgument, exists: CX_TechnicianExistsArgument): [CX_Technician]
  usersOf_Role(objectId: ID, ascending: _RoleFields, descending: _RoleFields, limit: Int, equalTo: _RoleEqualToArgument, greaterThan: _RoleGreaterThanArgument, greaterThanOrEqualTo: _RoleGreaterThanOrEqualToArgument, lessThan: _RoleLessThanArgument, lessThanOrEqualTo: _RoleLessThanOrEqualToArgument, containedIn: _RoleContainedInArgument, containsAll: _RoleContainsAllArgument, exists: _RoleExistsArgument): [_Role]
  createdbyOfCX_Technician_Region(objectId: ID, ascending: CX_Technician_RegionFields, descending: CX_Technician_RegionFields, limit: Int, equalTo: CX_Technician_RegionEqualToArgument, greaterThan: CX_Technician_RegionGreaterThanArgument, greaterThanOrEqualTo: CX_Technician_RegionGreaterThanOrEqualToArgument, lessThan: CX_Technician_RegionLessThanArgument, lessThanOrEqualTo: CX_Technician_RegionLessThanOrEqualToArgument, containedIn: CX_Technician_RegionContainedInArgument, containsAll: CX_Technician_RegionContainsAllArgument, exists: CX_Technician_RegionExistsArgument): [CX_Technician_Region]
  createdbyOfCX_SaleOrder(objectId: ID, ascending: CX_SaleOrderFields, descending: CX_SaleOrderFields, limit: Int, equalTo: CX_SaleOrderEqualToArgument, greaterThan: CX_SaleOrderGreaterThanArgument, greaterThanOrEqualTo: CX_SaleOrderGreaterThanOrEqualToArgument, lessThan: CX_SaleOrderLessThanArgument, lessThanOrEqualTo: CX_SaleOrderLessThanOrEqualToArgument, containedIn: CX_SaleOrderContainedInArgument, containsAll: CX_SaleOrderContainsAllArgument, exists: CX_SaleOrderExistsArgument): [CX_SaleOrder]
  createdbyOfDemo(objectId: ID, ascending: DemoFields, descending: DemoFields, limit: Int, equalTo: DemoEqualToArgument, greaterThan: DemoGreaterThanArgument, greaterThanOrEqualTo: DemoGreaterThanOrEqualToArgument, lessThan: DemoLessThanArgument, lessThanOrEqualTo: DemoLessThanOrEqualToArgument, containedIn: DemoContainedInArgument, containsAll: DemoContainsAllArgument, exists: DemoExistsArgument): [Demo]
  userOfBASE_Customer(objectId: ID, ascending: BASE_CustomerFields, descending: BASE_CustomerFields, limit: Int, equalTo: BASE_CustomerEqualToArgument, greaterThan: BASE_CustomerGreaterThanArgument, greaterThanOrEqualTo: BASE_CustomerGreaterThanOrEqualToArgument, lessThan: BASE_CustomerLessThanArgument, lessThanOrEqualTo: BASE_CustomerLessThanOrEqualToArgument, containedIn: BASE_CustomerContainedInArgument, containsAll: BASE_CustomerContainsAllArgument, exists: BASE_CustomerExistsArgument): [BASE_Customer]
  createdbyOfBASE_Customer(objectId: ID, ascending: BASE_CustomerFields, descending: BASE_CustomerFields, limit: Int, equalTo: BASE_CustomerEqualToArgument, greaterThan: BASE_CustomerGreaterThanArgument, greaterThanOrEqualTo: BASE_CustomerGreaterThanOrEqualToArgument, lessThan: BASE_CustomerLessThanArgument, lessThanOrEqualTo: BASE_CustomerLessThanOrEqualToArgument, containedIn: BASE_CustomerContainedInArgument, containsAll: BASE_CustomerContainsAllArgument, exists: BASE_CustomerExistsArgument): [BASE_Customer]
  createdbyOfPayment(objectId: ID, ascending: PaymentFields, descending: PaymentFields, limit: Int, equalTo: PaymentEqualToArgument, greaterThan: PaymentGreaterThanArgument, greaterThanOrEqualTo: PaymentGreaterThanOrEqualToArgument, lessThan: PaymentLessThanArgument, lessThanOrEqualTo: PaymentLessThanOrEqualToArgument, containedIn: PaymentContainedInArgument, containsAll: PaymentContainsAllArgument, exists: PaymentExistsArgument): [Payment]
  createdbyOfBASE_Account(objectId: ID, ascending: BASE_AccountFields, descending: BASE_AccountFields, limit: Int, equalTo: BASE_AccountEqualToArgument, greaterThan: BASE_AccountGreaterThanArgument, greaterThanOrEqualTo: BASE_AccountGreaterThanOrEqualToArgument, lessThan: BASE_AccountLessThanArgument, lessThanOrEqualTo: BASE_AccountLessThanOrEqualToArgument, containedIn: BASE_AccountContainedInArgument, containsAll: BASE_AccountContainsAllArgument, exists: BASE_AccountExistsArgument): [BASE_Account]
  createdbyOfDemand(objectId: ID, ascending: DemandFields, descending: DemandFields, limit: Int, equalTo: DemandEqualToArgument, greaterThan: DemandGreaterThanArgument, greaterThanOrEqualTo: DemandGreaterThanOrEqualToArgument, lessThan: DemandLessThanArgument, lessThanOrEqualTo: DemandLessThanOrEqualToArgument, containedIn: DemandContainedInArgument, containsAll: DemandContainsAllArgument, exists: DemandExistsArgument): [Demand]
  createdbyOfDemo_Experience(objectId: ID, ascending: Demo_ExperienceFields, descending: Demo_ExperienceFields, limit: Int, equalTo: Demo_ExperienceEqualToArgument, greaterThan: Demo_ExperienceGreaterThanArgument, greaterThanOrEqualTo: Demo_ExperienceGreaterThanOrEqualToArgument, lessThan: Demo_ExperienceLessThanArgument, lessThanOrEqualTo: Demo_ExperienceLessThanOrEqualToArgument, containedIn: Demo_ExperienceContainedInArgument, containsAll: Demo_ExperienceContainsAllArgument, exists: Demo_ExperienceExistsArgument): [Demo_Experience]
  createdbyOfEmployee(objectId: ID, ascending: EmployeeFields, descending: EmployeeFields, limit: Int, equalTo: EmployeeEqualToArgument, greaterThan: EmployeeGreaterThanArgument, greaterThanOrEqualTo: EmployeeGreaterThanOrEqualToArgument, lessThan: EmployeeLessThanArgument, lessThanOrEqualTo: EmployeeLessThanOrEqualToArgument, containedIn: EmployeeContainedInArgument, containsAll: EmployeeContainsAllArgument, exists: EmployeeExistsArgument): [Employee]
  createdbyOfCX_Store_Category(objectId: ID, ascending: CX_Store_CategoryFields, descending: CX_Store_CategoryFields, limit: Int, equalTo: CX_Store_CategoryEqualToArgument, greaterThan: CX_Store_CategoryGreaterThanArgument, greaterThanOrEqualTo: CX_Store_CategoryGreaterThanOrEqualToArgument, lessThan: CX_Store_CategoryLessThanArgument, lessThanOrEqualTo: CX_Store_CategoryLessThanOrEqualToArgument, containedIn: CX_Store_CategoryContainedInArgument, containsAll: CX_Store_CategoryContainsAllArgument, exists: CX_Store_CategoryExistsArgument): [CX_Store_Category]
  createdbyOfCX_Studio(objectId: ID, ascending: CX_StudioFields, descending: CX_StudioFields, limit: Int, equalTo: CX_StudioEqualToArgument, greaterThan: CX_StudioGreaterThanArgument, greaterThanOrEqualTo: CX_StudioGreaterThanOrEqualToArgument, lessThan: CX_StudioLessThanArgument, lessThanOrEqualTo: CX_StudioLessThanOrEqualToArgument, containedIn: CX_StudioContainedInArgument, containsAll: CX_StudioContainsAllArgument, exists: CX_StudioExistsArgument): [CX_Studio]
  createdbyOfItem_Region(objectId: ID, ascending: Item_RegionFields, descending: Item_RegionFields, limit: Int, equalTo: Item_RegionEqualToArgument, greaterThan: Item_RegionGreaterThanArgument, greaterThanOrEqualTo: Item_RegionGreaterThanOrEqualToArgument, lessThan: Item_RegionLessThanArgument, lessThanOrEqualTo: Item_RegionLessThanOrEqualToArgument, containedIn: Item_RegionContainedInArgument, containsAll: Item_RegionContainsAllArgument, exists: Item_RegionExistsArgument): [Item_Region]
  createdbyOfReviews(objectId: ID, ascending: ReviewsFields, descending: ReviewsFields, limit: Int, equalTo: ReviewsEqualToArgument, greaterThan: ReviewsGreaterThanArgument, greaterThanOrEqualTo: ReviewsGreaterThanOrEqualToArgument, lessThan: ReviewsLessThanArgument, lessThanOrEqualTo: ReviewsLessThanOrEqualToArgument, containedIn: ReviewsContainedInArgument, containsAll: ReviewsContainsAllArgument, exists: ReviewsExistsArgument): [Reviews]
  createdbyOfSKU(objectId: ID, ascending: SKUFields, descending: SKUFields, limit: Int, equalTo: SKUEqualToArgument, greaterThan: SKUGreaterThanArgument, greaterThanOrEqualTo: SKUGreaterThanOrEqualToArgument, lessThan: SKULessThanArgument, lessThanOrEqualTo: SKULessThanOrEqualToArgument, containedIn: SKUContainedInArgument, containsAll: SKUContainsAllArgument, exists: SKUExistsArgument): [SKU]
  createdbyOfCX_PurchaseOrder(objectId: ID, ascending: CX_PurchaseOrderFields, descending: CX_PurchaseOrderFields, limit: Int, equalTo: CX_PurchaseOrderEqualToArgument, greaterThan: CX_PurchaseOrderGreaterThanArgument, greaterThanOrEqualTo: CX_PurchaseOrderGreaterThanOrEqualToArgument, lessThan: CX_PurchaseOrderLessThanArgument, lessThanOrEqualTo: CX_PurchaseOrderLessThanOrEqualToArgument, containedIn: CX_PurchaseOrderContainedInArgument, containsAll: CX_PurchaseOrderContainsAllArgument, exists: CX_PurchaseOrderExistsArgument): [CX_PurchaseOrder]
  createdbyOfOrder_Line(objectId: ID, ascending: Order_LineFields, descending: Order_LineFields, limit: Int, equalTo: Order_LineEqualToArgument, greaterThan: Order_LineGreaterThanArgument, greaterThanOrEqualTo: Order_LineGreaterThanOrEqualToArgument, lessThan: Order_LineLessThanArgument, lessThanOrEqualTo: Order_LineLessThanOrEqualToArgument, containedIn: Order_LineContainedInArgument, containsAll: Order_LineContainsAllArgument, exists: Order_LineExistsArgument): [Order_Line]
  createdbyOfItem(objectId: ID, ascending: ItemFields, descending: ItemFields, limit: Int, equalTo: ItemEqualToArgument, greaterThan: ItemGreaterThanArgument, greaterThanOrEqualTo: ItemGreaterThanOrEqualToArgument, lessThan: ItemLessThanArgument, lessThanOrEqualTo: ItemLessThanOrEqualToArgument, containedIn: ItemContainedInArgument, containsAll: ItemContainsAllArgument, exists: ItemExistsArgument): [Item]
  createdbyOfEmployee_Experience(objectId: ID, ascending: Employee_ExperienceFields, descending: Employee_ExperienceFields, limit: Int, equalTo: Employee_ExperienceEqualToArgument, greaterThan: Employee_ExperienceGreaterThanArgument, greaterThanOrEqualTo: Employee_ExperienceGreaterThanOrEqualToArgument, lessThan: Employee_ExperienceLessThanArgument, lessThanOrEqualTo: Employee_ExperienceLessThanOrEqualToArgument, containedIn: Employee_ExperienceContainedInArgument, containsAll: Employee_ExperienceContainsAllArgument, exists: Employee_ExperienceExistsArgument): [Employee_Experience]
  createdbyOfRegion(objectId: ID, ascending: RegionFields, descending: RegionFields, limit: Int, equalTo: RegionEqualToArgument, greaterThan: RegionGreaterThanArgument, greaterThanOrEqualTo: RegionGreaterThanOrEqualToArgument, lessThan: RegionLessThanArgument, lessThanOrEqualTo: RegionLessThanOrEqualToArgument, containedIn: RegionContainedInArgument, containsAll: RegionContainsAllArgument, exists: RegionExistsArgument): [Region]
  createdbyOfSupplier_Category(objectId: ID, ascending: Supplier_CategoryFields, descending: Supplier_CategoryFields, limit: Int, equalTo: Supplier_CategoryEqualToArgument, greaterThan: Supplier_CategoryGreaterThanArgument, greaterThanOrEqualTo: Supplier_CategoryGreaterThanOrEqualToArgument, lessThan: Supplier_CategoryLessThanArgument, lessThanOrEqualTo: Supplier_CategoryLessThanOrEqualToArgument, containedIn: Supplier_CategoryContainedInArgument, containsAll: Supplier_CategoryContainsAllArgument, exists: Supplier_CategoryExistsArgument): [Supplier_Category]
  createdbyOfBASE_Category(objectId: ID, ascending: BASE_CategoryFields, descending: BASE_CategoryFields, limit: Int, equalTo: BASE_CategoryEqualToArgument, greaterThan: BASE_CategoryGreaterThanArgument, greaterThanOrEqualTo: BASE_CategoryGreaterThanOrEqualToArgument, lessThan: BASE_CategoryLessThanArgument, lessThanOrEqualTo: BASE_CategoryLessThanOrEqualToArgument, containedIn: BASE_CategoryContainedInArgument, containsAll: BASE_CategoryContainsAllArgument, exists: BASE_CategoryExistsArgument): [BASE_Category]
  updatedbyOfCX_Calendar(objectId: ID, ascending: CX_CalendarFields, descending: CX_CalendarFields, limit: Int, equalTo: CX_CalendarEqualToArgument, greaterThan: CX_CalendarGreaterThanArgument, greaterThanOrEqualTo: CX_CalendarGreaterThanOrEqualToArgument, lessThan: CX_CalendarLessThanArgument, lessThanOrEqualTo: CX_CalendarLessThanOrEqualToArgument, containedIn: CX_CalendarContainedInArgument, containsAll: CX_CalendarContainsAllArgument, exists: CX_CalendarExistsArgument): [CX_Calendar]
  createdbyOfCX_Calendar(objectId: ID, ascending: CX_CalendarFields, descending: CX_CalendarFields, limit: Int, equalTo: CX_CalendarEqualToArgument, greaterThan: CX_CalendarGreaterThanArgument, greaterThanOrEqualTo: CX_CalendarGreaterThanOrEqualToArgument, lessThan: CX_CalendarLessThanArgument, lessThanOrEqualTo: CX_CalendarLessThanOrEqualToArgument, containedIn: CX_CalendarContainedInArgument, containsAll: CX_CalendarContainsAllArgument, exists: CX_CalendarExistsArgument): [CX_Calendar]
  createdbyOfTechnician_Experience(objectId: ID, ascending: Technician_ExperienceFields, descending: Technician_ExperienceFields, limit: Int, equalTo: Technician_ExperienceEqualToArgument, greaterThan: Technician_ExperienceGreaterThanArgument, greaterThanOrEqualTo: Technician_ExperienceGreaterThanOrEqualToArgument, lessThan: Technician_ExperienceLessThanArgument, lessThanOrEqualTo: Technician_ExperienceLessThanOrEqualToArgument, containedIn: Technician_ExperienceContainedInArgument, containsAll: Technician_ExperienceContainsAllArgument, exists: Technician_ExperienceExistsArgument): [Technician_Experience]
  updatedbyOfCX_BOM(objectId: ID, ascending: CX_BOMFields, descending: CX_BOMFields, limit: Int, equalTo: CX_BOMEqualToArgument, greaterThan: CX_BOMGreaterThanArgument, greaterThanOrEqualTo: CX_BOMGreaterThanOrEqualToArgument, lessThan: CX_BOMLessThanArgument, lessThanOrEqualTo: CX_BOMLessThanOrEqualToArgument, containedIn: CX_BOMContainedInArgument, containsAll: CX_BOMContainsAllArgument, exists: CX_BOMExistsArgument): [CX_BOM]
  createdbyOfCX_BOM(objectId: ID, ascending: CX_BOMFields, descending: CX_BOMFields, limit: Int, equalTo: CX_BOMEqualToArgument, greaterThan: CX_BOMGreaterThanArgument, greaterThanOrEqualTo: CX_BOMGreaterThanOrEqualToArgument, lessThan: CX_BOMLessThanArgument, lessThanOrEqualTo: CX_BOMLessThanOrEqualToArgument, containedIn: CX_BOMContainedInArgument, containsAll: CX_BOMContainsAllArgument, exists: CX_BOMExistsArgument): [CX_BOM]
  createdbyOfCX_BOM_Line(objectId: ID, ascending: CX_BOM_LineFields, descending: CX_BOM_LineFields, limit: Int, equalTo: CX_BOM_LineEqualToArgument, greaterThan: CX_BOM_LineGreaterThanArgument, greaterThanOrEqualTo: CX_BOM_LineGreaterThanOrEqualToArgument, lessThan: CX_BOM_LineLessThanArgument, lessThanOrEqualTo: CX_BOM_LineLessThanOrEqualToArgument, containedIn: CX_BOM_LineContainedInArgument, containsAll: CX_BOM_LineContainsAllArgument, exists: CX_BOM_LineExistsArgument): [CX_BOM_Line]
  createdbyOfTransfer(objectId: ID, ascending: TransferFields, descending: TransferFields, limit: Int, equalTo: TransferEqualToArgument, greaterThan: TransferGreaterThanArgument, greaterThanOrEqualTo: TransferGreaterThanOrEqualToArgument, lessThan: TransferLessThanArgument, lessThanOrEqualTo: TransferLessThanOrEqualToArgument, containedIn: TransferContainedInArgument, containsAll: TransferContainsAllArgument, exists: TransferExistsArgument): [Transfer]
}

input _UserContainedInArgument {
  salt: [ID]
  indentify: [ID]
  email: [ID]
  sessionToken: [ID]
  updatedAt: [ID]
  sex: [ID]
  IDCardNum: [ID]
  password: [ID]
  handIDCard: [ID]
  objectId: [ID]
  username: [ID]
  createdAt: [ID]
  emailVerified: [ID]
  mobilePhoneNumber: [ID]
  avatar: [ID]
  IDCardName: [ID]
  IDCard: [ID]
  authData: [ID]
  mobilePhoneVerified: [ID]
}

input _UserContainsAllArgument {
  salt: [ID]
  indentify: [ID]
  email: [ID]
  sessionToken: [ID]
  updatedAt: [ID]
  sex: [ID]
  IDCardNum: [ID]
  password: [ID]
  handIDCard: [ID]
  objectId: [ID]
  username: [ID]
  createdAt: [ID]
  emailVerified: [ID]
  mobilePhoneNumber: [ID]
  avatar: [ID]
  IDCardName: [ID]
  IDCard: [ID]
  authData: [ID]
  mobilePhoneVerified: [ID]
}

input _UserEqualToArgument {
  salt: String
  indentify: Boolean
  email: String
  sessionToken: String
  updatedAt: Date
  sex: Float
  IDCardNum: String
  password: String
  handIDCard: File
  objectId: String
  username: String
  createdAt: Date
  emailVerified: Boolean
  mobilePhoneNumber: String
  avatar: File
  IDCardName: String
  IDCard: File
  authData: Object
  mobilePhoneVerified: Boolean
}

input _UserExistsArgument {
  salt: Boolean
  indentify: Boolean
  email: Boolean
  sessionToken: Boolean
  updatedAt: Boolean
  sex: Boolean
  IDCardNum: Boolean
  password: Boolean
  handIDCard: Boolean
  objectId: Boolean
  username: Boolean
  createdAt: Boolean
  emailVerified: Boolean
  mobilePhoneNumber: Boolean
  avatar: Boolean
  IDCardName: Boolean
  IDCard: Boolean
  authData: Boolean
  mobilePhoneVerified: Boolean
}

enum _UserFields {
  salt
  indentify
  email
  sessionToken
  updatedAt
  sex
  IDCardNum
  password
  handIDCard
  objectId
  username
  createdAt
  emailVerified
  mobilePhoneNumber
  avatar
  IDCardName
  IDCard
  authData
  mobilePhoneVerified
}

input _UserGreaterThanArgument {
  salt: String
  indentify: Boolean
  email: String
  sessionToken: String
  updatedAt: Date
  sex: Float
  IDCardNum: String
  password: String
  handIDCard: File
  objectId: String
  username: String
  createdAt: Date
  emailVerified: Boolean
  mobilePhoneNumber: String
  avatar: File
  IDCardName: String
  IDCard: File
  authData: Object
  mobilePhoneVerified: Boolean
}

input _UserGreaterThanOrEqualToArgument {
  salt: String
  indentify: Boolean
  email: String
  sessionToken: String
  updatedAt: Date
  sex: Float
  IDCardNum: String
  password: String
  handIDCard: File
  objectId: String
  username: String
  createdAt: Date
  emailVerified: Boolean
  mobilePhoneNumber: String
  avatar: File
  IDCardName: String
  IDCard: File
  authData: Object
  mobilePhoneVerified: Boolean
}

input _UserLessThanArgument {
  salt: String
  indentify: Boolean
  email: String
  sessionToken: String
  updatedAt: Date
  sex: Float
  IDCardNum: String
  password: String
  handIDCard: File
  objectId: String
  username: String
  createdAt: Date
  emailVerified: Boolean
  mobilePhoneNumber: String
  avatar: File
  IDCardName: String
  IDCard: File
  authData: Object
  mobilePhoneVerified: Boolean
}

input _UserLessThanOrEqualToArgument {
  salt: String
  indentify: Boolean
  email: String
  sessionToken: String
  updatedAt: Date
  sex: Float
  IDCardNum: String
  password: String
  handIDCard: File
  objectId: String
  username: String
  createdAt: Date
  emailVerified: Boolean
  mobilePhoneNumber: String
  avatar: File
  IDCardName: String
  IDCard: File
  authData: Object
  mobilePhoneVerified: Boolean
}

type Account {
  supplier: Supplier
  updatedAt: Date
  accountno: String
  store: Store
  technician: Technician
  name: String
  ownertype: Float
  objectId: ID
  store_name: String
  createdAt: Date
  type: Float
  state: Float
  supplier_name: String
  Customer: Customer
  code: String
  customer_cardno: String
  Customer_name: String
  technician_name: String
  createdby: _User
  fromaccountOfTransfer(objectId: ID, ascending: TransferFields, descending: TransferFields, limit: Int, equalTo: TransferEqualToArgument, greaterThan: TransferGreaterThanArgument, greaterThanOrEqualTo: TransferGreaterThanOrEqualToArgument, lessThan: TransferLessThanArgument, lessThanOrEqualTo: TransferLessThanOrEqualToArgument, containedIn: TransferContainedInArgument, containsAll: TransferContainsAllArgument, exists: TransferExistsArgument): [Transfer]
  toaccountOfTransfer(objectId: ID, ascending: TransferFields, descending: TransferFields, limit: Int, equalTo: TransferEqualToArgument, greaterThan: TransferGreaterThanArgument, greaterThanOrEqualTo: TransferGreaterThanOrEqualToArgument, lessThan: TransferLessThanArgument, lessThanOrEqualTo: TransferLessThanOrEqualToArgument, containedIn: TransferContainedInArgument, containsAll: TransferContainsAllArgument, exists: TransferExistsArgument): [Transfer]
}

input AccountContainedInArgument {
  supplier: [ID]
  updatedAt: [ID]
  accountno: [ID]
  store: [ID]
  technician: [ID]
  name: [ID]
  ownertype: [ID]
  objectId: [ID]
  store_name: [ID]
  createdAt: [ID]
  type: [ID]
  state: [ID]
  supplier_name: [ID]
  Customer: [ID]
  code: [ID]
  customer_cardno: [ID]
  Customer_name: [ID]
  technician_name: [ID]
  createdby: [ID]
}

input AccountContainsAllArgument {
  supplier: [ID]
  updatedAt: [ID]
  accountno: [ID]
  store: [ID]
  technician: [ID]
  name: [ID]
  ownertype: [ID]
  objectId: [ID]
  store_name: [ID]
  createdAt: [ID]
  type: [ID]
  state: [ID]
  supplier_name: [ID]
  Customer: [ID]
  code: [ID]
  customer_cardno: [ID]
  Customer_name: [ID]
  technician_name: [ID]
  createdby: [ID]
}

input AccountEqualToArgument {
  updatedAt: Date
  accountno: String
  name: String
  ownertype: Float
  objectId: String
  store_name: String
  createdAt: Date
  type: Float
  state: Float
  supplier_name: String
  code: String
  customer_cardno: String
  Customer_name: String
  technician_name: String
}

input AccountExistsArgument {
  supplier: Boolean
  updatedAt: Boolean
  accountno: Boolean
  store: Boolean
  technician: Boolean
  name: Boolean
  ownertype: Boolean
  objectId: Boolean
  store_name: Boolean
  createdAt: Boolean
  type: Boolean
  state: Boolean
  supplier_name: Boolean
  Customer: Boolean
  code: Boolean
  customer_cardno: Boolean
  Customer_name: Boolean
  technician_name: Boolean
  createdby: Boolean
}

enum AccountFields {
  supplier
  updatedAt
  accountno
  store
  technician
  name
  ownertype
  objectId
  store_name
  createdAt
  type
  state
  supplier_name
  Customer
  code
  customer_cardno
  Customer_name
  technician_name
  createdby
}

input AccountGreaterThanArgument {
  updatedAt: Date
  accountno: String
  name: String
  ownertype: Float
  objectId: String
  store_name: String
  createdAt: Date
  type: Float
  state: Float
  supplier_name: String
  code: String
  customer_cardno: String
  Customer_name: String
  technician_name: String
}

input AccountGreaterThanOrEqualToArgument {
  updatedAt: Date
  accountno: String
  name: String
  ownertype: Float
  objectId: String
  store_name: String
  createdAt: Date
  type: Float
  state: Float
  supplier_name: String
  code: String
  customer_cardno: String
  Customer_name: String
  technician_name: String
}

input AccountLessThanArgument {
  updatedAt: Date
  accountno: String
  name: String
  ownertype: Float
  objectId: String
  store_name: String
  createdAt: Date
  type: Float
  state: Float
  supplier_name: String
  code: String
  customer_cardno: String
  Customer_name: String
  technician_name: String
}

input AccountLessThanOrEqualToArgument {
  updatedAt: Date
  accountno: String
  name: String
  ownertype: Float
  objectId: String
  store_name: String
  createdAt: Date
  type: Float
  state: Float
  supplier_name: String
  code: String
  customer_cardno: String
  Customer_name: String
  technician_name: String
}

type Activity {
  updatedAt: Date
  name: String
  objectId: ID
  createdAt: Date
  state: Float
  code: String
  createdby: _User
}

input ActivityContainedInArgument {
  updatedAt: [ID]
  name: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  code: [ID]
  createdby: [ID]
}

input ActivityContainsAllArgument {
  updatedAt: [ID]
  name: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  code: [ID]
  createdby: [ID]
}

input ActivityEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  code: String
}

input ActivityExistsArgument {
  updatedAt: Boolean
  name: Boolean
  objectId: Boolean
  createdAt: Boolean
  state: Boolean
  code: Boolean
  createdby: Boolean
}

enum ActivityFields {
  updatedAt
  name
  objectId
  createdAt
  state
  code
  createdby
}

input ActivityGreaterThanArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  code: String
}

input ActivityGreaterThanOrEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  code: String
}

input ActivityLessThanArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  code: String
}

input ActivityLessThanOrEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  code: String
}

type allJSON {
  objectId: ID
  createdAt: Date
  updatedAt: Date
}

input allJSONContainedInArgument {
  objectId: [ID]
  createdAt: [ID]
  updatedAt: [ID]
}

input allJSONContainsAllArgument {
  objectId: [ID]
  createdAt: [ID]
  updatedAt: [ID]
}

input allJSONEqualToArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
}

input allJSONExistsArgument {
  objectId: Boolean
  createdAt: Boolean
  updatedAt: Boolean
}

enum allJSONFields {
  objectId
  createdAt
  updatedAt
}

input allJSONGreaterThanArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
}

input allJSONGreaterThanOrEqualToArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
}

input allJSONLessThanArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
}

input allJSONLessThanOrEqualToArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
}

scalar Array

type Article {
  updatedAt: Date
  name: String
  objectId: ID
  createdAt: Date
  state: Float
  count: Float
  url: String
  pic: String
}

input ArticleContainedInArgument {
  updatedAt: [ID]
  name: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  count: [ID]
  url: [ID]
  pic: [ID]
}

input ArticleContainsAllArgument {
  updatedAt: [ID]
  name: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  count: [ID]
  url: [ID]
  pic: [ID]
}

input ArticleEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  count: Float
  url: String
  pic: String
}

input ArticleExistsArgument {
  updatedAt: Boolean
  name: Boolean
  objectId: Boolean
  createdAt: Boolean
  state: Boolean
  count: Boolean
  url: Boolean
  pic: Boolean
}

enum ArticleFields {
  updatedAt
  name
  objectId
  createdAt
  state
  count
  url
  pic
}

input ArticleGreaterThanArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  count: Float
  url: String
  pic: String
}

input ArticleGreaterThanOrEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  count: Float
  url: String
  pic: String
}

input ArticleLessThanArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  count: Float
  url: String
  pic: String
}

input ArticleLessThanOrEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  count: Float
  url: String
  pic: String
}

type BASE_Account {
  updatedAt: Date
  accountno: String
  name: String
  ownertype: Float
  objectId: ID
  createdAt: Date
  type: Float
  state: Float
  Customer: BASE_Customer
  code: String
  Customer_code: String
  customer_cardno: String
  Customer_name: String
  createdby: _User
  fromaccountOfBASE_Transfer(objectId: ID, ascending: BASE_TransferFields, descending: BASE_TransferFields, limit: Int, equalTo: BASE_TransferEqualToArgument, greaterThan: BASE_TransferGreaterThanArgument, greaterThanOrEqualTo: BASE_TransferGreaterThanOrEqualToArgument, lessThan: BASE_TransferLessThanArgument, lessThanOrEqualTo: BASE_TransferLessThanOrEqualToArgument, containedIn: BASE_TransferContainedInArgument, containsAll: BASE_TransferContainsAllArgument, exists: BASE_TransferExistsArgument): [BASE_Transfer]
  toaccountOfBASE_Transfer(objectId: ID, ascending: BASE_TransferFields, descending: BASE_TransferFields, limit: Int, equalTo: BASE_TransferEqualToArgument, greaterThan: BASE_TransferGreaterThanArgument, greaterThanOrEqualTo: BASE_TransferGreaterThanOrEqualToArgument, lessThan: BASE_TransferLessThanArgument, lessThanOrEqualTo: BASE_TransferLessThanOrEqualToArgument, containedIn: BASE_TransferContainedInArgument, containsAll: BASE_TransferContainsAllArgument, exists: BASE_TransferExistsArgument): [BASE_Transfer]
  accountOfCX_Store(objectId: ID, ascending: CX_StoreFields, descending: CX_StoreFields, limit: Int, equalTo: CX_StoreEqualToArgument, greaterThan: CX_StoreGreaterThanArgument, greaterThanOrEqualTo: CX_StoreGreaterThanOrEqualToArgument, lessThan: CX_StoreLessThanArgument, lessThanOrEqualTo: CX_StoreLessThanOrEqualToArgument, containedIn: CX_StoreContainedInArgument, containsAll: CX_StoreContainsAllArgument, exists: CX_StoreExistsArgument): [CX_Store]
  accountOfCX_Technician(objectId: ID, ascending: CX_TechnicianFields, descending: CX_TechnicianFields, limit: Int, equalTo: CX_TechnicianEqualToArgument, greaterThan: CX_TechnicianGreaterThanArgument, greaterThanOrEqualTo: CX_TechnicianGreaterThanOrEqualToArgument, lessThan: CX_TechnicianLessThanArgument, lessThanOrEqualTo: CX_TechnicianLessThanOrEqualToArgument, containedIn: CX_TechnicianContainedInArgument, containsAll: CX_TechnicianContainsAllArgument, exists: CX_TechnicianExistsArgument): [CX_Technician]
}

input BASE_AccountContainedInArgument {
  updatedAt: [ID]
  accountno: [ID]
  name: [ID]
  ownertype: [ID]
  objectId: [ID]
  createdAt: [ID]
  type: [ID]
  state: [ID]
  Customer: [ID]
  code: [ID]
  Customer_code: [ID]
  customer_cardno: [ID]
  Customer_name: [ID]
  createdby: [ID]
}

input BASE_AccountContainsAllArgument {
  updatedAt: [ID]
  accountno: [ID]
  name: [ID]
  ownertype: [ID]
  objectId: [ID]
  createdAt: [ID]
  type: [ID]
  state: [ID]
  Customer: [ID]
  code: [ID]
  Customer_code: [ID]
  customer_cardno: [ID]
  Customer_name: [ID]
  createdby: [ID]
}

input BASE_AccountEqualToArgument {
  updatedAt: Date
  accountno: String
  name: String
  ownertype: Float
  objectId: String
  createdAt: Date
  type: Float
  state: Float
  code: String
  Customer_code: String
  customer_cardno: String
  Customer_name: String
}

input BASE_AccountExistsArgument {
  updatedAt: Boolean
  accountno: Boolean
  name: Boolean
  ownertype: Boolean
  objectId: Boolean
  createdAt: Boolean
  type: Boolean
  state: Boolean
  Customer: Boolean
  code: Boolean
  Customer_code: Boolean
  customer_cardno: Boolean
  Customer_name: Boolean
  createdby: Boolean
}

enum BASE_AccountFields {
  updatedAt
  accountno
  name
  ownertype
  objectId
  createdAt
  type
  state
  Customer
  code
  Customer_code
  customer_cardno
  Customer_name
  createdby
}

input BASE_AccountGreaterThanArgument {
  updatedAt: Date
  accountno: String
  name: String
  ownertype: Float
  objectId: String
  createdAt: Date
  type: Float
  state: Float
  code: String
  Customer_code: String
  customer_cardno: String
  Customer_name: String
}

input BASE_AccountGreaterThanOrEqualToArgument {
  updatedAt: Date
  accountno: String
  name: String
  ownertype: Float
  objectId: String
  createdAt: Date
  type: Float
  state: Float
  code: String
  Customer_code: String
  customer_cardno: String
  Customer_name: String
}

input BASE_AccountLessThanArgument {
  updatedAt: Date
  accountno: String
  name: String
  ownertype: Float
  objectId: String
  createdAt: Date
  type: Float
  state: Float
  code: String
  Customer_code: String
  customer_cardno: String
  Customer_name: String
}

input BASE_AccountLessThanOrEqualToArgument {
  updatedAt: Date
  accountno: String
  name: String
  ownertype: Float
  objectId: String
  createdAt: Date
  type: Float
  state: Float
  code: String
  Customer_code: String
  customer_cardno: String
  Customer_name: String
}

type BASE_Address {
  updatedAt: Date
  name: String
  objectId: ID
  createdAt: Date
  state: Float
  code: String
  createdby: _User
  shippingAddressOfCX_SaleOrder(objectId: ID, ascending: CX_SaleOrderFields, descending: CX_SaleOrderFields, limit: Int, equalTo: CX_SaleOrderEqualToArgument, greaterThan: CX_SaleOrderGreaterThanArgument, greaterThanOrEqualTo: CX_SaleOrderGreaterThanOrEqualToArgument, lessThan: CX_SaleOrderLessThanArgument, lessThanOrEqualTo: CX_SaleOrderLessThanOrEqualToArgument, containedIn: CX_SaleOrderContainedInArgument, containsAll: CX_SaleOrderContainsAllArgument, exists: CX_SaleOrderExistsArgument): [CX_SaleOrder]
}

input BASE_AddressContainedInArgument {
  updatedAt: [ID]
  name: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  code: [ID]
  createdby: [ID]
}

input BASE_AddressContainsAllArgument {
  updatedAt: [ID]
  name: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  code: [ID]
  createdby: [ID]
}

input BASE_AddressEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  code: String
}

input BASE_AddressExistsArgument {
  updatedAt: Boolean
  name: Boolean
  objectId: Boolean
  createdAt: Boolean
  state: Boolean
  code: Boolean
  createdby: Boolean
}

enum BASE_AddressFields {
  updatedAt
  name
  objectId
  createdAt
  state
  code
  createdby
}

input BASE_AddressGreaterThanArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  code: String
}

input BASE_AddressGreaterThanOrEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  code: String
}

input BASE_AddressLessThanArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  code: String
}

input BASE_AddressLessThanOrEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  code: String
}

type BASE_Article {
  updatedAt: Date
  desc: String
  logo: File
  content: String
  name: String
  objectId: ID
  createdAt: Date
  state: Float
  count: Float
  url: String
  code: String
  pic: File
  createdby: _User
}

input BASE_ArticleContainedInArgument {
  updatedAt: [ID]
  desc: [ID]
  logo: [ID]
  content: [ID]
  name: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  count: [ID]
  url: [ID]
  code: [ID]
  pic: [ID]
  createdby: [ID]
}

input BASE_ArticleContainsAllArgument {
  updatedAt: [ID]
  desc: [ID]
  logo: [ID]
  content: [ID]
  name: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  count: [ID]
  url: [ID]
  code: [ID]
  pic: [ID]
  createdby: [ID]
}

input BASE_ArticleEqualToArgument {
  updatedAt: Date
  desc: String
  logo: File
  content: String
  name: String
  objectId: String
  createdAt: Date
  state: Float
  count: Float
  url: String
  code: String
  pic: File
}

input BASE_ArticleExistsArgument {
  updatedAt: Boolean
  desc: Boolean
  logo: Boolean
  content: Boolean
  name: Boolean
  objectId: Boolean
  createdAt: Boolean
  state: Boolean
  count: Boolean
  url: Boolean
  code: Boolean
  pic: Boolean
  createdby: Boolean
}

enum BASE_ArticleFields {
  updatedAt
  desc
  logo
  content
  name
  objectId
  createdAt
  state
  count
  url
  code
  pic
  createdby
}

input BASE_ArticleGreaterThanArgument {
  updatedAt: Date
  desc: String
  logo: File
  content: String
  name: String
  objectId: String
  createdAt: Date
  state: Float
  count: Float
  url: String
  code: String
  pic: File
}

input BASE_ArticleGreaterThanOrEqualToArgument {
  updatedAt: Date
  desc: String
  logo: File
  content: String
  name: String
  objectId: String
  createdAt: Date
  state: Float
  count: Float
  url: String
  code: String
  pic: File
}

input BASE_ArticleLessThanArgument {
  updatedAt: Date
  desc: String
  logo: File
  content: String
  name: String
  objectId: String
  createdAt: Date
  state: Float
  count: Float
  url: String
  code: String
  pic: File
}

input BASE_ArticleLessThanOrEqualToArgument {
  updatedAt: Date
  desc: String
  logo: File
  content: String
  name: String
  objectId: String
  createdAt: Date
  state: Float
  count: Float
  url: String
  code: String
  pic: File
}

type BASE_Category {
  updatedAt: Date
  group: String
  desc: String
  parent: BASE_Category
  name: String
  objectId: ID
  createdAt: Date
  state: Float
  parent_name: String
  parent_code: String
  avatar: File
  code: String
  avatardisable: File
  createdby: _User
  categoryOfCX_Service(objectId: ID, ascending: CX_ServiceFields, descending: CX_ServiceFields, limit: Int, equalTo: CX_ServiceEqualToArgument, greaterThan: CX_ServiceGreaterThanArgument, greaterThanOrEqualTo: CX_ServiceGreaterThanOrEqualToArgument, lessThan: CX_ServiceLessThanArgument, lessThanOrEqualTo: CX_ServiceLessThanOrEqualToArgument, containedIn: CX_ServiceContainedInArgument, containsAll: CX_ServiceContainsAllArgument, exists: CX_ServiceExistsArgument): [CX_Service]
  categoryOfCX_Router(objectId: ID, ascending: CX_RouterFields, descending: CX_RouterFields, limit: Int, equalTo: CX_RouterEqualToArgument, greaterThan: CX_RouterGreaterThanArgument, greaterThanOrEqualTo: CX_RouterGreaterThanOrEqualToArgument, lessThan: CX_RouterLessThanArgument, lessThanOrEqualTo: CX_RouterLessThanOrEqualToArgument, containedIn: CX_RouterContainedInArgument, containsAll: CX_RouterContainsAllArgument, exists: CX_RouterExistsArgument): [CX_Router]
  parentOfBASE_Category(objectId: ID, ascending: BASE_CategoryFields, descending: BASE_CategoryFields, limit: Int, equalTo: BASE_CategoryEqualToArgument, greaterThan: BASE_CategoryGreaterThanArgument, greaterThanOrEqualTo: BASE_CategoryGreaterThanOrEqualToArgument, lessThan: BASE_CategoryLessThanArgument, lessThanOrEqualTo: BASE_CategoryLessThanOrEqualToArgument, containedIn: BASE_CategoryContainedInArgument, containsAll: BASE_CategoryContainsAllArgument, exists: BASE_CategoryExistsArgument): [BASE_Category]
  categoryOfCX_BOM(objectId: ID, ascending: CX_BOMFields, descending: CX_BOMFields, limit: Int, equalTo: CX_BOMEqualToArgument, greaterThan: CX_BOMGreaterThanArgument, greaterThanOrEqualTo: CX_BOMGreaterThanOrEqualToArgument, lessThan: CX_BOMLessThanArgument, lessThanOrEqualTo: CX_BOMLessThanOrEqualToArgument, containedIn: CX_BOMContainedInArgument, containsAll: CX_BOMContainsAllArgument, exists: CX_BOMExistsArgument): [CX_BOM]
}

input BASE_CategoryContainedInArgument {
  updatedAt: [ID]
  group: [ID]
  desc: [ID]
  parent: [ID]
  name: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  parent_name: [ID]
  parent_code: [ID]
  avatar: [ID]
  code: [ID]
  avatardisable: [ID]
  createdby: [ID]
}

input BASE_CategoryContainsAllArgument {
  updatedAt: [ID]
  group: [ID]
  desc: [ID]
  parent: [ID]
  name: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  parent_name: [ID]
  parent_code: [ID]
  avatar: [ID]
  code: [ID]
  avatardisable: [ID]
  createdby: [ID]
}

input BASE_CategoryEqualToArgument {
  updatedAt: Date
  group: String
  desc: String
  name: String
  objectId: String
  createdAt: Date
  state: Float
  parent_name: String
  parent_code: String
  avatar: File
  code: String
  avatardisable: File
}

input BASE_CategoryExistsArgument {
  updatedAt: Boolean
  group: Boolean
  desc: Boolean
  parent: Boolean
  name: Boolean
  objectId: Boolean
  createdAt: Boolean
  state: Boolean
  parent_name: Boolean
  parent_code: Boolean
  avatar: Boolean
  code: Boolean
  avatardisable: Boolean
  createdby: Boolean
}

enum BASE_CategoryFields {
  updatedAt
  group
  desc
  parent
  name
  objectId
  createdAt
  state
  parent_name
  parent_code
  avatar
  code
  avatardisable
  createdby
}

input BASE_CategoryGreaterThanArgument {
  updatedAt: Date
  group: String
  desc: String
  name: String
  objectId: String
  createdAt: Date
  state: Float
  parent_name: String
  parent_code: String
  avatar: File
  code: String
  avatardisable: File
}

input BASE_CategoryGreaterThanOrEqualToArgument {
  updatedAt: Date
  group: String
  desc: String
  name: String
  objectId: String
  createdAt: Date
  state: Float
  parent_name: String
  parent_code: String
  avatar: File
  code: String
  avatardisable: File
}

input BASE_CategoryLessThanArgument {
  updatedAt: Date
  group: String
  desc: String
  name: String
  objectId: String
  createdAt: Date
  state: Float
  parent_name: String
  parent_code: String
  avatar: File
  code: String
  avatardisable: File
}

input BASE_CategoryLessThanOrEqualToArgument {
  updatedAt: Date
  group: String
  desc: String
  name: String
  objectId: String
  createdAt: Date
  state: Float
  parent_name: String
  parent_code: String
  avatar: File
  code: String
  avatardisable: File
}

type BASE_Customer {
  vipCardNumber: String
  updatedAt: Date
  sex: Float
  region_name: String
  phone: String
  wxcountry: String
  name: String
  objectId: ID
  birthday: Date
  createdAt: Date
  state: Float
  region: BASE_Region
  region_code: String
  avatar: File
  code: String
  wxcity: String
  user: _User
  wxprovince: String
  createdby: _User
  customerOfCX_SaleOrder(objectId: ID, ascending: CX_SaleOrderFields, descending: CX_SaleOrderFields, limit: Int, equalTo: CX_SaleOrderEqualToArgument, greaterThan: CX_SaleOrderGreaterThanArgument, greaterThanOrEqualTo: CX_SaleOrderGreaterThanOrEqualToArgument, lessThan: CX_SaleOrderLessThanArgument, lessThanOrEqualTo: CX_SaleOrderLessThanOrEqualToArgument, containedIn: CX_SaleOrderContainedInArgument, containsAll: CX_SaleOrderContainsAllArgument, exists: CX_SaleOrderExistsArgument): [CX_SaleOrder]
  CustomerOfBASE_Account(objectId: ID, ascending: BASE_AccountFields, descending: BASE_AccountFields, limit: Int, equalTo: BASE_AccountEqualToArgument, greaterThan: BASE_AccountGreaterThanArgument, greaterThanOrEqualTo: BASE_AccountGreaterThanOrEqualToArgument, lessThan: BASE_AccountLessThanArgument, lessThanOrEqualTo: BASE_AccountLessThanOrEqualToArgument, containedIn: BASE_AccountContainedInArgument, containsAll: BASE_AccountContainsAllArgument, exists: BASE_AccountExistsArgument): [BASE_Account]
}

input BASE_CustomerContainedInArgument {
  vipCardNumber: [ID]
  updatedAt: [ID]
  sex: [ID]
  region_name: [ID]
  phone: [ID]
  wxcountry: [ID]
  name: [ID]
  objectId: [ID]
  birthday: [ID]
  createdAt: [ID]
  state: [ID]
  region: [ID]
  region_code: [ID]
  avatar: [ID]
  code: [ID]
  wxcity: [ID]
  user: [ID]
  wxprovince: [ID]
  createdby: [ID]
}

input BASE_CustomerContainsAllArgument {
  vipCardNumber: [ID]
  updatedAt: [ID]
  sex: [ID]
  region_name: [ID]
  phone: [ID]
  wxcountry: [ID]
  name: [ID]
  objectId: [ID]
  birthday: [ID]
  createdAt: [ID]
  state: [ID]
  region: [ID]
  region_code: [ID]
  avatar: [ID]
  code: [ID]
  wxcity: [ID]
  user: [ID]
  wxprovince: [ID]
  createdby: [ID]
}

input BASE_CustomerEqualToArgument {
  vipCardNumber: String
  updatedAt: Date
  sex: Float
  region_name: String
  phone: String
  wxcountry: String
  name: String
  objectId: String
  birthday: Date
  createdAt: Date
  state: Float
  region_code: String
  avatar: File
  code: String
  wxcity: String
  wxprovince: String
}

input BASE_CustomerExistsArgument {
  vipCardNumber: Boolean
  updatedAt: Boolean
  sex: Boolean
  region_name: Boolean
  phone: Boolean
  wxcountry: Boolean
  name: Boolean
  objectId: Boolean
  birthday: Boolean
  createdAt: Boolean
  state: Boolean
  region: Boolean
  region_code: Boolean
  avatar: Boolean
  code: Boolean
  wxcity: Boolean
  user: Boolean
  wxprovince: Boolean
  createdby: Boolean
}

enum BASE_CustomerFields {
  vipCardNumber
  updatedAt
  sex
  region_name
  phone
  wxcountry
  name
  objectId
  birthday
  createdAt
  state
  region
  region_code
  avatar
  code
  wxcity
  user
  wxprovince
  createdby
}

input BASE_CustomerGreaterThanArgument {
  vipCardNumber: String
  updatedAt: Date
  sex: Float
  region_name: String
  phone: String
  wxcountry: String
  name: String
  objectId: String
  birthday: Date
  createdAt: Date
  state: Float
  region_code: String
  avatar: File
  code: String
  wxcity: String
  wxprovince: String
}

input BASE_CustomerGreaterThanOrEqualToArgument {
  vipCardNumber: String
  updatedAt: Date
  sex: Float
  region_name: String
  phone: String
  wxcountry: String
  name: String
  objectId: String
  birthday: Date
  createdAt: Date
  state: Float
  region_code: String
  avatar: File
  code: String
  wxcity: String
  wxprovince: String
}

input BASE_CustomerLessThanArgument {
  vipCardNumber: String
  updatedAt: Date
  sex: Float
  region_name: String
  phone: String
  wxcountry: String
  name: String
  objectId: String
  birthday: Date
  createdAt: Date
  state: Float
  region_code: String
  avatar: File
  code: String
  wxcity: String
  wxprovince: String
}

input BASE_CustomerLessThanOrEqualToArgument {
  vipCardNumber: String
  updatedAt: Date
  sex: Float
  region_name: String
  phone: String
  wxcountry: String
  name: String
  objectId: String
  birthday: Date
  createdAt: Date
  state: Float
  region_code: String
  avatar: File
  code: String
  wxcity: String
  wxprovince: String
}

type BASE_Payment {
  updatedAt: Date
  objectId: ID
  createdAt: Date
  type: Float
  state: Float
  orderno: String
  createdby: _User
  paymentOrderOfBASE_Transfer(objectId: ID, ascending: BASE_TransferFields, descending: BASE_TransferFields, limit: Int, equalTo: BASE_TransferEqualToArgument, greaterThan: BASE_TransferGreaterThanArgument, greaterThanOrEqualTo: BASE_TransferGreaterThanOrEqualToArgument, lessThan: BASE_TransferLessThanArgument, lessThanOrEqualTo: BASE_TransferLessThanOrEqualToArgument, containedIn: BASE_TransferContainedInArgument, containsAll: BASE_TransferContainsAllArgument, exists: BASE_TransferExistsArgument): [BASE_Transfer]
  paymentOrderOfCX_SaleOrder(objectId: ID, ascending: CX_SaleOrderFields, descending: CX_SaleOrderFields, limit: Int, equalTo: CX_SaleOrderEqualToArgument, greaterThan: CX_SaleOrderGreaterThanArgument, greaterThanOrEqualTo: CX_SaleOrderGreaterThanOrEqualToArgument, lessThan: CX_SaleOrderLessThanArgument, lessThanOrEqualTo: CX_SaleOrderLessThanOrEqualToArgument, containedIn: CX_SaleOrderContainedInArgument, containsAll: CX_SaleOrderContainsAllArgument, exists: CX_SaleOrderExistsArgument): [CX_SaleOrder]
}

input BASE_PaymentContainedInArgument {
  updatedAt: [ID]
  objectId: [ID]
  createdAt: [ID]
  type: [ID]
  state: [ID]
  orderno: [ID]
  createdby: [ID]
}

input BASE_PaymentContainsAllArgument {
  updatedAt: [ID]
  objectId: [ID]
  createdAt: [ID]
  type: [ID]
  state: [ID]
  orderno: [ID]
  createdby: [ID]
}

input BASE_PaymentEqualToArgument {
  updatedAt: Date
  objectId: String
  createdAt: Date
  type: Float
  state: Float
  orderno: String
}

input BASE_PaymentExistsArgument {
  updatedAt: Boolean
  objectId: Boolean
  createdAt: Boolean
  type: Boolean
  state: Boolean
  orderno: Boolean
  createdby: Boolean
}

enum BASE_PaymentFields {
  updatedAt
  objectId
  createdAt
  type
  state
  orderno
  createdby
}

input BASE_PaymentGreaterThanArgument {
  updatedAt: Date
  objectId: String
  createdAt: Date
  type: Float
  state: Float
  orderno: String
}

input BASE_PaymentGreaterThanOrEqualToArgument {
  updatedAt: Date
  objectId: String
  createdAt: Date
  type: Float
  state: Float
  orderno: String
}

input BASE_PaymentLessThanArgument {
  updatedAt: Date
  objectId: String
  createdAt: Date
  type: Float
  state: Float
  orderno: String
}

input BASE_PaymentLessThanOrEqualToArgument {
  updatedAt: Date
  objectId: String
  createdAt: Date
  type: Float
  state: Float
  orderno: String
}

type BASE_Region {
  updatedAt: Date
  name: String
  objectId: ID
  createdAt: Date
  state: Float
  radius: Float
  code: String
  shortname: String
  geo_address: GeoPoint
  createdby: _User
  regionOfCX_Store(objectId: ID, ascending: CX_StoreFields, descending: CX_StoreFields, limit: Int, equalTo: CX_StoreEqualToArgument, greaterThan: CX_StoreGreaterThanArgument, greaterThanOrEqualTo: CX_StoreGreaterThanOrEqualToArgument, lessThan: CX_StoreLessThanArgument, lessThanOrEqualTo: CX_StoreLessThanOrEqualToArgument, containedIn: CX_StoreContainedInArgument, containsAll: CX_StoreContainsAllArgument, exists: CX_StoreExistsArgument): [CX_Store]
  shippingRegionOfCX_SaleOrder(objectId: ID, ascending: CX_SaleOrderFields, descending: CX_SaleOrderFields, limit: Int, equalTo: CX_SaleOrderEqualToArgument, greaterThan: CX_SaleOrderGreaterThanArgument, greaterThanOrEqualTo: CX_SaleOrderGreaterThanOrEqualToArgument, lessThan: CX_SaleOrderLessThanArgument, lessThanOrEqualTo: CX_SaleOrderLessThanOrEqualToArgument, containedIn: CX_SaleOrderContainedInArgument, containsAll: CX_SaleOrderContainsAllArgument, exists: CX_SaleOrderExistsArgument): [CX_SaleOrder]
  regionOfBASE_Customer(objectId: ID, ascending: BASE_CustomerFields, descending: BASE_CustomerFields, limit: Int, equalTo: BASE_CustomerEqualToArgument, greaterThan: BASE_CustomerGreaterThanArgument, greaterThanOrEqualTo: BASE_CustomerGreaterThanOrEqualToArgument, lessThan: BASE_CustomerLessThanArgument, lessThanOrEqualTo: BASE_CustomerLessThanOrEqualToArgument, containedIn: BASE_CustomerContainedInArgument, containsAll: BASE_CustomerContainsAllArgument, exists: BASE_CustomerExistsArgument): [BASE_Customer]
}

input BASE_RegionContainedInArgument {
  updatedAt: [ID]
  name: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  radius: [ID]
  code: [ID]
  shortname: [ID]
  geo_address: [ID]
  createdby: [ID]
}

input BASE_RegionContainsAllArgument {
  updatedAt: [ID]
  name: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  radius: [ID]
  code: [ID]
  shortname: [ID]
  geo_address: [ID]
  createdby: [ID]
}

input BASE_RegionEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  radius: Float
  code: String
  shortname: String
  geo_address: GeoPoint
}

input BASE_RegionExistsArgument {
  updatedAt: Boolean
  name: Boolean
  objectId: Boolean
  createdAt: Boolean
  state: Boolean
  radius: Boolean
  code: Boolean
  shortname: Boolean
  geo_address: Boolean
  createdby: Boolean
}

enum BASE_RegionFields {
  updatedAt
  name
  objectId
  createdAt
  state
  radius
  code
  shortname
  geo_address
  createdby
}

input BASE_RegionGreaterThanArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  radius: Float
  code: String
  shortname: String
  geo_address: GeoPoint
}

input BASE_RegionGreaterThanOrEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  radius: Float
  code: String
  shortname: String
  geo_address: GeoPoint
}

input BASE_RegionLessThanArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  radius: Float
  code: String
  shortname: String
  geo_address: GeoPoint
}

input BASE_RegionLessThanOrEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  radius: Float
  code: String
  shortname: String
  geo_address: GeoPoint
}

type BASE_Setting {
  updatedAt: Date
  name: String
  objectId: ID
  createdAt: Date
  type: String
  state: Float
  code: String
  obj: Object
  version: String
  prj: String
}

input BASE_SettingContainedInArgument {
  updatedAt: [ID]
  name: [ID]
  objectId: [ID]
  createdAt: [ID]
  type: [ID]
  state: [ID]
  code: [ID]
  obj: [ID]
  version: [ID]
  prj: [ID]
}

input BASE_SettingContainsAllArgument {
  updatedAt: [ID]
  name: [ID]
  objectId: [ID]
  createdAt: [ID]
  type: [ID]
  state: [ID]
  code: [ID]
  obj: [ID]
  version: [ID]
  prj: [ID]
}

input BASE_SettingEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  type: String
  state: Float
  code: String
  obj: Object
  version: String
  prj: String
}

input BASE_SettingExistsArgument {
  updatedAt: Boolean
  name: Boolean
  objectId: Boolean
  createdAt: Boolean
  type: Boolean
  state: Boolean
  code: Boolean
  obj: Boolean
  version: Boolean
  prj: Boolean
}

enum BASE_SettingFields {
  updatedAt
  name
  objectId
  createdAt
  type
  state
  code
  obj
  version
  prj
}

input BASE_SettingGreaterThanArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  type: String
  state: Float
  code: String
  obj: Object
  version: String
  prj: String
}

input BASE_SettingGreaterThanOrEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  type: String
  state: Float
  code: String
  obj: Object
  version: String
  prj: String
}

input BASE_SettingLessThanArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  type: String
  state: Float
  code: String
  obj: Object
  version: String
  prj: String
}

input BASE_SettingLessThanOrEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  type: String
  state: Float
  code: String
  obj: Object
  version: String
  prj: String
}

type BASE_Sharelog {
  updatedAt: Date
  userid: String
  logno: String
  objectId: ID
  createdAt: Date
  state: Float
  sharecount: Float
  pagecode: String
  clickcount: Float
  updatedby: _User
  createdby: _User
  base_sharelogOfBASE_Sharelog_Cost(objectId: ID, ascending: BASE_Sharelog_CostFields, descending: BASE_Sharelog_CostFields, limit: Int, equalTo: BASE_Sharelog_CostEqualToArgument, greaterThan: BASE_Sharelog_CostGreaterThanArgument, greaterThanOrEqualTo: BASE_Sharelog_CostGreaterThanOrEqualToArgument, lessThan: BASE_Sharelog_CostLessThanArgument, lessThanOrEqualTo: BASE_Sharelog_CostLessThanOrEqualToArgument, containedIn: BASE_Sharelog_CostContainedInArgument, containsAll: BASE_Sharelog_CostContainsAllArgument, exists: BASE_Sharelog_CostExistsArgument): [BASE_Sharelog_Cost]
}

type BASE_Sharelog_Cost {
  updatedAt: Date
  userid: String
  useragent: Object
  objectId: ID
  createdAt: Date
  type: Float
  lineno: Float
  base_sharelog: BASE_Sharelog
  createdby: _User
}

input BASE_Sharelog_CostContainedInArgument {
  updatedAt: [ID]
  userid: [ID]
  useragent: [ID]
  objectId: [ID]
  createdAt: [ID]
  type: [ID]
  lineno: [ID]
  base_sharelog: [ID]
  createdby: [ID]
}

input BASE_Sharelog_CostContainsAllArgument {
  updatedAt: [ID]
  userid: [ID]
  useragent: [ID]
  objectId: [ID]
  createdAt: [ID]
  type: [ID]
  lineno: [ID]
  base_sharelog: [ID]
  createdby: [ID]
}

input BASE_Sharelog_CostEqualToArgument {
  updatedAt: Date
  userid: String
  useragent: Object
  objectId: String
  createdAt: Date
  type: Float
  lineno: Float
}

input BASE_Sharelog_CostExistsArgument {
  updatedAt: Boolean
  userid: Boolean
  useragent: Boolean
  objectId: Boolean
  createdAt: Boolean
  type: Boolean
  lineno: Boolean
  base_sharelog: Boolean
  createdby: Boolean
}

enum BASE_Sharelog_CostFields {
  updatedAt
  userid
  useragent
  objectId
  createdAt
  type
  lineno
  base_sharelog
  createdby
}

input BASE_Sharelog_CostGreaterThanArgument {
  updatedAt: Date
  userid: String
  useragent: Object
  objectId: String
  createdAt: Date
  type: Float
  lineno: Float
}

input BASE_Sharelog_CostGreaterThanOrEqualToArgument {
  updatedAt: Date
  userid: String
  useragent: Object
  objectId: String
  createdAt: Date
  type: Float
  lineno: Float
}

input BASE_Sharelog_CostLessThanArgument {
  updatedAt: Date
  userid: String
  useragent: Object
  objectId: String
  createdAt: Date
  type: Float
  lineno: Float
}

input BASE_Sharelog_CostLessThanOrEqualToArgument {
  updatedAt: Date
  userid: String
  useragent: Object
  objectId: String
  createdAt: Date
  type: Float
  lineno: Float
}

input BASE_SharelogContainedInArgument {
  updatedAt: [ID]
  userid: [ID]
  logno: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  sharecount: [ID]
  pagecode: [ID]
  clickcount: [ID]
  updatedby: [ID]
  createdby: [ID]
}

input BASE_SharelogContainsAllArgument {
  updatedAt: [ID]
  userid: [ID]
  logno: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  sharecount: [ID]
  pagecode: [ID]
  clickcount: [ID]
  updatedby: [ID]
  createdby: [ID]
}

input BASE_SharelogEqualToArgument {
  updatedAt: Date
  userid: String
  logno: String
  objectId: String
  createdAt: Date
  state: Float
  sharecount: Float
  pagecode: String
  clickcount: Float
}

input BASE_SharelogExistsArgument {
  updatedAt: Boolean
  userid: Boolean
  logno: Boolean
  objectId: Boolean
  createdAt: Boolean
  state: Boolean
  sharecount: Boolean
  pagecode: Boolean
  clickcount: Boolean
  updatedby: Boolean
  createdby: Boolean
}

enum BASE_SharelogFields {
  updatedAt
  userid
  logno
  objectId
  createdAt
  state
  sharecount
  pagecode
  clickcount
  updatedby
  createdby
}

input BASE_SharelogGreaterThanArgument {
  updatedAt: Date
  userid: String
  logno: String
  objectId: String
  createdAt: Date
  state: Float
  sharecount: Float
  pagecode: String
  clickcount: Float
}

input BASE_SharelogGreaterThanOrEqualToArgument {
  updatedAt: Date
  userid: String
  logno: String
  objectId: String
  createdAt: Date
  state: Float
  sharecount: Float
  pagecode: String
  clickcount: Float
}

input BASE_SharelogLessThanArgument {
  updatedAt: Date
  userid: String
  logno: String
  objectId: String
  createdAt: Date
  state: Float
  sharecount: Float
  pagecode: String
  clickcount: Float
}

input BASE_SharelogLessThanOrEqualToArgument {
  updatedAt: Date
  userid: String
  logno: String
  objectId: String
  createdAt: Date
  state: Float
  sharecount: Float
  pagecode: String
  clickcount: Float
}

type BASE_Transfer {
  toaccount_code: String
  payobj: Object
  updatedAt: Date
  paymentOrder_orderno: String
  fromaccount: BASE_Account
  fromaccount_code: String
  objectId: ID
  createdAt: Date
  type: Float
  state: Float
  toaccount_name: String
  paymentOrder: BASE_Payment
  orderno: String
  fromaccount_name: String
  toaccount: BASE_Account
  createdby: _User
}

input BASE_TransferContainedInArgument {
  toaccount_code: [ID]
  payobj: [ID]
  updatedAt: [ID]
  paymentOrder_orderno: [ID]
  fromaccount: [ID]
  fromaccount_code: [ID]
  objectId: [ID]
  createdAt: [ID]
  type: [ID]
  state: [ID]
  toaccount_name: [ID]
  paymentOrder: [ID]
  orderno: [ID]
  fromaccount_name: [ID]
  toaccount: [ID]
  createdby: [ID]
}

input BASE_TransferContainsAllArgument {
  toaccount_code: [ID]
  payobj: [ID]
  updatedAt: [ID]
  paymentOrder_orderno: [ID]
  fromaccount: [ID]
  fromaccount_code: [ID]
  objectId: [ID]
  createdAt: [ID]
  type: [ID]
  state: [ID]
  toaccount_name: [ID]
  paymentOrder: [ID]
  orderno: [ID]
  fromaccount_name: [ID]
  toaccount: [ID]
  createdby: [ID]
}

input BASE_TransferEqualToArgument {
  toaccount_code: String
  payobj: Object
  updatedAt: Date
  paymentOrder_orderno: String
  fromaccount_code: String
  objectId: String
  createdAt: Date
  type: Float
  state: Float
  toaccount_name: String
  orderno: String
  fromaccount_name: String
}

input BASE_TransferExistsArgument {
  toaccount_code: Boolean
  payobj: Boolean
  updatedAt: Boolean
  paymentOrder_orderno: Boolean
  fromaccount: Boolean
  fromaccount_code: Boolean
  objectId: Boolean
  createdAt: Boolean
  type: Boolean
  state: Boolean
  toaccount_name: Boolean
  paymentOrder: Boolean
  orderno: Boolean
  fromaccount_name: Boolean
  toaccount: Boolean
  createdby: Boolean
}

enum BASE_TransferFields {
  toaccount_code
  payobj
  updatedAt
  paymentOrder_orderno
  fromaccount
  fromaccount_code
  objectId
  createdAt
  type
  state
  toaccount_name
  paymentOrder
  orderno
  fromaccount_name
  toaccount
  createdby
}

input BASE_TransferGreaterThanArgument {
  toaccount_code: String
  payobj: Object
  updatedAt: Date
  paymentOrder_orderno: String
  fromaccount_code: String
  objectId: String
  createdAt: Date
  type: Float
  state: Float
  toaccount_name: String
  orderno: String
  fromaccount_name: String
}

input BASE_TransferGreaterThanOrEqualToArgument {
  toaccount_code: String
  payobj: Object
  updatedAt: Date
  paymentOrder_orderno: String
  fromaccount_code: String
  objectId: String
  createdAt: Date
  type: Float
  state: Float
  toaccount_name: String
  orderno: String
  fromaccount_name: String
}

input BASE_TransferLessThanArgument {
  toaccount_code: String
  payobj: Object
  updatedAt: Date
  paymentOrder_orderno: String
  fromaccount_code: String
  objectId: String
  createdAt: Date
  type: Float
  state: Float
  toaccount_name: String
  orderno: String
  fromaccount_name: String
}

input BASE_TransferLessThanOrEqualToArgument {
  toaccount_code: String
  payobj: Object
  updatedAt: Date
  paymentOrder_orderno: String
  fromaccount_code: String
  objectId: String
  createdAt: Date
  type: Float
  state: Float
  toaccount_name: String
  orderno: String
  fromaccount_name: String
}

type Category {
  description: String
  updatedAt: Date
  parent: Category
  name: String
  objectId: ID
  createdAt: Date
  type: Float
  state: Float
  icon: File
  code: String
  createdby: _User
  parentOfCategory(objectId: ID, ascending: CategoryFields, descending: CategoryFields, limit: Int, equalTo: CategoryEqualToArgument, greaterThan: CategoryGreaterThanArgument, greaterThanOrEqualTo: CategoryGreaterThanOrEqualToArgument, lessThan: CategoryLessThanArgument, lessThanOrEqualTo: CategoryLessThanOrEqualToArgument, containedIn: CategoryContainedInArgument, containsAll: CategoryContainsAllArgument, exists: CategoryExistsArgument): [Category]
  categoryOfStore_Category(objectId: ID, ascending: Store_CategoryFields, descending: Store_CategoryFields, limit: Int, equalTo: Store_CategoryEqualToArgument, greaterThan: Store_CategoryGreaterThanArgument, greaterThanOrEqualTo: Store_CategoryGreaterThanOrEqualToArgument, lessThan: Store_CategoryLessThanArgument, lessThanOrEqualTo: Store_CategoryLessThanOrEqualToArgument, containedIn: Store_CategoryContainedInArgument, containsAll: Store_CategoryContainsAllArgument, exists: Store_CategoryExistsArgument): [Store_Category]
  categoryOfTechnician_Category(objectId: ID, ascending: Technician_CategoryFields, descending: Technician_CategoryFields, limit: Int, equalTo: Technician_CategoryEqualToArgument, greaterThan: Technician_CategoryGreaterThanArgument, greaterThanOrEqualTo: Technician_CategoryGreaterThanOrEqualToArgument, lessThan: Technician_CategoryLessThanArgument, lessThanOrEqualTo: Technician_CategoryLessThanOrEqualToArgument, containedIn: Technician_CategoryContainedInArgument, containsAll: Technician_CategoryContainsAllArgument, exists: Technician_CategoryExistsArgument): [Technician_Category]
  categoryOfItem(objectId: ID, ascending: ItemFields, descending: ItemFields, limit: Int, equalTo: ItemEqualToArgument, greaterThan: ItemGreaterThanArgument, greaterThanOrEqualTo: ItemGreaterThanOrEqualToArgument, lessThan: ItemLessThanArgument, lessThanOrEqualTo: ItemLessThanOrEqualToArgument, containedIn: ItemContainedInArgument, containsAll: ItemContainsAllArgument, exists: ItemExistsArgument): [Item]
  categoryOfSupplier_Category(objectId: ID, ascending: Supplier_CategoryFields, descending: Supplier_CategoryFields, limit: Int, equalTo: Supplier_CategoryEqualToArgument, greaterThan: Supplier_CategoryGreaterThanArgument, greaterThanOrEqualTo: Supplier_CategoryGreaterThanOrEqualToArgument, lessThan: Supplier_CategoryLessThanArgument, lessThanOrEqualTo: Supplier_CategoryLessThanOrEqualToArgument, containedIn: Supplier_CategoryContainedInArgument, containsAll: Supplier_CategoryContainsAllArgument, exists: Supplier_CategoryExistsArgument): [Supplier_Category]
}

input CategoryContainedInArgument {
  description: [ID]
  updatedAt: [ID]
  parent: [ID]
  name: [ID]
  objectId: [ID]
  createdAt: [ID]
  type: [ID]
  state: [ID]
  icon: [ID]
  code: [ID]
  createdby: [ID]
}

input CategoryContainsAllArgument {
  description: [ID]
  updatedAt: [ID]
  parent: [ID]
  name: [ID]
  objectId: [ID]
  createdAt: [ID]
  type: [ID]
  state: [ID]
  icon: [ID]
  code: [ID]
  createdby: [ID]
}

input CategoryEqualToArgument {
  description: String
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  type: Float
  state: Float
  icon: File
  code: String
}

input CategoryExistsArgument {
  description: Boolean
  updatedAt: Boolean
  parent: Boolean
  name: Boolean
  objectId: Boolean
  createdAt: Boolean
  type: Boolean
  state: Boolean
  icon: Boolean
  code: Boolean
  createdby: Boolean
}

enum CategoryFields {
  description
  updatedAt
  parent
  name
  objectId
  createdAt
  type
  state
  icon
  code
  createdby
}

input CategoryGreaterThanArgument {
  description: String
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  type: Float
  state: Float
  icon: File
  code: String
}

input CategoryGreaterThanOrEqualToArgument {
  description: String
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  type: Float
  state: Float
  icon: File
  code: String
}

input CategoryLessThanArgument {
  description: String
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  type: Float
  state: Float
  icon: File
  code: String
}

input CategoryLessThanOrEqualToArgument {
  description: String
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  type: Float
  state: Float
  icon: File
  code: String
}

type Customer {
  updatedAt: Date
  name: String
  objectId: ID
  createdAt: Date
  state: Float
  code: String
  user: _User
  createdby: _User
  customerOfOrder(objectId: ID, ascending: OrderFields, descending: OrderFields, limit: Int, equalTo: OrderEqualToArgument, greaterThan: OrderGreaterThanArgument, greaterThanOrEqualTo: OrderGreaterThanOrEqualToArgument, lessThan: OrderLessThanArgument, lessThanOrEqualTo: OrderLessThanOrEqualToArgument, containedIn: OrderContainedInArgument, containsAll: OrderContainsAllArgument, exists: OrderExistsArgument): [Order]
  customerOfCustomer_FavoriteLine(objectId: ID, ascending: Customer_FavoriteLineFields, descending: Customer_FavoriteLineFields, limit: Int, equalTo: Customer_FavoriteLineEqualToArgument, greaterThan: Customer_FavoriteLineGreaterThanArgument, greaterThanOrEqualTo: Customer_FavoriteLineGreaterThanOrEqualToArgument, lessThan: Customer_FavoriteLineLessThanArgument, lessThanOrEqualTo: Customer_FavoriteLineLessThanOrEqualToArgument, containedIn: Customer_FavoriteLineContainedInArgument, containsAll: Customer_FavoriteLineContainsAllArgument, exists: Customer_FavoriteLineExistsArgument): [Customer_FavoriteLine]
  customerOfCustomer_CartSKU(objectId: ID, ascending: Customer_CartSKUFields, descending: Customer_CartSKUFields, limit: Int, equalTo: Customer_CartSKUEqualToArgument, greaterThan: Customer_CartSKUGreaterThanArgument, greaterThanOrEqualTo: Customer_CartSKUGreaterThanOrEqualToArgument, lessThan: Customer_CartSKULessThanArgument, lessThanOrEqualTo: Customer_CartSKULessThanOrEqualToArgument, containedIn: Customer_CartSKUContainedInArgument, containsAll: Customer_CartSKUContainsAllArgument, exists: Customer_CartSKUExistsArgument): [Customer_CartSKU]
  customerOfCustomer_Address(objectId: ID, ascending: Customer_AddressFields, descending: Customer_AddressFields, limit: Int, equalTo: Customer_AddressEqualToArgument, greaterThan: Customer_AddressGreaterThanArgument, greaterThanOrEqualTo: Customer_AddressGreaterThanOrEqualToArgument, lessThan: Customer_AddressLessThanArgument, lessThanOrEqualTo: Customer_AddressLessThanOrEqualToArgument, containedIn: Customer_AddressContainedInArgument, containsAll: Customer_AddressContainsAllArgument, exists: Customer_AddressExistsArgument): [Customer_Address]
  CustomerOfCustomer_Address(objectId: ID, ascending: Customer_AddressFields, descending: Customer_AddressFields, limit: Int, equalTo: Customer_AddressEqualToArgument, greaterThan: Customer_AddressGreaterThanArgument, greaterThanOrEqualTo: Customer_AddressGreaterThanOrEqualToArgument, lessThan: Customer_AddressLessThanArgument, lessThanOrEqualTo: Customer_AddressLessThanOrEqualToArgument, containedIn: Customer_AddressContainedInArgument, containsAll: Customer_AddressContainsAllArgument, exists: Customer_AddressExistsArgument): [Customer_Address]
  CustomerOfAccount(objectId: ID, ascending: AccountFields, descending: AccountFields, limit: Int, equalTo: AccountEqualToArgument, greaterThan: AccountGreaterThanArgument, greaterThanOrEqualTo: AccountGreaterThanOrEqualToArgument, lessThan: AccountLessThanArgument, lessThanOrEqualTo: AccountLessThanOrEqualToArgument, containedIn: AccountContainedInArgument, containsAll: AccountContainsAllArgument, exists: AccountExistsArgument): [Account]
}

type Customer_Address {
  address: String
  updatedAt: Date
  region_name: String
  Isdefault: Boolean
  phone: String
  objectId: ID
  createdAt: Date
  state: Float
  customer: Customer
  region: Region
  Customer: Customer
  receivername: String
  lineno: Float
  createdby: _User
}

input Customer_AddressContainedInArgument {
  address: [ID]
  updatedAt: [ID]
  region_name: [ID]
  Isdefault: [ID]
  phone: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  customer: [ID]
  region: [ID]
  Customer: [ID]
  receivername: [ID]
  lineno: [ID]
  createdby: [ID]
}

input Customer_AddressContainsAllArgument {
  address: [ID]
  updatedAt: [ID]
  region_name: [ID]
  Isdefault: [ID]
  phone: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  customer: [ID]
  region: [ID]
  Customer: [ID]
  receivername: [ID]
  lineno: [ID]
  createdby: [ID]
}

input Customer_AddressEqualToArgument {
  address: String
  updatedAt: Date
  region_name: String
  Isdefault: Boolean
  phone: String
  objectId: String
  createdAt: Date
  state: Float
  receivername: String
  lineno: Float
}

input Customer_AddressExistsArgument {
  address: Boolean
  updatedAt: Boolean
  region_name: Boolean
  Isdefault: Boolean
  phone: Boolean
  objectId: Boolean
  createdAt: Boolean
  state: Boolean
  customer: Boolean
  region: Boolean
  Customer: Boolean
  receivername: Boolean
  lineno: Boolean
  createdby: Boolean
}

enum Customer_AddressFields {
  address
  updatedAt
  region_name
  Isdefault
  phone
  objectId
  createdAt
  state
  customer
  region
  Customer
  receivername
  lineno
  createdby
}

input Customer_AddressGreaterThanArgument {
  address: String
  updatedAt: Date
  region_name: String
  Isdefault: Boolean
  phone: String
  objectId: String
  createdAt: Date
  state: Float
  receivername: String
  lineno: Float
}

input Customer_AddressGreaterThanOrEqualToArgument {
  address: String
  updatedAt: Date
  region_name: String
  Isdefault: Boolean
  phone: String
  objectId: String
  createdAt: Date
  state: Float
  receivername: String
  lineno: Float
}

input Customer_AddressLessThanArgument {
  address: String
  updatedAt: Date
  region_name: String
  Isdefault: Boolean
  phone: String
  objectId: String
  createdAt: Date
  state: Float
  receivername: String
  lineno: Float
}

input Customer_AddressLessThanOrEqualToArgument {
  address: String
  updatedAt: Date
  region_name: String
  Isdefault: Boolean
  phone: String
  objectId: String
  createdAt: Date
  state: Float
  receivername: String
  lineno: Float
}

type Customer_CartSKU {
  updatedAt: Date
  objectId: ID
  createdAt: Date
  state: Float
  customer: Customer
  sku: SKU
  qty: Float
  sku_name: String
  lineno: Float
  createdby: _User
}

input Customer_CartSKUContainedInArgument {
  updatedAt: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  customer: [ID]
  sku: [ID]
  qty: [ID]
  sku_name: [ID]
  lineno: [ID]
  createdby: [ID]
}

input Customer_CartSKUContainsAllArgument {
  updatedAt: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  customer: [ID]
  sku: [ID]
  qty: [ID]
  sku_name: [ID]
  lineno: [ID]
  createdby: [ID]
}

input Customer_CartSKUEqualToArgument {
  updatedAt: Date
  objectId: String
  createdAt: Date
  state: Float
  qty: Float
  sku_name: String
  lineno: Float
}

input Customer_CartSKUExistsArgument {
  updatedAt: Boolean
  objectId: Boolean
  createdAt: Boolean
  state: Boolean
  customer: Boolean
  sku: Boolean
  qty: Boolean
  sku_name: Boolean
  lineno: Boolean
  createdby: Boolean
}

enum Customer_CartSKUFields {
  updatedAt
  objectId
  createdAt
  state
  customer
  sku
  qty
  sku_name
  lineno
  createdby
}

input Customer_CartSKUGreaterThanArgument {
  updatedAt: Date
  objectId: String
  createdAt: Date
  state: Float
  qty: Float
  sku_name: String
  lineno: Float
}

input Customer_CartSKUGreaterThanOrEqualToArgument {
  updatedAt: Date
  objectId: String
  createdAt: Date
  state: Float
  qty: Float
  sku_name: String
  lineno: Float
}

input Customer_CartSKULessThanArgument {
  updatedAt: Date
  objectId: String
  createdAt: Date
  state: Float
  qty: Float
  sku_name: String
  lineno: Float
}

input Customer_CartSKULessThanOrEqualToArgument {
  updatedAt: Date
  objectId: String
  createdAt: Date
  state: Float
  qty: Float
  sku_name: String
  lineno: Float
}

type Customer_FavoriteLine {
  updatedAt: Date
  objectId: ID
  createdAt: Date
  state: Float
  customer: Customer
  lineno: Float
  createdby: _User
}

input Customer_FavoriteLineContainedInArgument {
  updatedAt: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  customer: [ID]
  lineno: [ID]
  createdby: [ID]
}

input Customer_FavoriteLineContainsAllArgument {
  updatedAt: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  customer: [ID]
  lineno: [ID]
  createdby: [ID]
}

input Customer_FavoriteLineEqualToArgument {
  updatedAt: Date
  objectId: String
  createdAt: Date
  state: Float
  lineno: Float
}

input Customer_FavoriteLineExistsArgument {
  updatedAt: Boolean
  objectId: Boolean
  createdAt: Boolean
  state: Boolean
  customer: Boolean
  lineno: Boolean
  createdby: Boolean
}

enum Customer_FavoriteLineFields {
  updatedAt
  objectId
  createdAt
  state
  customer
  lineno
  createdby
}

input Customer_FavoriteLineGreaterThanArgument {
  updatedAt: Date
  objectId: String
  createdAt: Date
  state: Float
  lineno: Float
}

input Customer_FavoriteLineGreaterThanOrEqualToArgument {
  updatedAt: Date
  objectId: String
  createdAt: Date
  state: Float
  lineno: Float
}

input Customer_FavoriteLineLessThanArgument {
  updatedAt: Date
  objectId: String
  createdAt: Date
  state: Float
  lineno: Float
}

input Customer_FavoriteLineLessThanOrEqualToArgument {
  updatedAt: Date
  objectId: String
  createdAt: Date
  state: Float
  lineno: Float
}

input CustomerContainedInArgument {
  updatedAt: [ID]
  name: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  code: [ID]
  user: [ID]
  createdby: [ID]
}

input CustomerContainsAllArgument {
  updatedAt: [ID]
  name: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  code: [ID]
  user: [ID]
  createdby: [ID]
}

input CustomerEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  code: String
}

input CustomerExistsArgument {
  updatedAt: Boolean
  name: Boolean
  objectId: Boolean
  createdAt: Boolean
  state: Boolean
  code: Boolean
  user: Boolean
  createdby: Boolean
}

enum CustomerFields {
  updatedAt
  name
  objectId
  createdAt
  state
  code
  user
  createdby
}

input CustomerGreaterThanArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  code: String
}

input CustomerGreaterThanOrEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  code: String
}

input CustomerLessThanArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  code: String
}

input CustomerLessThanOrEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  code: String
}

type CX_BOM {
  category: BASE_Category
  updatedAt: Date
  name: String
  objectId: ID
  createdAt: Date
  state: Float
  category_name: String
  code: String
  category_code: String
  updatedby: _User
  createdby: _User
  cx_bomOfCX_BOM_Line(objectId: ID, ascending: CX_BOM_LineFields, descending: CX_BOM_LineFields, limit: Int, equalTo: CX_BOM_LineEqualToArgument, greaterThan: CX_BOM_LineGreaterThanArgument, greaterThanOrEqualTo: CX_BOM_LineGreaterThanOrEqualToArgument, lessThan: CX_BOM_LineLessThanArgument, lessThanOrEqualTo: CX_BOM_LineLessThanOrEqualToArgument, containedIn: CX_BOM_LineContainedInArgument, containsAll: CX_BOM_LineContainsAllArgument, exists: CX_BOM_LineExistsArgument): [CX_BOM_Line]
}

type CX_BOM_Line {
  objectId: ID
  createdAt: Date
  updatedAt: Date
  cx_bom: CX_BOM
  lineno: Float
  createdby: _User
}

input CX_BOM_LineContainedInArgument {
  objectId: [ID]
  createdAt: [ID]
  updatedAt: [ID]
  cx_bom: [ID]
  lineno: [ID]
  createdby: [ID]
}

input CX_BOM_LineContainsAllArgument {
  objectId: [ID]
  createdAt: [ID]
  updatedAt: [ID]
  cx_bom: [ID]
  lineno: [ID]
  createdby: [ID]
}

input CX_BOM_LineEqualToArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  lineno: Float
}

input CX_BOM_LineExistsArgument {
  objectId: Boolean
  createdAt: Boolean
  updatedAt: Boolean
  cx_bom: Boolean
  lineno: Boolean
  createdby: Boolean
}

enum CX_BOM_LineFields {
  objectId
  createdAt
  updatedAt
  cx_bom
  lineno
  createdby
}

input CX_BOM_LineGreaterThanArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  lineno: Float
}

input CX_BOM_LineGreaterThanOrEqualToArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  lineno: Float
}

input CX_BOM_LineLessThanArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  lineno: Float
}

input CX_BOM_LineLessThanOrEqualToArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  lineno: Float
}

input CX_BOMContainedInArgument {
  category: [ID]
  updatedAt: [ID]
  name: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  category_name: [ID]
  code: [ID]
  category_code: [ID]
  updatedby: [ID]
  createdby: [ID]
}

input CX_BOMContainsAllArgument {
  category: [ID]
  updatedAt: [ID]
  name: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  category_name: [ID]
  code: [ID]
  category_code: [ID]
  updatedby: [ID]
  createdby: [ID]
}

input CX_BOMEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  category_name: String
  code: String
  category_code: String
}

input CX_BOMExistsArgument {
  category: Boolean
  updatedAt: Boolean
  name: Boolean
  objectId: Boolean
  createdAt: Boolean
  state: Boolean
  category_name: Boolean
  code: Boolean
  category_code: Boolean
  updatedby: Boolean
  createdby: Boolean
}

enum CX_BOMFields {
  category
  updatedAt
  name
  objectId
  createdAt
  state
  category_name
  code
  category_code
  updatedby
  createdby
}

input CX_BOMGreaterThanArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  category_name: String
  code: String
  category_code: String
}

input CX_BOMGreaterThanOrEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  category_name: String
  code: String
  category_code: String
}

input CX_BOMLessThanArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  category_name: String
  code: String
  category_code: String
}

input CX_BOMLessThanOrEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  category_name: String
  code: String
  category_code: String
}

type CX_Calendar {
  updatedAt: Date
  technician: CX_Technician
  name: String
  objectId: ID
  createdAt: Date
  state: Float
  technician_code: String
  code: String
  updatedby: _User
  technician_name: String
  createdby: _User
  cx_calendarOfCX_Calendar_Day(objectId: ID, ascending: CX_Calendar_DayFields, descending: CX_Calendar_DayFields, limit: Int, equalTo: CX_Calendar_DayEqualToArgument, greaterThan: CX_Calendar_DayGreaterThanArgument, greaterThanOrEqualTo: CX_Calendar_DayGreaterThanOrEqualToArgument, lessThan: CX_Calendar_DayLessThanArgument, lessThanOrEqualTo: CX_Calendar_DayLessThanOrEqualToArgument, containedIn: CX_Calendar_DayContainedInArgument, containsAll: CX_Calendar_DayContainsAllArgument, exists: CX_Calendar_DayExistsArgument): [CX_Calendar_Day]
}

type CX_Calendar_Day {
  updatedAt: Date
  enable: Boolean
  objectId: ID
  Day: Date
  createdAt: Date
  cx_calendar: CX_Calendar
  lineno: Float
  createdby: _User
}

input CX_Calendar_DayContainedInArgument {
  updatedAt: [ID]
  enable: [ID]
  objectId: [ID]
  Day: [ID]
  createdAt: [ID]
  cx_calendar: [ID]
  lineno: [ID]
  createdby: [ID]
}

input CX_Calendar_DayContainsAllArgument {
  updatedAt: [ID]
  enable: [ID]
  objectId: [ID]
  Day: [ID]
  createdAt: [ID]
  cx_calendar: [ID]
  lineno: [ID]
  createdby: [ID]
}

input CX_Calendar_DayEqualToArgument {
  updatedAt: Date
  enable: Boolean
  objectId: String
  Day: Date
  createdAt: Date
  lineno: Float
}

input CX_Calendar_DayExistsArgument {
  updatedAt: Boolean
  enable: Boolean
  objectId: Boolean
  Day: Boolean
  createdAt: Boolean
  cx_calendar: Boolean
  lineno: Boolean
  createdby: Boolean
}

enum CX_Calendar_DayFields {
  updatedAt
  enable
  objectId
  Day
  createdAt
  cx_calendar
  lineno
  createdby
}

input CX_Calendar_DayGreaterThanArgument {
  updatedAt: Date
  enable: Boolean
  objectId: String
  Day: Date
  createdAt: Date
  lineno: Float
}

input CX_Calendar_DayGreaterThanOrEqualToArgument {
  updatedAt: Date
  enable: Boolean
  objectId: String
  Day: Date
  createdAt: Date
  lineno: Float
}

input CX_Calendar_DayLessThanArgument {
  updatedAt: Date
  enable: Boolean
  objectId: String
  Day: Date
  createdAt: Date
  lineno: Float
}

input CX_Calendar_DayLessThanOrEqualToArgument {
  updatedAt: Date
  enable: Boolean
  objectId: String
  Day: Date
  createdAt: Date
  lineno: Float
}

input CX_CalendarContainedInArgument {
  updatedAt: [ID]
  technician: [ID]
  name: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  technician_code: [ID]
  code: [ID]
  updatedby: [ID]
  technician_name: [ID]
  createdby: [ID]
}

input CX_CalendarContainsAllArgument {
  updatedAt: [ID]
  technician: [ID]
  name: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  technician_code: [ID]
  code: [ID]
  updatedby: [ID]
  technician_name: [ID]
  createdby: [ID]
}

input CX_CalendarEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  technician_code: String
  code: String
  technician_name: String
}

input CX_CalendarExistsArgument {
  updatedAt: Boolean
  technician: Boolean
  name: Boolean
  objectId: Boolean
  createdAt: Boolean
  state: Boolean
  technician_code: Boolean
  code: Boolean
  updatedby: Boolean
  technician_name: Boolean
  createdby: Boolean
}

enum CX_CalendarFields {
  updatedAt
  technician
  name
  objectId
  createdAt
  state
  technician_code
  code
  updatedby
  technician_name
  createdby
}

input CX_CalendarGreaterThanArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  technician_code: String
  code: String
  technician_name: String
}

input CX_CalendarGreaterThanOrEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  technician_code: String
  code: String
  technician_name: String
}

input CX_CalendarLessThanArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  technician_code: String
  code: String
  technician_name: String
}

input CX_CalendarLessThanOrEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  technician_code: String
  code: String
  technician_name: String
}

type CX_ChargeOrder {
  objectId: ID
  createdAt: Date
  updatedAt: Date
  state: Float
  orderno: String
  createdby: _User
}

input CX_ChargeOrderContainedInArgument {
  objectId: [ID]
  createdAt: [ID]
  updatedAt: [ID]
  state: [ID]
  orderno: [ID]
  createdby: [ID]
}

input CX_ChargeOrderContainsAllArgument {
  objectId: [ID]
  createdAt: [ID]
  updatedAt: [ID]
  state: [ID]
  orderno: [ID]
  createdby: [ID]
}

input CX_ChargeOrderEqualToArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  state: Float
  orderno: String
}

input CX_ChargeOrderExistsArgument {
  objectId: Boolean
  createdAt: Boolean
  updatedAt: Boolean
  state: Boolean
  orderno: Boolean
  createdby: Boolean
}

enum CX_ChargeOrderFields {
  objectId
  createdAt
  updatedAt
  state
  orderno
  createdby
}

input CX_ChargeOrderGreaterThanArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  state: Float
  orderno: String
}

input CX_ChargeOrderGreaterThanOrEqualToArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  state: Float
  orderno: String
}

input CX_ChargeOrderLessThanArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  state: Float
  orderno: String
}

input CX_ChargeOrderLessThanOrEqualToArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  state: Float
  orderno: String
}

type CX_DeliveryOrder {
  objectId: ID
  createdAt: Date
  updatedAt: Date
  state: Float
  orderno: String
  createdby: _User
  deliveryOrderOfCX_SaleOrder(objectId: ID, ascending: CX_SaleOrderFields, descending: CX_SaleOrderFields, limit: Int, equalTo: CX_SaleOrderEqualToArgument, greaterThan: CX_SaleOrderGreaterThanArgument, greaterThanOrEqualTo: CX_SaleOrderGreaterThanOrEqualToArgument, lessThan: CX_SaleOrderLessThanArgument, lessThanOrEqualTo: CX_SaleOrderLessThanOrEqualToArgument, containedIn: CX_SaleOrderContainedInArgument, containsAll: CX_SaleOrderContainsAllArgument, exists: CX_SaleOrderExistsArgument): [CX_SaleOrder]
}

input CX_DeliveryOrderContainedInArgument {
  objectId: [ID]
  createdAt: [ID]
  updatedAt: [ID]
  state: [ID]
  orderno: [ID]
  createdby: [ID]
}

input CX_DeliveryOrderContainsAllArgument {
  objectId: [ID]
  createdAt: [ID]
  updatedAt: [ID]
  state: [ID]
  orderno: [ID]
  createdby: [ID]
}

input CX_DeliveryOrderEqualToArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  state: Float
  orderno: String
}

input CX_DeliveryOrderExistsArgument {
  objectId: Boolean
  createdAt: Boolean
  updatedAt: Boolean
  state: Boolean
  orderno: Boolean
  createdby: Boolean
}

enum CX_DeliveryOrderFields {
  objectId
  createdAt
  updatedAt
  state
  orderno
  createdby
}

input CX_DeliveryOrderGreaterThanArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  state: Float
  orderno: String
}

input CX_DeliveryOrderGreaterThanOrEqualToArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  state: Float
  orderno: String
}

input CX_DeliveryOrderLessThanArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  state: Float
  orderno: String
}

input CX_DeliveryOrderLessThanOrEqualToArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  state: Float
  orderno: String
}

type CX_Job {
  updatedAt: Date
  name: String
  objectId: ID
  createdAt: Date
  state: Float
  code: String
  createdby: _User
  jobOfCX_Technician(objectId: ID, ascending: CX_TechnicianFields, descending: CX_TechnicianFields, limit: Int, equalTo: CX_TechnicianEqualToArgument, greaterThan: CX_TechnicianGreaterThanArgument, greaterThanOrEqualTo: CX_TechnicianGreaterThanOrEqualToArgument, lessThan: CX_TechnicianLessThanArgument, lessThanOrEqualTo: CX_TechnicianLessThanOrEqualToArgument, containedIn: CX_TechnicianContainedInArgument, containsAll: CX_TechnicianContainsAllArgument, exists: CX_TechnicianExistsArgument): [CX_Technician]
}

input CX_JobContainedInArgument {
  updatedAt: [ID]
  name: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  code: [ID]
  createdby: [ID]
}

input CX_JobContainsAllArgument {
  updatedAt: [ID]
  name: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  code: [ID]
  createdby: [ID]
}

input CX_JobEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  code: String
}

input CX_JobExistsArgument {
  updatedAt: Boolean
  name: Boolean
  objectId: Boolean
  createdAt: Boolean
  state: Boolean
  code: Boolean
  createdby: Boolean
}

enum CX_JobFields {
  updatedAt
  name
  objectId
  createdAt
  state
  code
  createdby
}

input CX_JobGreaterThanArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  code: String
}

input CX_JobGreaterThanOrEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  code: String
}

input CX_JobLessThanArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  code: String
}

input CX_JobLessThanOrEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  code: String
}

type CX_PurchaseOrder {
  objectId: ID
  createdAt: Date
  updatedAt: Date
  state: Float
  orderno: String
  createdby: _User
  purchaseOrderOfCX_SaleOrder(objectId: ID, ascending: CX_SaleOrderFields, descending: CX_SaleOrderFields, limit: Int, equalTo: CX_SaleOrderEqualToArgument, greaterThan: CX_SaleOrderGreaterThanArgument, greaterThanOrEqualTo: CX_SaleOrderGreaterThanOrEqualToArgument, lessThan: CX_SaleOrderLessThanArgument, lessThanOrEqualTo: CX_SaleOrderLessThanOrEqualToArgument, containedIn: CX_SaleOrderContainedInArgument, containsAll: CX_SaleOrderContainsAllArgument, exists: CX_SaleOrderExistsArgument): [CX_SaleOrder]
}

input CX_PurchaseOrderContainedInArgument {
  objectId: [ID]
  createdAt: [ID]
  updatedAt: [ID]
  state: [ID]
  orderno: [ID]
  createdby: [ID]
}

input CX_PurchaseOrderContainsAllArgument {
  objectId: [ID]
  createdAt: [ID]
  updatedAt: [ID]
  state: [ID]
  orderno: [ID]
  createdby: [ID]
}

input CX_PurchaseOrderEqualToArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  state: Float
  orderno: String
}

input CX_PurchaseOrderExistsArgument {
  objectId: Boolean
  createdAt: Boolean
  updatedAt: Boolean
  state: Boolean
  orderno: Boolean
  createdby: Boolean
}

enum CX_PurchaseOrderFields {
  objectId
  createdAt
  updatedAt
  state
  orderno
  createdby
}

input CX_PurchaseOrderGreaterThanArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  state: Float
  orderno: String
}

input CX_PurchaseOrderGreaterThanOrEqualToArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  state: Float
  orderno: String
}

input CX_PurchaseOrderLessThanArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  state: Float
  orderno: String
}

input CX_PurchaseOrderLessThanOrEqualToArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  state: Float
  orderno: String
}

type CX_Router {
  category: BASE_Category
  updatedAt: Date
  name: String
  objectId: ID
  createdAt: Date
  state: Float
  category_name: String
  code: String
  category_code: String
  updatedby: _User
  createdby: _User
  cx_routerOfCX_Router_Line(objectId: ID, ascending: CX_Router_LineFields, descending: CX_Router_LineFields, limit: Int, equalTo: CX_Router_LineEqualToArgument, greaterThan: CX_Router_LineGreaterThanArgument, greaterThanOrEqualTo: CX_Router_LineGreaterThanOrEqualToArgument, lessThan: CX_Router_LineLessThanArgument, lessThanOrEqualTo: CX_Router_LineLessThanOrEqualToArgument, containedIn: CX_Router_LineContainedInArgument, containsAll: CX_Router_LineContainsAllArgument, exists: CX_Router_LineExistsArgument): [CX_Router_Line]
}

type CX_Router_Line {
  objectId: ID
  createdAt: Date
  updatedAt: Date
  cx_router: CX_Router
  lineno: Float
  createdby: _User
}

input CX_Router_LineContainedInArgument {
  objectId: [ID]
  createdAt: [ID]
  updatedAt: [ID]
  cx_router: [ID]
  lineno: [ID]
  createdby: [ID]
}

input CX_Router_LineContainsAllArgument {
  objectId: [ID]
  createdAt: [ID]
  updatedAt: [ID]
  cx_router: [ID]
  lineno: [ID]
  createdby: [ID]
}

input CX_Router_LineEqualToArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  lineno: Float
}

input CX_Router_LineExistsArgument {
  objectId: Boolean
  createdAt: Boolean
  updatedAt: Boolean
  cx_router: Boolean
  lineno: Boolean
  createdby: Boolean
}

enum CX_Router_LineFields {
  objectId
  createdAt
  updatedAt
  cx_router
  lineno
  createdby
}

input CX_Router_LineGreaterThanArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  lineno: Float
}

input CX_Router_LineGreaterThanOrEqualToArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  lineno: Float
}

input CX_Router_LineLessThanArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  lineno: Float
}

input CX_Router_LineLessThanOrEqualToArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  lineno: Float
}

input CX_RouterContainedInArgument {
  category: [ID]
  updatedAt: [ID]
  name: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  category_name: [ID]
  code: [ID]
  category_code: [ID]
  updatedby: [ID]
  createdby: [ID]
}

input CX_RouterContainsAllArgument {
  category: [ID]
  updatedAt: [ID]
  name: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  category_name: [ID]
  code: [ID]
  category_code: [ID]
  updatedby: [ID]
  createdby: [ID]
}

input CX_RouterEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  category_name: String
  code: String
  category_code: String
}

input CX_RouterExistsArgument {
  category: Boolean
  updatedAt: Boolean
  name: Boolean
  objectId: Boolean
  createdAt: Boolean
  state: Boolean
  category_name: Boolean
  code: Boolean
  category_code: Boolean
  updatedby: Boolean
  createdby: Boolean
}

enum CX_RouterFields {
  category
  updatedAt
  name
  objectId
  createdAt
  state
  category_name
  code
  category_code
  updatedby
  createdby
}

input CX_RouterGreaterThanArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  category_name: String
  code: String
  category_code: String
}

input CX_RouterGreaterThanOrEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  category_name: String
  code: String
  category_code: String
}

input CX_RouterLessThanArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  category_name: String
  code: String
  category_code: String
}

input CX_RouterLessThanOrEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  category_name: String
  code: String
  category_code: String
}

type CX_SaleOrder {
  shippingAddress_code: String
  updatedAt: Date
  paymentOrder_orderno: String
  shippingRegion_code: String
  uistate: Float
  shippingRegion_name: String
  shippingReceiverName: String
  store: CX_Store
  customer_code: String
  purchaseOrder: CX_PurchaseOrder
  technician: CX_Technician
  objectId: ID
  totalPrice: Float
  store_name: String
  shipstate: Float
  payType: Float
  shippingRegion: BASE_Region
  store_code: String
  createdAt: Date
  state: Float
  customer: BASE_Customer
  deliveryOrder: CX_DeliveryOrder
  deliveryOrder_orderno: String
  technician_code: String
  shippingPrice: Float
  paymentOrder: BASE_Payment
  orderno: String
  shippingAddress_name: String
  shippingAddress: BASE_Address
  paystate: Float
  shippingReceiverPhone: String
  customer_name: String
  technician_name: String
  purchaseOrder_orderno: String
  createdby: _User
}

input CX_SaleOrderContainedInArgument {
  shippingAddress_code: [ID]
  updatedAt: [ID]
  paymentOrder_orderno: [ID]
  shippingRegion_code: [ID]
  uistate: [ID]
  shippingRegion_name: [ID]
  shippingReceiverName: [ID]
  store: [ID]
  customer_code: [ID]
  purchaseOrder: [ID]
  technician: [ID]
  objectId: [ID]
  totalPrice: [ID]
  store_name: [ID]
  shipstate: [ID]
  payType: [ID]
  shippingRegion: [ID]
  store_code: [ID]
  createdAt: [ID]
  state: [ID]
  customer: [ID]
  deliveryOrder: [ID]
  deliveryOrder_orderno: [ID]
  technician_code: [ID]
  shippingPrice: [ID]
  paymentOrder: [ID]
  orderno: [ID]
  shippingAddress_name: [ID]
  shippingAddress: [ID]
  paystate: [ID]
  shippingReceiverPhone: [ID]
  customer_name: [ID]
  technician_name: [ID]
  purchaseOrder_orderno: [ID]
  createdby: [ID]
}

input CX_SaleOrderContainsAllArgument {
  shippingAddress_code: [ID]
  updatedAt: [ID]
  paymentOrder_orderno: [ID]
  shippingRegion_code: [ID]
  uistate: [ID]
  shippingRegion_name: [ID]
  shippingReceiverName: [ID]
  store: [ID]
  customer_code: [ID]
  purchaseOrder: [ID]
  technician: [ID]
  objectId: [ID]
  totalPrice: [ID]
  store_name: [ID]
  shipstate: [ID]
  payType: [ID]
  shippingRegion: [ID]
  store_code: [ID]
  createdAt: [ID]
  state: [ID]
  customer: [ID]
  deliveryOrder: [ID]
  deliveryOrder_orderno: [ID]
  technician_code: [ID]
  shippingPrice: [ID]
  paymentOrder: [ID]
  orderno: [ID]
  shippingAddress_name: [ID]
  shippingAddress: [ID]
  paystate: [ID]
  shippingReceiverPhone: [ID]
  customer_name: [ID]
  technician_name: [ID]
  purchaseOrder_orderno: [ID]
  createdby: [ID]
}

input CX_SaleOrderEqualToArgument {
  shippingAddress_code: String
  updatedAt: Date
  paymentOrder_orderno: String
  shippingRegion_code: String
  uistate: Float
  shippingRegion_name: String
  shippingReceiverName: String
  customer_code: String
  objectId: String
  totalPrice: Float
  store_name: String
  shipstate: Float
  payType: Float
  store_code: String
  createdAt: Date
  state: Float
  deliveryOrder_orderno: String
  technician_code: String
  shippingPrice: Float
  orderno: String
  shippingAddress_name: String
  paystate: Float
  shippingReceiverPhone: String
  customer_name: String
  technician_name: String
  purchaseOrder_orderno: String
}

input CX_SaleOrderExistsArgument {
  shippingAddress_code: Boolean
  updatedAt: Boolean
  paymentOrder_orderno: Boolean
  shippingRegion_code: Boolean
  uistate: Boolean
  shippingRegion_name: Boolean
  shippingReceiverName: Boolean
  store: Boolean
  customer_code: Boolean
  purchaseOrder: Boolean
  technician: Boolean
  objectId: Boolean
  totalPrice: Boolean
  store_name: Boolean
  shipstate: Boolean
  payType: Boolean
  shippingRegion: Boolean
  store_code: Boolean
  createdAt: Boolean
  state: Boolean
  customer: Boolean
  deliveryOrder: Boolean
  deliveryOrder_orderno: Boolean
  technician_code: Boolean
  shippingPrice: Boolean
  paymentOrder: Boolean
  orderno: Boolean
  shippingAddress_name: Boolean
  shippingAddress: Boolean
  paystate: Boolean
  shippingReceiverPhone: Boolean
  customer_name: Boolean
  technician_name: Boolean
  purchaseOrder_orderno: Boolean
  createdby: Boolean
}

enum CX_SaleOrderFields {
  shippingAddress_code
  updatedAt
  paymentOrder_orderno
  shippingRegion_code
  uistate
  shippingRegion_name
  shippingReceiverName
  store
  customer_code
  purchaseOrder
  technician
  objectId
  totalPrice
  store_name
  shipstate
  payType
  shippingRegion
  store_code
  createdAt
  state
  customer
  deliveryOrder
  deliveryOrder_orderno
  technician_code
  shippingPrice
  paymentOrder
  orderno
  shippingAddress_name
  shippingAddress
  paystate
  shippingReceiverPhone
  customer_name
  technician_name
  purchaseOrder_orderno
  createdby
}

input CX_SaleOrderGreaterThanArgument {
  shippingAddress_code: String
  updatedAt: Date
  paymentOrder_orderno: String
  shippingRegion_code: String
  uistate: Float
  shippingRegion_name: String
  shippingReceiverName: String
  customer_code: String
  objectId: String
  totalPrice: Float
  store_name: String
  shipstate: Float
  payType: Float
  store_code: String
  createdAt: Date
  state: Float
  deliveryOrder_orderno: String
  technician_code: String
  shippingPrice: Float
  orderno: String
  shippingAddress_name: String
  paystate: Float
  shippingReceiverPhone: String
  customer_name: String
  technician_name: String
  purchaseOrder_orderno: String
}

input CX_SaleOrderGreaterThanOrEqualToArgument {
  shippingAddress_code: String
  updatedAt: Date
  paymentOrder_orderno: String
  shippingRegion_code: String
  uistate: Float
  shippingRegion_name: String
  shippingReceiverName: String
  customer_code: String
  objectId: String
  totalPrice: Float
  store_name: String
  shipstate: Float
  payType: Float
  store_code: String
  createdAt: Date
  state: Float
  deliveryOrder_orderno: String
  technician_code: String
  shippingPrice: Float
  orderno: String
  shippingAddress_name: String
  paystate: Float
  shippingReceiverPhone: String
  customer_name: String
  technician_name: String
  purchaseOrder_orderno: String
}

input CX_SaleOrderLessThanArgument {
  shippingAddress_code: String
  updatedAt: Date
  paymentOrder_orderno: String
  shippingRegion_code: String
  uistate: Float
  shippingRegion_name: String
  shippingReceiverName: String
  customer_code: String
  objectId: String
  totalPrice: Float
  store_name: String
  shipstate: Float
  payType: Float
  store_code: String
  createdAt: Date
  state: Float
  deliveryOrder_orderno: String
  technician_code: String
  shippingPrice: Float
  orderno: String
  shippingAddress_name: String
  paystate: Float
  shippingReceiverPhone: String
  customer_name: String
  technician_name: String
  purchaseOrder_orderno: String
}

input CX_SaleOrderLessThanOrEqualToArgument {
  shippingAddress_code: String
  updatedAt: Date
  paymentOrder_orderno: String
  shippingRegion_code: String
  uistate: Float
  shippingRegion_name: String
  shippingReceiverName: String
  customer_code: String
  objectId: String
  totalPrice: Float
  store_name: String
  shipstate: Float
  payType: Float
  store_code: String
  createdAt: Date
  state: Float
  deliveryOrder_orderno: String
  technician_code: String
  shippingPrice: Float
  orderno: String
  shippingAddress_name: String
  paystate: Float
  shippingReceiverPhone: String
  customer_name: String
  technician_name: String
  purchaseOrder_orderno: String
}

type CX_Service {
  category: BASE_Category
  rotationpic7: File
  updatedAt: Date
  detailpic4: File
  desc: String
  detailpic1: File
  detailpic7: File
  rotationpic2: File
  technician: CX_Technician
  name: String
  objectId: ID
  rotationpic3: File
  originalprice: Float
  detailpic3: File
  createdAt: Date
  detailpic2: File
  state: Float
  sellCount: Float
  detailpic6: File
  servicerate: Float
  rotationpic8: File
  rotationpic6: File
  category_name: String
  detailpic8: File
  technician_code: String
  code: String
  category_code: String
  detailpic5: File
  price: Float
  rotationpic5: File
  servicetype: Float
  rotationpic1: File
  rotationpic4: File
  technician_name: String
  createdby: _User
}

input CX_ServiceContainedInArgument {
  category: [ID]
  rotationpic7: [ID]
  updatedAt: [ID]
  detailpic4: [ID]
  desc: [ID]
  detailpic1: [ID]
  detailpic7: [ID]
  rotationpic2: [ID]
  technician: [ID]
  name: [ID]
  objectId: [ID]
  rotationpic3: [ID]
  originalprice: [ID]
  detailpic3: [ID]
  createdAt: [ID]
  detailpic2: [ID]
  state: [ID]
  sellCount: [ID]
  detailpic6: [ID]
  servicerate: [ID]
  rotationpic8: [ID]
  rotationpic6: [ID]
  category_name: [ID]
  detailpic8: [ID]
  technician_code: [ID]
  code: [ID]
  category_code: [ID]
  detailpic5: [ID]
  price: [ID]
  rotationpic5: [ID]
  servicetype: [ID]
  rotationpic1: [ID]
  rotationpic4: [ID]
  technician_name: [ID]
  createdby: [ID]
}

input CX_ServiceContainsAllArgument {
  category: [ID]
  rotationpic7: [ID]
  updatedAt: [ID]
  detailpic4: [ID]
  desc: [ID]
  detailpic1: [ID]
  detailpic7: [ID]
  rotationpic2: [ID]
  technician: [ID]
  name: [ID]
  objectId: [ID]
  rotationpic3: [ID]
  originalprice: [ID]
  detailpic3: [ID]
  createdAt: [ID]
  detailpic2: [ID]
  state: [ID]
  sellCount: [ID]
  detailpic6: [ID]
  servicerate: [ID]
  rotationpic8: [ID]
  rotationpic6: [ID]
  category_name: [ID]
  detailpic8: [ID]
  technician_code: [ID]
  code: [ID]
  category_code: [ID]
  detailpic5: [ID]
  price: [ID]
  rotationpic5: [ID]
  servicetype: [ID]
  rotationpic1: [ID]
  rotationpic4: [ID]
  technician_name: [ID]
  createdby: [ID]
}

input CX_ServiceEqualToArgument {
  rotationpic7: File
  updatedAt: Date
  detailpic4: File
  desc: String
  detailpic1: File
  detailpic7: File
  rotationpic2: File
  name: String
  objectId: String
  rotationpic3: File
  originalprice: Float
  detailpic3: File
  createdAt: Date
  detailpic2: File
  state: Float
  sellCount: Float
  detailpic6: File
  servicerate: Float
  rotationpic8: File
  rotationpic6: File
  category_name: String
  detailpic8: File
  technician_code: String
  code: String
  category_code: String
  detailpic5: File
  price: Float
  rotationpic5: File
  servicetype: Float
  rotationpic1: File
  rotationpic4: File
  technician_name: String
}

input CX_ServiceExistsArgument {
  category: Boolean
  rotationpic7: Boolean
  updatedAt: Boolean
  detailpic4: Boolean
  desc: Boolean
  detailpic1: Boolean
  detailpic7: Boolean
  rotationpic2: Boolean
  technician: Boolean
  name: Boolean
  objectId: Boolean
  rotationpic3: Boolean
  originalprice: Boolean
  detailpic3: Boolean
  createdAt: Boolean
  detailpic2: Boolean
  state: Boolean
  sellCount: Boolean
  detailpic6: Boolean
  servicerate: Boolean
  rotationpic8: Boolean
  rotationpic6: Boolean
  category_name: Boolean
  detailpic8: Boolean
  technician_code: Boolean
  code: Boolean
  category_code: Boolean
  detailpic5: Boolean
  price: Boolean
  rotationpic5: Boolean
  servicetype: Boolean
  rotationpic1: Boolean
  rotationpic4: Boolean
  technician_name: Boolean
  createdby: Boolean
}

enum CX_ServiceFields {
  category
  rotationpic7
  updatedAt
  detailpic4
  desc
  detailpic1
  detailpic7
  rotationpic2
  technician
  name
  objectId
  rotationpic3
  originalprice
  detailpic3
  createdAt
  detailpic2
  state
  sellCount
  detailpic6
  servicerate
  rotationpic8
  rotationpic6
  category_name
  detailpic8
  technician_code
  code
  category_code
  detailpic5
  price
  rotationpic5
  servicetype
  rotationpic1
  rotationpic4
  technician_name
  createdby
}

input CX_ServiceGreaterThanArgument {
  rotationpic7: File
  updatedAt: Date
  detailpic4: File
  desc: String
  detailpic1: File
  detailpic7: File
  rotationpic2: File
  name: String
  objectId: String
  rotationpic3: File
  originalprice: Float
  detailpic3: File
  createdAt: Date
  detailpic2: File
  state: Float
  sellCount: Float
  detailpic6: File
  servicerate: Float
  rotationpic8: File
  rotationpic6: File
  category_name: String
  detailpic8: File
  technician_code: String
  code: String
  category_code: String
  detailpic5: File
  price: Float
  rotationpic5: File
  servicetype: Float
  rotationpic1: File
  rotationpic4: File
  technician_name: String
}

input CX_ServiceGreaterThanOrEqualToArgument {
  rotationpic7: File
  updatedAt: Date
  detailpic4: File
  desc: String
  detailpic1: File
  detailpic7: File
  rotationpic2: File
  name: String
  objectId: String
  rotationpic3: File
  originalprice: Float
  detailpic3: File
  createdAt: Date
  detailpic2: File
  state: Float
  sellCount: Float
  detailpic6: File
  servicerate: Float
  rotationpic8: File
  rotationpic6: File
  category_name: String
  detailpic8: File
  technician_code: String
  code: String
  category_code: String
  detailpic5: File
  price: Float
  rotationpic5: File
  servicetype: Float
  rotationpic1: File
  rotationpic4: File
  technician_name: String
}

input CX_ServiceLessThanArgument {
  rotationpic7: File
  updatedAt: Date
  detailpic4: File
  desc: String
  detailpic1: File
  detailpic7: File
  rotationpic2: File
  name: String
  objectId: String
  rotationpic3: File
  originalprice: Float
  detailpic3: File
  createdAt: Date
  detailpic2: File
  state: Float
  sellCount: Float
  detailpic6: File
  servicerate: Float
  rotationpic8: File
  rotationpic6: File
  category_name: String
  detailpic8: File
  technician_code: String
  code: String
  category_code: String
  detailpic5: File
  price: Float
  rotationpic5: File
  servicetype: Float
  rotationpic1: File
  rotationpic4: File
  technician_name: String
}

input CX_ServiceLessThanOrEqualToArgument {
  rotationpic7: File
  updatedAt: Date
  detailpic4: File
  desc: String
  detailpic1: File
  detailpic7: File
  rotationpic2: File
  name: String
  objectId: String
  rotationpic3: File
  originalprice: Float
  detailpic3: File
  createdAt: Date
  detailpic2: File
  state: Float
  sellCount: Float
  detailpic6: File
  servicerate: Float
  rotationpic8: File
  rotationpic6: File
  category_name: String
  detailpic8: File
  technician_code: String
  code: String
  category_code: String
  detailpic5: File
  price: Float
  rotationpic5: File
  servicetype: Float
  rotationpic1: File
  rotationpic4: File
  technician_name: String
}

type CX_Store {
  address: String
  billEmail: String
  updatedAt: Date
  accountno: String
  region_name: String
  logo: File
  managerPhone: String
  name: String
  objectId: ID
  managerEmail: String
  bank: String
  createdAt: Date
  state: Float
  defaultpostage: Float
  managerWeChat: String
  rate: Float
  pic6: File
  effectrate: Float
  tel: String
  account: BASE_Account
  region: BASE_Region
  servicerate: Float
  summary: String
  pic4: File
  payee: String
  region_code: String
  pic3: File
  account_code: String
  code: String
  attituderate: Float
  pic7: File
  ordercount: Float
  minprice: Float
  pic1: File
  period: Float
  pic8: File
  managerName: String
  pic5: File
  account_name: String
  expirydate: Date
  storeType: Float
  pic2: File
  updatedby: _User
  company: String
  createdby: _User
  storeOfCX_SaleOrder(objectId: ID, ascending: CX_SaleOrderFields, descending: CX_SaleOrderFields, limit: Int, equalTo: CX_SaleOrderEqualToArgument, greaterThan: CX_SaleOrderGreaterThanArgument, greaterThanOrEqualTo: CX_SaleOrderGreaterThanOrEqualToArgument, lessThan: CX_SaleOrderLessThanArgument, lessThanOrEqualTo: CX_SaleOrderLessThanOrEqualToArgument, containedIn: CX_SaleOrderContainedInArgument, containsAll: CX_SaleOrderContainsAllArgument, exists: CX_SaleOrderExistsArgument): [CX_SaleOrder]
  cx_storeOfCX_Store_Category(objectId: ID, ascending: CX_Store_CategoryFields, descending: CX_Store_CategoryFields, limit: Int, equalTo: CX_Store_CategoryEqualToArgument, greaterThan: CX_Store_CategoryGreaterThanArgument, greaterThanOrEqualTo: CX_Store_CategoryGreaterThanOrEqualToArgument, lessThan: CX_Store_CategoryLessThanArgument, lessThanOrEqualTo: CX_Store_CategoryLessThanOrEqualToArgument, containedIn: CX_Store_CategoryContainedInArgument, containsAll: CX_Store_CategoryContainsAllArgument, exists: CX_Store_CategoryExistsArgument): [CX_Store_Category]
}

type CX_Store_Category {
  objectId: ID
  createdAt: Date
  updatedAt: Date
  cx_store: CX_Store
  lineno: Float
  createdby: _User
}

input CX_Store_CategoryContainedInArgument {
  objectId: [ID]
  createdAt: [ID]
  updatedAt: [ID]
  cx_store: [ID]
  lineno: [ID]
  createdby: [ID]
}

input CX_Store_CategoryContainsAllArgument {
  objectId: [ID]
  createdAt: [ID]
  updatedAt: [ID]
  cx_store: [ID]
  lineno: [ID]
  createdby: [ID]
}

input CX_Store_CategoryEqualToArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  lineno: Float
}

input CX_Store_CategoryExistsArgument {
  objectId: Boolean
  createdAt: Boolean
  updatedAt: Boolean
  cx_store: Boolean
  lineno: Boolean
  createdby: Boolean
}

enum CX_Store_CategoryFields {
  objectId
  createdAt
  updatedAt
  cx_store
  lineno
  createdby
}

input CX_Store_CategoryGreaterThanArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  lineno: Float
}

input CX_Store_CategoryGreaterThanOrEqualToArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  lineno: Float
}

input CX_Store_CategoryLessThanArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  lineno: Float
}

input CX_Store_CategoryLessThanOrEqualToArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  lineno: Float
}

input CX_StoreContainedInArgument {
  address: [ID]
  billEmail: [ID]
  updatedAt: [ID]
  accountno: [ID]
  region_name: [ID]
  logo: [ID]
  managerPhone: [ID]
  name: [ID]
  objectId: [ID]
  managerEmail: [ID]
  bank: [ID]
  createdAt: [ID]
  state: [ID]
  defaultpostage: [ID]
  managerWeChat: [ID]
  rate: [ID]
  pic6: [ID]
  effectrate: [ID]
  tel: [ID]
  account: [ID]
  region: [ID]
  servicerate: [ID]
  summary: [ID]
  pic4: [ID]
  payee: [ID]
  region_code: [ID]
  pic3: [ID]
  account_code: [ID]
  code: [ID]
  attituderate: [ID]
  pic7: [ID]
  ordercount: [ID]
  minprice: [ID]
  pic1: [ID]
  period: [ID]
  pic8: [ID]
  managerName: [ID]
  pic5: [ID]
  account_name: [ID]
  expirydate: [ID]
  storeType: [ID]
  pic2: [ID]
  updatedby: [ID]
  company: [ID]
  createdby: [ID]
}

input CX_StoreContainsAllArgument {
  address: [ID]
  billEmail: [ID]
  updatedAt: [ID]
  accountno: [ID]
  region_name: [ID]
  logo: [ID]
  managerPhone: [ID]
  name: [ID]
  objectId: [ID]
  managerEmail: [ID]
  bank: [ID]
  createdAt: [ID]
  state: [ID]
  defaultpostage: [ID]
  managerWeChat: [ID]
  rate: [ID]
  pic6: [ID]
  effectrate: [ID]
  tel: [ID]
  account: [ID]
  region: [ID]
  servicerate: [ID]
  summary: [ID]
  pic4: [ID]
  payee: [ID]
  region_code: [ID]
  pic3: [ID]
  account_code: [ID]
  code: [ID]
  attituderate: [ID]
  pic7: [ID]
  ordercount: [ID]
  minprice: [ID]
  pic1: [ID]
  period: [ID]
  pic8: [ID]
  managerName: [ID]
  pic5: [ID]
  account_name: [ID]
  expirydate: [ID]
  storeType: [ID]
  pic2: [ID]
  updatedby: [ID]
  company: [ID]
  createdby: [ID]
}

input CX_StoreEqualToArgument {
  address: String
  billEmail: String
  updatedAt: Date
  accountno: String
  region_name: String
  logo: File
  managerPhone: String
  name: String
  objectId: String
  managerEmail: String
  bank: String
  createdAt: Date
  state: Float
  defaultpostage: Float
  managerWeChat: String
  rate: Float
  pic6: File
  effectrate: Float
  tel: String
  servicerate: Float
  summary: String
  pic4: File
  payee: String
  region_code: String
  pic3: File
  account_code: String
  code: String
  attituderate: Float
  pic7: File
  ordercount: Float
  minprice: Float
  pic1: File
  period: Float
  pic8: File
  managerName: String
  pic5: File
  account_name: String
  expirydate: Date
  storeType: Float
  pic2: File
  company: String
}

input CX_StoreExistsArgument {
  address: Boolean
  billEmail: Boolean
  updatedAt: Boolean
  accountno: Boolean
  region_name: Boolean
  logo: Boolean
  managerPhone: Boolean
  name: Boolean
  objectId: Boolean
  managerEmail: Boolean
  bank: Boolean
  createdAt: Boolean
  state: Boolean
  defaultpostage: Boolean
  managerWeChat: Boolean
  rate: Boolean
  pic6: Boolean
  effectrate: Boolean
  tel: Boolean
  account: Boolean
  region: Boolean
  servicerate: Boolean
  summary: Boolean
  pic4: Boolean
  payee: Boolean
  region_code: Boolean
  pic3: Boolean
  account_code: Boolean
  code: Boolean
  attituderate: Boolean
  pic7: Boolean
  ordercount: Boolean
  minprice: Boolean
  pic1: Boolean
  period: Boolean
  pic8: Boolean
  managerName: Boolean
  pic5: Boolean
  account_name: Boolean
  expirydate: Boolean
  storeType: Boolean
  pic2: Boolean
  updatedby: Boolean
  company: Boolean
  createdby: Boolean
}

enum CX_StoreFields {
  address
  billEmail
  updatedAt
  accountno
  region_name
  logo
  managerPhone
  name
  objectId
  managerEmail
  bank
  createdAt
  state
  defaultpostage
  managerWeChat
  rate
  pic6
  effectrate
  tel
  account
  region
  servicerate
  summary
  pic4
  payee
  region_code
  pic3
  account_code
  code
  attituderate
  pic7
  ordercount
  minprice
  pic1
  period
  pic8
  managerName
  pic5
  account_name
  expirydate
  storeType
  pic2
  updatedby
  company
  createdby
}

input CX_StoreGreaterThanArgument {
  address: String
  billEmail: String
  updatedAt: Date
  accountno: String
  region_name: String
  logo: File
  managerPhone: String
  name: String
  objectId: String
  managerEmail: String
  bank: String
  createdAt: Date
  state: Float
  defaultpostage: Float
  managerWeChat: String
  rate: Float
  pic6: File
  effectrate: Float
  tel: String
  servicerate: Float
  summary: String
  pic4: File
  payee: String
  region_code: String
  pic3: File
  account_code: String
  code: String
  attituderate: Float
  pic7: File
  ordercount: Float
  minprice: Float
  pic1: File
  period: Float
  pic8: File
  managerName: String
  pic5: File
  account_name: String
  expirydate: Date
  storeType: Float
  pic2: File
  company: String
}

input CX_StoreGreaterThanOrEqualToArgument {
  address: String
  billEmail: String
  updatedAt: Date
  accountno: String
  region_name: String
  logo: File
  managerPhone: String
  name: String
  objectId: String
  managerEmail: String
  bank: String
  createdAt: Date
  state: Float
  defaultpostage: Float
  managerWeChat: String
  rate: Float
  pic6: File
  effectrate: Float
  tel: String
  servicerate: Float
  summary: String
  pic4: File
  payee: String
  region_code: String
  pic3: File
  account_code: String
  code: String
  attituderate: Float
  pic7: File
  ordercount: Float
  minprice: Float
  pic1: File
  period: Float
  pic8: File
  managerName: String
  pic5: File
  account_name: String
  expirydate: Date
  storeType: Float
  pic2: File
  company: String
}

input CX_StoreLessThanArgument {
  address: String
  billEmail: String
  updatedAt: Date
  accountno: String
  region_name: String
  logo: File
  managerPhone: String
  name: String
  objectId: String
  managerEmail: String
  bank: String
  createdAt: Date
  state: Float
  defaultpostage: Float
  managerWeChat: String
  rate: Float
  pic6: File
  effectrate: Float
  tel: String
  servicerate: Float
  summary: String
  pic4: File
  payee: String
  region_code: String
  pic3: File
  account_code: String
  code: String
  attituderate: Float
  pic7: File
  ordercount: Float
  minprice: Float
  pic1: File
  period: Float
  pic8: File
  managerName: String
  pic5: File
  account_name: String
  expirydate: Date
  storeType: Float
  pic2: File
  company: String
}

input CX_StoreLessThanOrEqualToArgument {
  address: String
  billEmail: String
  updatedAt: Date
  accountno: String
  region_name: String
  logo: File
  managerPhone: String
  name: String
  objectId: String
  managerEmail: String
  bank: String
  createdAt: Date
  state: Float
  defaultpostage: Float
  managerWeChat: String
  rate: Float
  pic6: File
  effectrate: Float
  tel: String
  servicerate: Float
  summary: String
  pic4: File
  payee: String
  region_code: String
  pic3: File
  account_code: String
  code: String
  attituderate: Float
  pic7: File
  ordercount: Float
  minprice: Float
  pic1: File
  period: Float
  pic8: File
  managerName: String
  pic5: File
  account_name: String
  expirydate: Date
  storeType: Float
  pic2: File
  company: String
}

type CX_Studio {
  updatedAt: Date
  name: String
  objectId: ID
  createdAt: Date
  state: Float
  code: String
  createdby: _User
}

input CX_StudioContainedInArgument {
  updatedAt: [ID]
  name: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  code: [ID]
  createdby: [ID]
}

input CX_StudioContainsAllArgument {
  updatedAt: [ID]
  name: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  code: [ID]
  createdby: [ID]
}

input CX_StudioEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  code: String
}

input CX_StudioExistsArgument {
  updatedAt: Boolean
  name: Boolean
  objectId: Boolean
  createdAt: Boolean
  state: Boolean
  code: Boolean
  createdby: Boolean
}

enum CX_StudioFields {
  updatedAt
  name
  objectId
  createdAt
  state
  code
  createdby
}

input CX_StudioGreaterThanArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  code: String
}

input CX_StudioGreaterThanOrEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  code: String
}

input CX_StudioLessThanArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  code: String
}

input CX_StudioLessThanOrEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  code: String
}

type CX_Technician {
  address: String
  joyheight: Float
  updatedAt: Date
  age: Float
  desc: String
  sex: Float
  accountno: String
  phone: String
  edufieldofstudy: String
  name: String
  objectId: ID
  job_name: String
  joyconstellation: Float
  nickname: String
  bank: String
  createdAt: Date
  edudegree: String
  state: Float
  rate: Float
  pic6: File
  account: BASE_Account
  pic4: File
  payee: String
  job_code: String
  pic3: File
  avatar: File
  account_code: String
  code: String
  pic7: File
  idcardno: String
  ordercount: Float
  pic1: File
  pic8: File
  pic5: File
  account_name: String
  joyweight: Float
  techphotowithidcard: File
  pic2: File
  updatedby: _User
  techphotoofidcarda: File
  servicetype: Float
  job: CX_Job
  createdby: _User
  cx_technicianOfCX_Technician_Certificate(objectId: ID, ascending: CX_Technician_CertificateFields, descending: CX_Technician_CertificateFields, limit: Int, equalTo: CX_Technician_CertificateEqualToArgument, greaterThan: CX_Technician_CertificateGreaterThanArgument, greaterThanOrEqualTo: CX_Technician_CertificateGreaterThanOrEqualToArgument, lessThan: CX_Technician_CertificateLessThanArgument, lessThanOrEqualTo: CX_Technician_CertificateLessThanOrEqualToArgument, containedIn: CX_Technician_CertificateContainedInArgument, containsAll: CX_Technician_CertificateContainsAllArgument, exists: CX_Technician_CertificateExistsArgument): [CX_Technician_Certificate]
  technicianOfCX_Service(objectId: ID, ascending: CX_ServiceFields, descending: CX_ServiceFields, limit: Int, equalTo: CX_ServiceEqualToArgument, greaterThan: CX_ServiceGreaterThanArgument, greaterThanOrEqualTo: CX_ServiceGreaterThanOrEqualToArgument, lessThan: CX_ServiceLessThanArgument, lessThanOrEqualTo: CX_ServiceLessThanOrEqualToArgument, containedIn: CX_ServiceContainedInArgument, containsAll: CX_ServiceContainsAllArgument, exists: CX_ServiceExistsArgument): [CX_Service]
  cx_technicianOfCX_Technician_Experience(objectId: ID, ascending: CX_Technician_ExperienceFields, descending: CX_Technician_ExperienceFields, limit: Int, equalTo: CX_Technician_ExperienceEqualToArgument, greaterThan: CX_Technician_ExperienceGreaterThanArgument, greaterThanOrEqualTo: CX_Technician_ExperienceGreaterThanOrEqualToArgument, lessThan: CX_Technician_ExperienceLessThanArgument, lessThanOrEqualTo: CX_Technician_ExperienceLessThanOrEqualToArgument, containedIn: CX_Technician_ExperienceContainedInArgument, containsAll: CX_Technician_ExperienceContainsAllArgument, exists: CX_Technician_ExperienceExistsArgument): [CX_Technician_Experience]
  cx_technicianOfCX_Technician_Region(objectId: ID, ascending: CX_Technician_RegionFields, descending: CX_Technician_RegionFields, limit: Int, equalTo: CX_Technician_RegionEqualToArgument, greaterThan: CX_Technician_RegionGreaterThanArgument, greaterThanOrEqualTo: CX_Technician_RegionGreaterThanOrEqualToArgument, lessThan: CX_Technician_RegionLessThanArgument, lessThanOrEqualTo: CX_Technician_RegionLessThanOrEqualToArgument, containedIn: CX_Technician_RegionContainedInArgument, containsAll: CX_Technician_RegionContainsAllArgument, exists: CX_Technician_RegionExistsArgument): [CX_Technician_Region]
  technicianOfCX_SaleOrder(objectId: ID, ascending: CX_SaleOrderFields, descending: CX_SaleOrderFields, limit: Int, equalTo: CX_SaleOrderEqualToArgument, greaterThan: CX_SaleOrderGreaterThanArgument, greaterThanOrEqualTo: CX_SaleOrderGreaterThanOrEqualToArgument, lessThan: CX_SaleOrderLessThanArgument, lessThanOrEqualTo: CX_SaleOrderLessThanOrEqualToArgument, containedIn: CX_SaleOrderContainedInArgument, containsAll: CX_SaleOrderContainsAllArgument, exists: CX_SaleOrderExistsArgument): [CX_SaleOrder]
  technicianOfCX_Calendar(objectId: ID, ascending: CX_CalendarFields, descending: CX_CalendarFields, limit: Int, equalTo: CX_CalendarEqualToArgument, greaterThan: CX_CalendarGreaterThanArgument, greaterThanOrEqualTo: CX_CalendarGreaterThanOrEqualToArgument, lessThan: CX_CalendarLessThanArgument, lessThanOrEqualTo: CX_CalendarLessThanOrEqualToArgument, containedIn: CX_CalendarContainedInArgument, containsAll: CX_CalendarContainsAllArgument, exists: CX_CalendarExistsArgument): [CX_Calendar]
}

type CX_Technician_Certificate {
  certificatename: String
  updatedAt: Date
  cx_technician: CX_Technician
  objectId: ID
  createdAt: Date
  photopage: File
  numberpage: File
  photowithCertificate: File
  certificatecode: String
  lineno: Float
  createdby: _User
}

input CX_Technician_CertificateContainedInArgument {
  certificatename: [ID]
  updatedAt: [ID]
  cx_technician: [ID]
  objectId: [ID]
  createdAt: [ID]
  photopage: [ID]
  numberpage: [ID]
  photowithCertificate: [ID]
  certificatecode: [ID]
  lineno: [ID]
  createdby: [ID]
}

input CX_Technician_CertificateContainsAllArgument {
  certificatename: [ID]
  updatedAt: [ID]
  cx_technician: [ID]
  objectId: [ID]
  createdAt: [ID]
  photopage: [ID]
  numberpage: [ID]
  photowithCertificate: [ID]
  certificatecode: [ID]
  lineno: [ID]
  createdby: [ID]
}

input CX_Technician_CertificateEqualToArgument {
  certificatename: String
  updatedAt: Date
  objectId: String
  createdAt: Date
  photopage: File
  numberpage: File
  photowithCertificate: File
  certificatecode: String
  lineno: Float
}

input CX_Technician_CertificateExistsArgument {
  certificatename: Boolean
  updatedAt: Boolean
  cx_technician: Boolean
  objectId: Boolean
  createdAt: Boolean
  photopage: Boolean
  numberpage: Boolean
  photowithCertificate: Boolean
  certificatecode: Boolean
  lineno: Boolean
  createdby: Boolean
}

enum CX_Technician_CertificateFields {
  certificatename
  updatedAt
  cx_technician
  objectId
  createdAt
  photopage
  numberpage
  photowithCertificate
  certificatecode
  lineno
  createdby
}

input CX_Technician_CertificateGreaterThanArgument {
  certificatename: String
  updatedAt: Date
  objectId: String
  createdAt: Date
  photopage: File
  numberpage: File
  photowithCertificate: File
  certificatecode: String
  lineno: Float
}

input CX_Technician_CertificateGreaterThanOrEqualToArgument {
  certificatename: String
  updatedAt: Date
  objectId: String
  createdAt: Date
  photopage: File
  numberpage: File
  photowithCertificate: File
  certificatecode: String
  lineno: Float
}

input CX_Technician_CertificateLessThanArgument {
  certificatename: String
  updatedAt: Date
  objectId: String
  createdAt: Date
  photopage: File
  numberpage: File
  photowithCertificate: File
  certificatecode: String
  lineno: Float
}

input CX_Technician_CertificateLessThanOrEqualToArgument {
  certificatename: String
  updatedAt: Date
  objectId: String
  createdAt: Date
  photopage: File
  numberpage: File
  photowithCertificate: File
  certificatecode: String
  lineno: Float
}

type CX_Technician_Experience {
  updatedAt: Date
  desc: String
  cx_technician: CX_Technician
  timefrom: Date
  objectId: ID
  createdAt: Date
  iscurrnetworkhere: Boolean
  lineno: Float
  company: String
  timeto: Date
  createdby: _User
}

input CX_Technician_ExperienceContainedInArgument {
  updatedAt: [ID]
  desc: [ID]
  cx_technician: [ID]
  timefrom: [ID]
  objectId: [ID]
  createdAt: [ID]
  iscurrnetworkhere: [ID]
  lineno: [ID]
  company: [ID]
  timeto: [ID]
  createdby: [ID]
}

input CX_Technician_ExperienceContainsAllArgument {
  updatedAt: [ID]
  desc: [ID]
  cx_technician: [ID]
  timefrom: [ID]
  objectId: [ID]
  createdAt: [ID]
  iscurrnetworkhere: [ID]
  lineno: [ID]
  company: [ID]
  timeto: [ID]
  createdby: [ID]
}

input CX_Technician_ExperienceEqualToArgument {
  updatedAt: Date
  desc: String
  timefrom: Date
  objectId: String
  createdAt: Date
  iscurrnetworkhere: Boolean
  lineno: Float
  company: String
  timeto: Date
}

input CX_Technician_ExperienceExistsArgument {
  updatedAt: Boolean
  desc: Boolean
  cx_technician: Boolean
  timefrom: Boolean
  objectId: Boolean
  createdAt: Boolean
  iscurrnetworkhere: Boolean
  lineno: Boolean
  company: Boolean
  timeto: Boolean
  createdby: Boolean
}

enum CX_Technician_ExperienceFields {
  updatedAt
  desc
  cx_technician
  timefrom
  objectId
  createdAt
  iscurrnetworkhere
  lineno
  company
  timeto
  createdby
}

input CX_Technician_ExperienceGreaterThanArgument {
  updatedAt: Date
  desc: String
  timefrom: Date
  objectId: String
  createdAt: Date
  iscurrnetworkhere: Boolean
  lineno: Float
  company: String
  timeto: Date
}

input CX_Technician_ExperienceGreaterThanOrEqualToArgument {
  updatedAt: Date
  desc: String
  timefrom: Date
  objectId: String
  createdAt: Date
  iscurrnetworkhere: Boolean
  lineno: Float
  company: String
  timeto: Date
}

input CX_Technician_ExperienceLessThanArgument {
  updatedAt: Date
  desc: String
  timefrom: Date
  objectId: String
  createdAt: Date
  iscurrnetworkhere: Boolean
  lineno: Float
  company: String
  timeto: Date
}

input CX_Technician_ExperienceLessThanOrEqualToArgument {
  updatedAt: Date
  desc: String
  timefrom: Date
  objectId: String
  createdAt: Date
  iscurrnetworkhere: Boolean
  lineno: Float
  company: String
  timeto: Date
}

type CX_Technician_Region {
  objectId: ID
  createdAt: Date
  updatedAt: Date
  cx_technician: CX_Technician
  lineno: Float
  createdby: _User
}

input CX_Technician_RegionContainedInArgument {
  objectId: [ID]
  createdAt: [ID]
  updatedAt: [ID]
  cx_technician: [ID]
  lineno: [ID]
  createdby: [ID]
}

input CX_Technician_RegionContainsAllArgument {
  objectId: [ID]
  createdAt: [ID]
  updatedAt: [ID]
  cx_technician: [ID]
  lineno: [ID]
  createdby: [ID]
}

input CX_Technician_RegionEqualToArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  lineno: Float
}

input CX_Technician_RegionExistsArgument {
  objectId: Boolean
  createdAt: Boolean
  updatedAt: Boolean
  cx_technician: Boolean
  lineno: Boolean
  createdby: Boolean
}

enum CX_Technician_RegionFields {
  objectId
  createdAt
  updatedAt
  cx_technician
  lineno
  createdby
}

input CX_Technician_RegionGreaterThanArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  lineno: Float
}

input CX_Technician_RegionGreaterThanOrEqualToArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  lineno: Float
}

input CX_Technician_RegionLessThanArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  lineno: Float
}

input CX_Technician_RegionLessThanOrEqualToArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  lineno: Float
}

input CX_TechnicianContainedInArgument {
  address: [ID]
  joyheight: [ID]
  updatedAt: [ID]
  age: [ID]
  desc: [ID]
  sex: [ID]
  accountno: [ID]
  phone: [ID]
  edufieldofstudy: [ID]
  name: [ID]
  objectId: [ID]
  job_name: [ID]
  joyconstellation: [ID]
  nickname: [ID]
  bank: [ID]
  createdAt: [ID]
  edudegree: [ID]
  state: [ID]
  rate: [ID]
  pic6: [ID]
  account: [ID]
  pic4: [ID]
  payee: [ID]
  job_code: [ID]
  pic3: [ID]
  avatar: [ID]
  account_code: [ID]
  code: [ID]
  pic7: [ID]
  idcardno: [ID]
  ordercount: [ID]
  pic1: [ID]
  pic8: [ID]
  pic5: [ID]
  account_name: [ID]
  joyweight: [ID]
  techphotowithidcard: [ID]
  pic2: [ID]
  updatedby: [ID]
  techphotoofidcarda: [ID]
  servicetype: [ID]
  job: [ID]
  createdby: [ID]
}

input CX_TechnicianContainsAllArgument {
  address: [ID]
  joyheight: [ID]
  updatedAt: [ID]
  age: [ID]
  desc: [ID]
  sex: [ID]
  accountno: [ID]
  phone: [ID]
  edufieldofstudy: [ID]
  name: [ID]
  objectId: [ID]
  job_name: [ID]
  joyconstellation: [ID]
  nickname: [ID]
  bank: [ID]
  createdAt: [ID]
  edudegree: [ID]
  state: [ID]
  rate: [ID]
  pic6: [ID]
  account: [ID]
  pic4: [ID]
  payee: [ID]
  job_code: [ID]
  pic3: [ID]
  avatar: [ID]
  account_code: [ID]
  code: [ID]
  pic7: [ID]
  idcardno: [ID]
  ordercount: [ID]
  pic1: [ID]
  pic8: [ID]
  pic5: [ID]
  account_name: [ID]
  joyweight: [ID]
  techphotowithidcard: [ID]
  pic2: [ID]
  updatedby: [ID]
  techphotoofidcarda: [ID]
  servicetype: [ID]
  job: [ID]
  createdby: [ID]
}

input CX_TechnicianEqualToArgument {
  address: String
  joyheight: Float
  updatedAt: Date
  age: Float
  desc: String
  sex: Float
  accountno: String
  phone: String
  edufieldofstudy: String
  name: String
  objectId: String
  job_name: String
  joyconstellation: Float
  nickname: String
  bank: String
  createdAt: Date
  edudegree: String
  state: Float
  rate: Float
  pic6: File
  pic4: File
  payee: String
  job_code: String
  pic3: File
  avatar: File
  account_code: String
  code: String
  pic7: File
  idcardno: String
  ordercount: Float
  pic1: File
  pic8: File
  pic5: File
  account_name: String
  joyweight: Float
  techphotowithidcard: File
  pic2: File
  techphotoofidcarda: File
  servicetype: Float
}

input CX_TechnicianExistsArgument {
  address: Boolean
  joyheight: Boolean
  updatedAt: Boolean
  age: Boolean
  desc: Boolean
  sex: Boolean
  accountno: Boolean
  phone: Boolean
  edufieldofstudy: Boolean
  name: Boolean
  objectId: Boolean
  job_name: Boolean
  joyconstellation: Boolean
  nickname: Boolean
  bank: Boolean
  createdAt: Boolean
  edudegree: Boolean
  state: Boolean
  rate: Boolean
  pic6: Boolean
  account: Boolean
  pic4: Boolean
  payee: Boolean
  job_code: Boolean
  pic3: Boolean
  avatar: Boolean
  account_code: Boolean
  code: Boolean
  pic7: Boolean
  idcardno: Boolean
  ordercount: Boolean
  pic1: Boolean
  pic8: Boolean
  pic5: Boolean
  account_name: Boolean
  joyweight: Boolean
  techphotowithidcard: Boolean
  pic2: Boolean
  updatedby: Boolean
  techphotoofidcarda: Boolean
  servicetype: Boolean
  job: Boolean
  createdby: Boolean
}

enum CX_TechnicianFields {
  address
  joyheight
  updatedAt
  age
  desc
  sex
  accountno
  phone
  edufieldofstudy
  name
  objectId
  job_name
  joyconstellation
  nickname
  bank
  createdAt
  edudegree
  state
  rate
  pic6
  account
  pic4
  payee
  job_code
  pic3
  avatar
  account_code
  code
  pic7
  idcardno
  ordercount
  pic1
  pic8
  pic5
  account_name
  joyweight
  techphotowithidcard
  pic2
  updatedby
  techphotoofidcarda
  servicetype
  job
  createdby
}

input CX_TechnicianGreaterThanArgument {
  address: String
  joyheight: Float
  updatedAt: Date
  age: Float
  desc: String
  sex: Float
  accountno: String
  phone: String
  edufieldofstudy: String
  name: String
  objectId: String
  job_name: String
  joyconstellation: Float
  nickname: String
  bank: String
  createdAt: Date
  edudegree: String
  state: Float
  rate: Float
  pic6: File
  pic4: File
  payee: String
  job_code: String
  pic3: File
  avatar: File
  account_code: String
  code: String
  pic7: File
  idcardno: String
  ordercount: Float
  pic1: File
  pic8: File
  pic5: File
  account_name: String
  joyweight: Float
  techphotowithidcard: File
  pic2: File
  techphotoofidcarda: File
  servicetype: Float
}

input CX_TechnicianGreaterThanOrEqualToArgument {
  address: String
  joyheight: Float
  updatedAt: Date
  age: Float
  desc: String
  sex: Float
  accountno: String
  phone: String
  edufieldofstudy: String
  name: String
  objectId: String
  job_name: String
  joyconstellation: Float
  nickname: String
  bank: String
  createdAt: Date
  edudegree: String
  state: Float
  rate: Float
  pic6: File
  pic4: File
  payee: String
  job_code: String
  pic3: File
  avatar: File
  account_code: String
  code: String
  pic7: File
  idcardno: String
  ordercount: Float
  pic1: File
  pic8: File
  pic5: File
  account_name: String
  joyweight: Float
  techphotowithidcard: File
  pic2: File
  techphotoofidcarda: File
  servicetype: Float
}

input CX_TechnicianLessThanArgument {
  address: String
  joyheight: Float
  updatedAt: Date
  age: Float
  desc: String
  sex: Float
  accountno: String
  phone: String
  edufieldofstudy: String
  name: String
  objectId: String
  job_name: String
  joyconstellation: Float
  nickname: String
  bank: String
  createdAt: Date
  edudegree: String
  state: Float
  rate: Float
  pic6: File
  pic4: File
  payee: String
  job_code: String
  pic3: File
  avatar: File
  account_code: String
  code: String
  pic7: File
  idcardno: String
  ordercount: Float
  pic1: File
  pic8: File
  pic5: File
  account_name: String
  joyweight: Float
  techphotowithidcard: File
  pic2: File
  techphotoofidcarda: File
  servicetype: Float
}

input CX_TechnicianLessThanOrEqualToArgument {
  address: String
  joyheight: Float
  updatedAt: Date
  age: Float
  desc: String
  sex: Float
  accountno: String
  phone: String
  edufieldofstudy: String
  name: String
  objectId: String
  job_name: String
  joyconstellation: Float
  nickname: String
  bank: String
  createdAt: Date
  edudegree: String
  state: Float
  rate: Float
  pic6: File
  pic4: File
  payee: String
  job_code: String
  pic3: File
  avatar: File
  account_code: String
  code: String
  pic7: File
  idcardno: String
  ordercount: Float
  pic1: File
  pic8: File
  pic5: File
  account_name: String
  joyweight: Float
  techphotowithidcard: File
  pic2: File
  techphotoofidcarda: File
  servicetype: Float
}

scalar Date

type Demand {
  updatedAt: Date
  name: String
  objectId: ID
  createdAt: Date
  state: Float
  code: String
  createdby: _User
}

input DemandContainedInArgument {
  updatedAt: [ID]
  name: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  code: [ID]
  createdby: [ID]
}

input DemandContainsAllArgument {
  updatedAt: [ID]
  name: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  code: [ID]
  createdby: [ID]
}

input DemandEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  code: String
}

input DemandExistsArgument {
  updatedAt: Boolean
  name: Boolean
  objectId: Boolean
  createdAt: Boolean
  state: Boolean
  code: Boolean
  createdby: Boolean
}

enum DemandFields {
  updatedAt
  name
  objectId
  createdAt
  state
  code
  createdby
}

input DemandGreaterThanArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  code: String
}

input DemandGreaterThanOrEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  code: String
}

input DemandLessThanArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  code: String
}

input DemandLessThanOrEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  code: String
}

type Demo {
  updatedAt: Date
  uistate: Float
  p191: File
  p21: Float
  objectId: ID
  p192: File
  createdAt: Date
  state: Float
  uiworkyears: Float
  orderno: String
  createdby: _User
  demoOfDemo_Education(objectId: ID, ascending: Demo_EducationFields, descending: Demo_EducationFields, limit: Int, equalTo: Demo_EducationEqualToArgument, greaterThan: Demo_EducationGreaterThanArgument, greaterThanOrEqualTo: Demo_EducationGreaterThanOrEqualToArgument, lessThan: Demo_EducationLessThanArgument, lessThanOrEqualTo: Demo_EducationLessThanOrEqualToArgument, containedIn: Demo_EducationContainedInArgument, containsAll: Demo_EducationContainsAllArgument, exists: Demo_EducationExistsArgument): [Demo_Education]
  demoOfDemo_Experience(objectId: ID, ascending: Demo_ExperienceFields, descending: Demo_ExperienceFields, limit: Int, equalTo: Demo_ExperienceEqualToArgument, greaterThan: Demo_ExperienceGreaterThanArgument, greaterThanOrEqualTo: Demo_ExperienceGreaterThanOrEqualToArgument, lessThan: Demo_ExperienceLessThanArgument, lessThanOrEqualTo: Demo_ExperienceLessThanOrEqualToArgument, containedIn: Demo_ExperienceContainedInArgument, containsAll: Demo_ExperienceContainsAllArgument, exists: Demo_ExperienceExistsArgument): [Demo_Experience]
}

type Demo_Education {
  updatedAt: Date
  uistate: Float
  school: String
  objectId: ID
  createdAt: Date
  state: Float
  uiworkyears: Float
  lineno: Float
  demo: Demo
  createdby: _User
}

input Demo_EducationContainedInArgument {
  updatedAt: [ID]
  uistate: [ID]
  school: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  uiworkyears: [ID]
  lineno: [ID]
  demo: [ID]
  createdby: [ID]
}

input Demo_EducationContainsAllArgument {
  updatedAt: [ID]
  uistate: [ID]
  school: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  uiworkyears: [ID]
  lineno: [ID]
  demo: [ID]
  createdby: [ID]
}

input Demo_EducationEqualToArgument {
  updatedAt: Date
  uistate: Float
  school: String
  objectId: String
  createdAt: Date
  state: Float
  uiworkyears: Float
  lineno: Float
}

input Demo_EducationExistsArgument {
  updatedAt: Boolean
  uistate: Boolean
  school: Boolean
  objectId: Boolean
  createdAt: Boolean
  state: Boolean
  uiworkyears: Boolean
  lineno: Boolean
  demo: Boolean
  createdby: Boolean
}

enum Demo_EducationFields {
  updatedAt
  uistate
  school
  objectId
  createdAt
  state
  uiworkyears
  lineno
  demo
  createdby
}

input Demo_EducationGreaterThanArgument {
  updatedAt: Date
  uistate: Float
  school: String
  objectId: String
  createdAt: Date
  state: Float
  uiworkyears: Float
  lineno: Float
}

input Demo_EducationGreaterThanOrEqualToArgument {
  updatedAt: Date
  uistate: Float
  school: String
  objectId: String
  createdAt: Date
  state: Float
  uiworkyears: Float
  lineno: Float
}

input Demo_EducationLessThanArgument {
  updatedAt: Date
  uistate: Float
  school: String
  objectId: String
  createdAt: Date
  state: Float
  uiworkyears: Float
  lineno: Float
}

input Demo_EducationLessThanOrEqualToArgument {
  updatedAt: Date
  uistate: Float
  school: String
  objectId: String
  createdAt: Date
  state: Float
  uiworkyears: Float
  lineno: Float
}

type Demo_Experience {
  updatedAt: Date
  uistate: Float
  objectId: ID
  createdAt: Date
  state: Float
  uiworkyears: Float
  lineno: Float
  demo: Demo
  createdby: _User
}

input Demo_ExperienceContainedInArgument {
  updatedAt: [ID]
  uistate: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  uiworkyears: [ID]
  lineno: [ID]
  demo: [ID]
  createdby: [ID]
}

input Demo_ExperienceContainsAllArgument {
  updatedAt: [ID]
  uistate: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  uiworkyears: [ID]
  lineno: [ID]
  demo: [ID]
  createdby: [ID]
}

input Demo_ExperienceEqualToArgument {
  updatedAt: Date
  uistate: Float
  objectId: String
  createdAt: Date
  state: Float
  uiworkyears: Float
  lineno: Float
}

input Demo_ExperienceExistsArgument {
  updatedAt: Boolean
  uistate: Boolean
  objectId: Boolean
  createdAt: Boolean
  state: Boolean
  uiworkyears: Boolean
  lineno: Boolean
  demo: Boolean
  createdby: Boolean
}

enum Demo_ExperienceFields {
  updatedAt
  uistate
  objectId
  createdAt
  state
  uiworkyears
  lineno
  demo
  createdby
}

input Demo_ExperienceGreaterThanArgument {
  updatedAt: Date
  uistate: Float
  objectId: String
  createdAt: Date
  state: Float
  uiworkyears: Float
  lineno: Float
}

input Demo_ExperienceGreaterThanOrEqualToArgument {
  updatedAt: Date
  uistate: Float
  objectId: String
  createdAt: Date
  state: Float
  uiworkyears: Float
  lineno: Float
}

input Demo_ExperienceLessThanArgument {
  updatedAt: Date
  uistate: Float
  objectId: String
  createdAt: Date
  state: Float
  uiworkyears: Float
  lineno: Float
}

input Demo_ExperienceLessThanOrEqualToArgument {
  updatedAt: Date
  uistate: Float
  objectId: String
  createdAt: Date
  state: Float
  uiworkyears: Float
  lineno: Float
}

input DemoContainedInArgument {
  updatedAt: [ID]
  uistate: [ID]
  p191: [ID]
  p21: [ID]
  objectId: [ID]
  p192: [ID]
  createdAt: [ID]
  state: [ID]
  uiworkyears: [ID]
  orderno: [ID]
  createdby: [ID]
}

input DemoContainsAllArgument {
  updatedAt: [ID]
  uistate: [ID]
  p191: [ID]
  p21: [ID]
  objectId: [ID]
  p192: [ID]
  createdAt: [ID]
  state: [ID]
  uiworkyears: [ID]
  orderno: [ID]
  createdby: [ID]
}

input DemoEqualToArgument {
  updatedAt: Date
  uistate: Float
  p191: File
  p21: Float
  objectId: String
  p192: File
  createdAt: Date
  state: Float
  uiworkyears: Float
  orderno: String
}

input DemoExistsArgument {
  updatedAt: Boolean
  uistate: Boolean
  p191: Boolean
  p21: Boolean
  objectId: Boolean
  p192: Boolean
  createdAt: Boolean
  state: Boolean
  uiworkyears: Boolean
  orderno: Boolean
  createdby: Boolean
}

enum DemoFields {
  updatedAt
  uistate
  p191
  p21
  objectId
  p192
  createdAt
  state
  uiworkyears
  orderno
  createdby
}

input DemoGreaterThanArgument {
  updatedAt: Date
  uistate: Float
  p191: File
  p21: Float
  objectId: String
  p192: File
  createdAt: Date
  state: Float
  uiworkyears: Float
  orderno: String
}

input DemoGreaterThanOrEqualToArgument {
  updatedAt: Date
  uistate: Float
  p191: File
  p21: Float
  objectId: String
  p192: File
  createdAt: Date
  state: Float
  uiworkyears: Float
  orderno: String
}

input DemoLessThanArgument {
  updatedAt: Date
  uistate: Float
  p191: File
  p21: Float
  objectId: String
  p192: File
  createdAt: Date
  state: Float
  uiworkyears: Float
  orderno: String
}

input DemoLessThanOrEqualToArgument {
  updatedAt: Date
  uistate: Float
  p191: File
  p21: Float
  objectId: String
  p192: File
  createdAt: Date
  state: Float
  uiworkyears: Float
  orderno: String
}

type e {
  objectId: ID
  createdAt: Date
  updatedAt: Date
  name: String
}

input eContainedInArgument {
  objectId: [ID]
  createdAt: [ID]
  updatedAt: [ID]
  name: [ID]
}

input eContainsAllArgument {
  objectId: [ID]
  createdAt: [ID]
  updatedAt: [ID]
  name: [ID]
}

input eEqualToArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  name: String
}

input eExistsArgument {
  objectId: Boolean
  createdAt: Boolean
  updatedAt: Boolean
  name: Boolean
}

enum eFields {
  objectId
  createdAt
  updatedAt
  name
}

input eGreaterThanArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  name: String
}

input eGreaterThanOrEqualToArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  name: String
}

input eLessThanArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  name: String
}

input eLessThanOrEqualToArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  name: String
}

type Employee {
  address: String
  email: String
  updatedAt: Date
  uistate: Float
  sex: Float
  marryState: Boolean
  name: String
  objectId: ID
  createdAt: Date
  state: Float
  uiworkyears: Float
  tel: String
  workExperience: Float
  photo: File
  idCard: String
  orderno: String
  job: Float
  createdby: _User
  employeeOfEmployee_Experience(objectId: ID, ascending: Employee_ExperienceFields, descending: Employee_ExperienceFields, limit: Int, equalTo: Employee_ExperienceEqualToArgument, greaterThan: Employee_ExperienceGreaterThanArgument, greaterThanOrEqualTo: Employee_ExperienceGreaterThanOrEqualToArgument, lessThan: Employee_ExperienceLessThanArgument, lessThanOrEqualTo: Employee_ExperienceLessThanOrEqualToArgument, containedIn: Employee_ExperienceContainedInArgument, containsAll: Employee_ExperienceContainsAllArgument, exists: Employee_ExperienceExistsArgument): [Employee_Experience]
}

type Employee_Experience {
  description: String
  updatedAt: Date
  uistate: Float
  timefrom: Date
  objectId: ID
  createdAt: Date
  state: Float
  uiworkyears: Float
  employee: Employee
  title: String
  iscurrnetworkhere: Boolean
  lineno: Float
  company: String
  timeto: Date
  createdby: _User
}

input Employee_ExperienceContainedInArgument {
  description: [ID]
  updatedAt: [ID]
  uistate: [ID]
  timefrom: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  uiworkyears: [ID]
  employee: [ID]
  title: [ID]
  iscurrnetworkhere: [ID]
  lineno: [ID]
  company: [ID]
  timeto: [ID]
  createdby: [ID]
}

input Employee_ExperienceContainsAllArgument {
  description: [ID]
  updatedAt: [ID]
  uistate: [ID]
  timefrom: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  uiworkyears: [ID]
  employee: [ID]
  title: [ID]
  iscurrnetworkhere: [ID]
  lineno: [ID]
  company: [ID]
  timeto: [ID]
  createdby: [ID]
}

input Employee_ExperienceEqualToArgument {
  description: String
  updatedAt: Date
  uistate: Float
  timefrom: Date
  objectId: String
  createdAt: Date
  state: Float
  uiworkyears: Float
  title: String
  iscurrnetworkhere: Boolean
  lineno: Float
  company: String
  timeto: Date
}

input Employee_ExperienceExistsArgument {
  description: Boolean
  updatedAt: Boolean
  uistate: Boolean
  timefrom: Boolean
  objectId: Boolean
  createdAt: Boolean
  state: Boolean
  uiworkyears: Boolean
  employee: Boolean
  title: Boolean
  iscurrnetworkhere: Boolean
  lineno: Boolean
  company: Boolean
  timeto: Boolean
  createdby: Boolean
}

enum Employee_ExperienceFields {
  description
  updatedAt
  uistate
  timefrom
  objectId
  createdAt
  state
  uiworkyears
  employee
  title
  iscurrnetworkhere
  lineno
  company
  timeto
  createdby
}

input Employee_ExperienceGreaterThanArgument {
  description: String
  updatedAt: Date
  uistate: Float
  timefrom: Date
  objectId: String
  createdAt: Date
  state: Float
  uiworkyears: Float
  title: String
  iscurrnetworkhere: Boolean
  lineno: Float
  company: String
  timeto: Date
}

input Employee_ExperienceGreaterThanOrEqualToArgument {
  description: String
  updatedAt: Date
  uistate: Float
  timefrom: Date
  objectId: String
  createdAt: Date
  state: Float
  uiworkyears: Float
  title: String
  iscurrnetworkhere: Boolean
  lineno: Float
  company: String
  timeto: Date
}

input Employee_ExperienceLessThanArgument {
  description: String
  updatedAt: Date
  uistate: Float
  timefrom: Date
  objectId: String
  createdAt: Date
  state: Float
  uiworkyears: Float
  title: String
  iscurrnetworkhere: Boolean
  lineno: Float
  company: String
  timeto: Date
}

input Employee_ExperienceLessThanOrEqualToArgument {
  description: String
  updatedAt: Date
  uistate: Float
  timefrom: Date
  objectId: String
  createdAt: Date
  state: Float
  uiworkyears: Float
  title: String
  iscurrnetworkhere: Boolean
  lineno: Float
  company: String
  timeto: Date
}

input EmployeeContainedInArgument {
  address: [ID]
  email: [ID]
  updatedAt: [ID]
  uistate: [ID]
  sex: [ID]
  marryState: [ID]
  name: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  uiworkyears: [ID]
  tel: [ID]
  workExperience: [ID]
  photo: [ID]
  idCard: [ID]
  orderno: [ID]
  job: [ID]
  createdby: [ID]
}

input EmployeeContainsAllArgument {
  address: [ID]
  email: [ID]
  updatedAt: [ID]
  uistate: [ID]
  sex: [ID]
  marryState: [ID]
  name: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  uiworkyears: [ID]
  tel: [ID]
  workExperience: [ID]
  photo: [ID]
  idCard: [ID]
  orderno: [ID]
  job: [ID]
  createdby: [ID]
}

input EmployeeEqualToArgument {
  address: String
  email: String
  updatedAt: Date
  uistate: Float
  sex: Float
  marryState: Boolean
  name: String
  objectId: String
  createdAt: Date
  state: Float
  uiworkyears: Float
  tel: String
  workExperience: Float
  photo: File
  idCard: String
  orderno: String
  job: Float
}

input EmployeeExistsArgument {
  address: Boolean
  email: Boolean
  updatedAt: Boolean
  uistate: Boolean
  sex: Boolean
  marryState: Boolean
  name: Boolean
  objectId: Boolean
  createdAt: Boolean
  state: Boolean
  uiworkyears: Boolean
  tel: Boolean
  workExperience: Boolean
  photo: Boolean
  idCard: Boolean
  orderno: Boolean
  job: Boolean
  createdby: Boolean
}

enum EmployeeFields {
  address
  email
  updatedAt
  uistate
  sex
  marryState
  name
  objectId
  createdAt
  state
  uiworkyears
  tel
  workExperience
  photo
  idCard
  orderno
  job
  createdby
}

input EmployeeGreaterThanArgument {
  address: String
  email: String
  updatedAt: Date
  uistate: Float
  sex: Float
  marryState: Boolean
  name: String
  objectId: String
  createdAt: Date
  state: Float
  uiworkyears: Float
  tel: String
  workExperience: Float
  photo: File
  idCard: String
  orderno: String
  job: Float
}

input EmployeeGreaterThanOrEqualToArgument {
  address: String
  email: String
  updatedAt: Date
  uistate: Float
  sex: Float
  marryState: Boolean
  name: String
  objectId: String
  createdAt: Date
  state: Float
  uiworkyears: Float
  tel: String
  workExperience: Float
  photo: File
  idCard: String
  orderno: String
  job: Float
}

input EmployeeLessThanArgument {
  address: String
  email: String
  updatedAt: Date
  uistate: Float
  sex: Float
  marryState: Boolean
  name: String
  objectId: String
  createdAt: Date
  state: Float
  uiworkyears: Float
  tel: String
  workExperience: Float
  photo: File
  idCard: String
  orderno: String
  job: Float
}

input EmployeeLessThanOrEqualToArgument {
  address: String
  email: String
  updatedAt: Date
  uistate: Float
  sex: Float
  marryState: Boolean
  name: String
  objectId: String
  createdAt: Date
  state: Float
  uiworkyears: Float
  tel: String
  workExperience: Float
  photo: File
  idCard: String
  orderno: String
  job: Float
}

scalar File

scalar GeoPoint

type Item {
  category: Category
  rotationpic7: File
  supplier: Supplier
  updatedAt: Date
  detailpic4: File
  desc: String
  store: Store
  detailpic1: File
  detailpic7: File
  rotationpic2: File
  technician: Technician
  name: String
  objectId: ID
  store_name: String
  rotationpic3: File
  originalprice: Float
  detailpic3: File
  createdAt: Date
  detailpic2: File
  state: Float
  sellCount: Float
  supplier_name: String
  detailpic6: File
  rotationpic8: File
  rotationpic6: File
  category_name: String
  detailpic8: File
  code: String
  detailpic5: File
  price: Float
  rotationpic5: File
  category_type: Float
  servicetype: Float
  rotationpic1: File
  rotationpic4: File
  technician_name: String
  createdby: _User
  itemOfItem_Region(objectId: ID, ascending: Item_RegionFields, descending: Item_RegionFields, limit: Int, equalTo: Item_RegionEqualToArgument, greaterThan: Item_RegionGreaterThanArgument, greaterThanOrEqualTo: Item_RegionGreaterThanOrEqualToArgument, lessThan: Item_RegionLessThanArgument, lessThanOrEqualTo: Item_RegionLessThanOrEqualToArgument, containedIn: Item_RegionContainedInArgument, containsAll: Item_RegionContainsAllArgument, exists: Item_RegionExistsArgument): [Item_Region]
  itemOfSKU(objectId: ID, ascending: SKUFields, descending: SKUFields, limit: Int, equalTo: SKUEqualToArgument, greaterThan: SKUGreaterThanArgument, greaterThanOrEqualTo: SKUGreaterThanOrEqualToArgument, lessThan: SKULessThanArgument, lessThanOrEqualTo: SKULessThanOrEqualToArgument, containedIn: SKUContainedInArgument, containsAll: SKUContainsAllArgument, exists: SKUExistsArgument): [SKU]
  itemOfOrder_Line(objectId: ID, ascending: Order_LineFields, descending: Order_LineFields, limit: Int, equalTo: Order_LineEqualToArgument, greaterThan: Order_LineGreaterThanArgument, greaterThanOrEqualTo: Order_LineGreaterThanOrEqualToArgument, lessThan: Order_LineLessThanArgument, lessThanOrEqualTo: Order_LineLessThanOrEqualToArgument, containedIn: Order_LineContainedInArgument, containsAll: Order_LineContainsAllArgument, exists: Order_LineExistsArgument): [Order_Line]
}

type Item_Region {
  updatedAt: Date
  region_name: String
  objectId: ID
  item: Item
  createdAt: Date
  state: Float
  region: Region
  lineno: Float
  createdby: _User
}

input Item_RegionContainedInArgument {
  updatedAt: [ID]
  region_name: [ID]
  objectId: [ID]
  item: [ID]
  createdAt: [ID]
  state: [ID]
  region: [ID]
  lineno: [ID]
  createdby: [ID]
}

input Item_RegionContainsAllArgument {
  updatedAt: [ID]
  region_name: [ID]
  objectId: [ID]
  item: [ID]
  createdAt: [ID]
  state: [ID]
  region: [ID]
  lineno: [ID]
  createdby: [ID]
}

input Item_RegionEqualToArgument {
  updatedAt: Date
  region_name: String
  objectId: String
  createdAt: Date
  state: Float
  lineno: Float
}

input Item_RegionExistsArgument {
  updatedAt: Boolean
  region_name: Boolean
  objectId: Boolean
  item: Boolean
  createdAt: Boolean
  state: Boolean
  region: Boolean
  lineno: Boolean
  createdby: Boolean
}

enum Item_RegionFields {
  updatedAt
  region_name
  objectId
  item
  createdAt
  state
  region
  lineno
  createdby
}

input Item_RegionGreaterThanArgument {
  updatedAt: Date
  region_name: String
  objectId: String
  createdAt: Date
  state: Float
  lineno: Float
}

input Item_RegionGreaterThanOrEqualToArgument {
  updatedAt: Date
  region_name: String
  objectId: String
  createdAt: Date
  state: Float
  lineno: Float
}

input Item_RegionLessThanArgument {
  updatedAt: Date
  region_name: String
  objectId: String
  createdAt: Date
  state: Float
  lineno: Float
}

input Item_RegionLessThanOrEqualToArgument {
  updatedAt: Date
  region_name: String
  objectId: String
  createdAt: Date
  state: Float
  lineno: Float
}

input ItemContainedInArgument {
  category: [ID]
  rotationpic7: [ID]
  supplier: [ID]
  updatedAt: [ID]
  detailpic4: [ID]
  desc: [ID]
  store: [ID]
  detailpic1: [ID]
  detailpic7: [ID]
  rotationpic2: [ID]
  technician: [ID]
  name: [ID]
  objectId: [ID]
  store_name: [ID]
  rotationpic3: [ID]
  originalprice: [ID]
  detailpic3: [ID]
  createdAt: [ID]
  detailpic2: [ID]
  state: [ID]
  sellCount: [ID]
  supplier_name: [ID]
  detailpic6: [ID]
  rotationpic8: [ID]
  rotationpic6: [ID]
  category_name: [ID]
  detailpic8: [ID]
  code: [ID]
  detailpic5: [ID]
  price: [ID]
  rotationpic5: [ID]
  category_type: [ID]
  servicetype: [ID]
  rotationpic1: [ID]
  rotationpic4: [ID]
  technician_name: [ID]
  createdby: [ID]
}

input ItemContainsAllArgument {
  category: [ID]
  rotationpic7: [ID]
  supplier: [ID]
  updatedAt: [ID]
  detailpic4: [ID]
  desc: [ID]
  store: [ID]
  detailpic1: [ID]
  detailpic7: [ID]
  rotationpic2: [ID]
  technician: [ID]
  name: [ID]
  objectId: [ID]
  store_name: [ID]
  rotationpic3: [ID]
  originalprice: [ID]
  detailpic3: [ID]
  createdAt: [ID]
  detailpic2: [ID]
  state: [ID]
  sellCount: [ID]
  supplier_name: [ID]
  detailpic6: [ID]
  rotationpic8: [ID]
  rotationpic6: [ID]
  category_name: [ID]
  detailpic8: [ID]
  code: [ID]
  detailpic5: [ID]
  price: [ID]
  rotationpic5: [ID]
  category_type: [ID]
  servicetype: [ID]
  rotationpic1: [ID]
  rotationpic4: [ID]
  technician_name: [ID]
  createdby: [ID]
}

input ItemEqualToArgument {
  rotationpic7: File
  updatedAt: Date
  detailpic4: File
  desc: String
  detailpic1: File
  detailpic7: File
  rotationpic2: File
  name: String
  objectId: String
  store_name: String
  rotationpic3: File
  originalprice: Float
  detailpic3: File
  createdAt: Date
  detailpic2: File
  state: Float
  sellCount: Float
  supplier_name: String
  detailpic6: File
  rotationpic8: File
  rotationpic6: File
  category_name: String
  detailpic8: File
  code: String
  detailpic5: File
  price: Float
  rotationpic5: File
  category_type: Float
  servicetype: Float
  rotationpic1: File
  rotationpic4: File
  technician_name: String
}

input ItemExistsArgument {
  category: Boolean
  rotationpic7: Boolean
  supplier: Boolean
  updatedAt: Boolean
  detailpic4: Boolean
  desc: Boolean
  store: Boolean
  detailpic1: Boolean
  detailpic7: Boolean
  rotationpic2: Boolean
  technician: Boolean
  name: Boolean
  objectId: Boolean
  store_name: Boolean
  rotationpic3: Boolean
  originalprice: Boolean
  detailpic3: Boolean
  createdAt: Boolean
  detailpic2: Boolean
  state: Boolean
  sellCount: Boolean
  supplier_name: Boolean
  detailpic6: Boolean
  rotationpic8: Boolean
  rotationpic6: Boolean
  category_name: Boolean
  detailpic8: Boolean
  code: Boolean
  detailpic5: Boolean
  price: Boolean
  rotationpic5: Boolean
  category_type: Boolean
  servicetype: Boolean
  rotationpic1: Boolean
  rotationpic4: Boolean
  technician_name: Boolean
  createdby: Boolean
}

enum ItemFields {
  category
  rotationpic7
  supplier
  updatedAt
  detailpic4
  desc
  store
  detailpic1
  detailpic7
  rotationpic2
  technician
  name
  objectId
  store_name
  rotationpic3
  originalprice
  detailpic3
  createdAt
  detailpic2
  state
  sellCount
  supplier_name
  detailpic6
  rotationpic8
  rotationpic6
  category_name
  detailpic8
  code
  detailpic5
  price
  rotationpic5
  category_type
  servicetype
  rotationpic1
  rotationpic4
  technician_name
  createdby
}

input ItemGreaterThanArgument {
  rotationpic7: File
  updatedAt: Date
  detailpic4: File
  desc: String
  detailpic1: File
  detailpic7: File
  rotationpic2: File
  name: String
  objectId: String
  store_name: String
  rotationpic3: File
  originalprice: Float
  detailpic3: File
  createdAt: Date
  detailpic2: File
  state: Float
  sellCount: Float
  supplier_name: String
  detailpic6: File
  rotationpic8: File
  rotationpic6: File
  category_name: String
  detailpic8: File
  code: String
  detailpic5: File
  price: Float
  rotationpic5: File
  category_type: Float
  servicetype: Float
  rotationpic1: File
  rotationpic4: File
  technician_name: String
}

input ItemGreaterThanOrEqualToArgument {
  rotationpic7: File
  updatedAt: Date
  detailpic4: File
  desc: String
  detailpic1: File
  detailpic7: File
  rotationpic2: File
  name: String
  objectId: String
  store_name: String
  rotationpic3: File
  originalprice: Float
  detailpic3: File
  createdAt: Date
  detailpic2: File
  state: Float
  sellCount: Float
  supplier_name: String
  detailpic6: File
  rotationpic8: File
  rotationpic6: File
  category_name: String
  detailpic8: File
  code: String
  detailpic5: File
  price: Float
  rotationpic5: File
  category_type: Float
  servicetype: Float
  rotationpic1: File
  rotationpic4: File
  technician_name: String
}

input ItemLessThanArgument {
  rotationpic7: File
  updatedAt: Date
  detailpic4: File
  desc: String
  detailpic1: File
  detailpic7: File
  rotationpic2: File
  name: String
  objectId: String
  store_name: String
  rotationpic3: File
  originalprice: Float
  detailpic3: File
  createdAt: Date
  detailpic2: File
  state: Float
  sellCount: Float
  supplier_name: String
  detailpic6: File
  rotationpic8: File
  rotationpic6: File
  category_name: String
  detailpic8: File
  code: String
  detailpic5: File
  price: Float
  rotationpic5: File
  category_type: Float
  servicetype: Float
  rotationpic1: File
  rotationpic4: File
  technician_name: String
}

input ItemLessThanOrEqualToArgument {
  rotationpic7: File
  updatedAt: Date
  detailpic4: File
  desc: String
  detailpic1: File
  detailpic7: File
  rotationpic2: File
  name: String
  objectId: String
  store_name: String
  rotationpic3: File
  originalprice: Float
  detailpic3: File
  createdAt: Date
  detailpic2: File
  state: Float
  sellCount: Float
  supplier_name: String
  detailpic6: File
  rotationpic8: File
  rotationpic6: File
  category_name: String
  detailpic8: File
  code: String
  detailpic5: File
  price: Float
  rotationpic5: File
  category_type: Float
  servicetype: Float
  rotationpic1: File
  rotationpic4: File
  technician_name: String
}

type JOY_Match {
  objectId: ID
  createdAt: Date
  updatedAt: Date
  totalprice: Float
  orderno: String
}

input JOY_MatchContainedInArgument {
  objectId: [ID]
  createdAt: [ID]
  updatedAt: [ID]
  totalprice: [ID]
  orderno: [ID]
}

input JOY_MatchContainsAllArgument {
  objectId: [ID]
  createdAt: [ID]
  updatedAt: [ID]
  totalprice: [ID]
  orderno: [ID]
}

input JOY_MatchEqualToArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  totalprice: Float
  orderno: String
}

input JOY_MatchExistsArgument {
  objectId: Boolean
  createdAt: Boolean
  updatedAt: Boolean
  totalprice: Boolean
  orderno: Boolean
}

enum JOY_MatchFields {
  objectId
  createdAt
  updatedAt
  totalprice
  orderno
}

input JOY_MatchGreaterThanArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  totalprice: Float
  orderno: String
}

input JOY_MatchGreaterThanOrEqualToArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  totalprice: Float
  orderno: String
}

input JOY_MatchLessThanArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  totalprice: Float
  orderno: String
}

input JOY_MatchLessThanOrEqualToArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  totalprice: Float
  orderno: String
}

type LeanStorage {
  Demo_Education(objectId: ID, ascending: Demo_EducationFields, descending: Demo_EducationFields, limit: Int, equalTo: Demo_EducationEqualToArgument, greaterThan: Demo_EducationGreaterThanArgument, greaterThanOrEqualTo: Demo_EducationGreaterThanOrEqualToArgument, lessThan: Demo_EducationLessThanArgument, lessThanOrEqualTo: Demo_EducationLessThanOrEqualToArgument, containedIn: Demo_EducationContainedInArgument, containsAll: Demo_EducationContainsAllArgument, exists: Demo_EducationExistsArgument): [Demo_Education]
  CX_ChargeOrder(objectId: ID, ascending: CX_ChargeOrderFields, descending: CX_ChargeOrderFields, limit: Int, equalTo: CX_ChargeOrderEqualToArgument, greaterThan: CX_ChargeOrderGreaterThanArgument, greaterThanOrEqualTo: CX_ChargeOrderGreaterThanOrEqualToArgument, lessThan: CX_ChargeOrderLessThanArgument, lessThanOrEqualTo: CX_ChargeOrderLessThanOrEqualToArgument, containedIn: CX_ChargeOrderContainedInArgument, containsAll: CX_ChargeOrderContainsAllArgument, exists: CX_ChargeOrderExistsArgument): [CX_ChargeOrder]
  BASE_Sharelog(objectId: ID, ascending: BASE_SharelogFields, descending: BASE_SharelogFields, limit: Int, equalTo: BASE_SharelogEqualToArgument, greaterThan: BASE_SharelogGreaterThanArgument, greaterThanOrEqualTo: BASE_SharelogGreaterThanOrEqualToArgument, lessThan: BASE_SharelogLessThanArgument, lessThanOrEqualTo: BASE_SharelogLessThanOrEqualToArgument, containedIn: BASE_SharelogContainedInArgument, containsAll: BASE_SharelogContainsAllArgument, exists: BASE_SharelogExistsArgument): [BASE_Sharelog]
  Order(objectId: ID, ascending: OrderFields, descending: OrderFields, limit: Int, equalTo: OrderEqualToArgument, greaterThan: OrderGreaterThanArgument, greaterThanOrEqualTo: OrderGreaterThanOrEqualToArgument, lessThan: OrderLessThanArgument, lessThanOrEqualTo: OrderLessThanOrEqualToArgument, containedIn: OrderContainedInArgument, containsAll: OrderContainsAllArgument, exists: OrderExistsArgument): [Order]
  Setting(objectId: ID, ascending: SettingFields, descending: SettingFields, limit: Int, equalTo: SettingEqualToArgument, greaterThan: SettingGreaterThanArgument, greaterThanOrEqualTo: SettingGreaterThanOrEqualToArgument, lessThan: SettingLessThanArgument, lessThanOrEqualTo: SettingLessThanOrEqualToArgument, containedIn: SettingContainedInArgument, containsAll: SettingContainsAllArgument, exists: SettingExistsArgument): [Setting]
  BASE_Sharelog_Cost(objectId: ID, ascending: BASE_Sharelog_CostFields, descending: BASE_Sharelog_CostFields, limit: Int, equalTo: BASE_Sharelog_CostEqualToArgument, greaterThan: BASE_Sharelog_CostGreaterThanArgument, greaterThanOrEqualTo: BASE_Sharelog_CostGreaterThanOrEqualToArgument, lessThan: BASE_Sharelog_CostLessThanArgument, lessThanOrEqualTo: BASE_Sharelog_CostLessThanOrEqualToArgument, containedIn: BASE_Sharelog_CostContainedInArgument, containsAll: BASE_Sharelog_CostContainsAllArgument, exists: BASE_Sharelog_CostExistsArgument): [BASE_Sharelog_Cost]
  Store(objectId: ID, ascending: StoreFields, descending: StoreFields, limit: Int, equalTo: StoreEqualToArgument, greaterThan: StoreGreaterThanArgument, greaterThanOrEqualTo: StoreGreaterThanOrEqualToArgument, lessThan: StoreLessThanArgument, lessThanOrEqualTo: StoreLessThanOrEqualToArgument, containedIn: StoreContainedInArgument, containsAll: StoreContainsAllArgument, exists: StoreExistsArgument): [Store]
  BASE_Transfer(objectId: ID, ascending: BASE_TransferFields, descending: BASE_TransferFields, limit: Int, equalTo: BASE_TransferEqualToArgument, greaterThan: BASE_TransferGreaterThanArgument, greaterThanOrEqualTo: BASE_TransferGreaterThanOrEqualToArgument, lessThan: BASE_TransferLessThanArgument, lessThanOrEqualTo: BASE_TransferLessThanOrEqualToArgument, containedIn: BASE_TransferContainedInArgument, containsAll: BASE_TransferContainsAllArgument, exists: BASE_TransferExistsArgument): [BASE_Transfer]
  Category(objectId: ID, ascending: CategoryFields, descending: CategoryFields, limit: Int, equalTo: CategoryEqualToArgument, greaterThan: CategoryGreaterThanArgument, greaterThanOrEqualTo: CategoryGreaterThanOrEqualToArgument, lessThan: CategoryLessThanArgument, lessThanOrEqualTo: CategoryLessThanOrEqualToArgument, containedIn: CategoryContainedInArgument, containsAll: CategoryContainsAllArgument, exists: CategoryExistsArgument): [Category]
  e(objectId: ID, ascending: eFields, descending: eFields, limit: Int, equalTo: eEqualToArgument, greaterThan: eGreaterThanArgument, greaterThanOrEqualTo: eGreaterThanOrEqualToArgument, lessThan: eLessThanArgument, lessThanOrEqualTo: eLessThanOrEqualToArgument, containedIn: eContainedInArgument, containsAll: eContainsAllArgument, exists: eExistsArgument): [e]
  CX_Technician_Certificate(objectId: ID, ascending: CX_Technician_CertificateFields, descending: CX_Technician_CertificateFields, limit: Int, equalTo: CX_Technician_CertificateEqualToArgument, greaterThan: CX_Technician_CertificateGreaterThanArgument, greaterThanOrEqualTo: CX_Technician_CertificateGreaterThanOrEqualToArgument, lessThan: CX_Technician_CertificateLessThanArgument, lessThanOrEqualTo: CX_Technician_CertificateLessThanOrEqualToArgument, containedIn: CX_Technician_CertificateContainedInArgument, containsAll: CX_Technician_CertificateContainsAllArgument, exists: CX_Technician_CertificateExistsArgument): [CX_Technician_Certificate]
  Log(objectId: ID, ascending: LogFields, descending: LogFields, limit: Int, equalTo: LogEqualToArgument, greaterThan: LogGreaterThanArgument, greaterThanOrEqualTo: LogGreaterThanOrEqualToArgument, lessThan: LogLessThanArgument, lessThanOrEqualTo: LogLessThanOrEqualToArgument, containedIn: LogContainedInArgument, containsAll: LogContainsAllArgument, exists: LogExistsArgument): [Log]
  BASE_Article(objectId: ID, ascending: BASE_ArticleFields, descending: BASE_ArticleFields, limit: Int, equalTo: BASE_ArticleEqualToArgument, greaterThan: BASE_ArticleGreaterThanArgument, greaterThanOrEqualTo: BASE_ArticleGreaterThanOrEqualToArgument, lessThan: BASE_ArticleLessThanArgument, lessThanOrEqualTo: BASE_ArticleLessThanOrEqualToArgument, containedIn: BASE_ArticleContainedInArgument, containsAll: BASE_ArticleContainsAllArgument, exists: BASE_ArticleExistsArgument): [BASE_Article]
  _User(objectId: ID, ascending: _UserFields, descending: _UserFields, limit: Int, equalTo: _UserEqualToArgument, greaterThan: _UserGreaterThanArgument, greaterThanOrEqualTo: _UserGreaterThanOrEqualToArgument, lessThan: _UserLessThanArgument, lessThanOrEqualTo: _UserLessThanOrEqualToArgument, containedIn: _UserContainedInArgument, containsAll: _UserContainsAllArgument, exists: _UserExistsArgument): [_User]
  allJSON(objectId: ID, ascending: allJSONFields, descending: allJSONFields, limit: Int, equalTo: allJSONEqualToArgument, greaterThan: allJSONGreaterThanArgument, greaterThanOrEqualTo: allJSONGreaterThanOrEqualToArgument, lessThan: allJSONLessThanArgument, lessThanOrEqualTo: allJSONLessThanOrEqualToArgument, containedIn: allJSONContainedInArgument, containsAll: allJSONContainsAllArgument, exists: allJSONExistsArgument): [allJSON]
  _Follower(objectId: ID, ascending: _FollowerFields, descending: _FollowerFields, limit: Int, equalTo: _FollowerEqualToArgument, greaterThan: _FollowerGreaterThanArgument, greaterThanOrEqualTo: _FollowerGreaterThanOrEqualToArgument, lessThan: _FollowerLessThanArgument, lessThanOrEqualTo: _FollowerLessThanOrEqualToArgument, containedIn: _FollowerContainedInArgument, containsAll: _FollowerContainsAllArgument, exists: _FollowerExistsArgument): [_Follower]
  _Installation(objectId: ID, ascending: _InstallationFields, descending: _InstallationFields, limit: Int, equalTo: _InstallationEqualToArgument, greaterThan: _InstallationGreaterThanArgument, greaterThanOrEqualTo: _InstallationGreaterThanOrEqualToArgument, lessThan: _InstallationLessThanArgument, lessThanOrEqualTo: _InstallationLessThanOrEqualToArgument, containedIn: _InstallationContainedInArgument, containsAll: _InstallationContainsAllArgument, exists: _InstallationExistsArgument): [_Installation]
  BASE_Address(objectId: ID, ascending: BASE_AddressFields, descending: BASE_AddressFields, limit: Int, equalTo: BASE_AddressEqualToArgument, greaterThan: BASE_AddressGreaterThanArgument, greaterThanOrEqualTo: BASE_AddressGreaterThanOrEqualToArgument, lessThan: BASE_AddressLessThanArgument, lessThanOrEqualTo: BASE_AddressLessThanOrEqualToArgument, containedIn: BASE_AddressContainedInArgument, containsAll: BASE_AddressContainsAllArgument, exists: BASE_AddressExistsArgument): [BASE_Address]
  Customer_FavoriteLine(objectId: ID, ascending: Customer_FavoriteLineFields, descending: Customer_FavoriteLineFields, limit: Int, equalTo: Customer_FavoriteLineEqualToArgument, greaterThan: Customer_FavoriteLineGreaterThanArgument, greaterThanOrEqualTo: Customer_FavoriteLineGreaterThanOrEqualToArgument, lessThan: Customer_FavoriteLineLessThanArgument, lessThanOrEqualTo: Customer_FavoriteLineLessThanOrEqualToArgument, containedIn: Customer_FavoriteLineContainedInArgument, containsAll: Customer_FavoriteLineContainsAllArgument, exists: Customer_FavoriteLineExistsArgument): [Customer_FavoriteLine]
  CX_Service(objectId: ID, ascending: CX_ServiceFields, descending: CX_ServiceFields, limit: Int, equalTo: CX_ServiceEqualToArgument, greaterThan: CX_ServiceGreaterThanArgument, greaterThanOrEqualTo: CX_ServiceGreaterThanOrEqualToArgument, lessThan: CX_ServiceLessThanArgument, lessThanOrEqualTo: CX_ServiceLessThanOrEqualToArgument, containedIn: CX_ServiceContainedInArgument, containsAll: CX_ServiceContainsAllArgument, exists: CX_ServiceExistsArgument): [CX_Service]
  JOY_Match(objectId: ID, ascending: JOY_MatchFields, descending: JOY_MatchFields, limit: Int, equalTo: JOY_MatchEqualToArgument, greaterThan: JOY_MatchGreaterThanArgument, greaterThanOrEqualTo: JOY_MatchGreaterThanOrEqualToArgument, lessThan: JOY_MatchLessThanArgument, lessThanOrEqualTo: JOY_MatchLessThanOrEqualToArgument, containedIn: JOY_MatchContainedInArgument, containsAll: JOY_MatchContainsAllArgument, exists: JOY_MatchExistsArgument): [JOY_Match]
  Customer(objectId: ID, ascending: CustomerFields, descending: CustomerFields, limit: Int, equalTo: CustomerEqualToArgument, greaterThan: CustomerGreaterThanArgument, greaterThanOrEqualTo: CustomerGreaterThanOrEqualToArgument, lessThan: CustomerLessThanArgument, lessThanOrEqualTo: CustomerLessThanOrEqualToArgument, containedIn: CustomerContainedInArgument, containsAll: CustomerContainsAllArgument, exists: CustomerExistsArgument): [Customer]
  Technician_Region(objectId: ID, ascending: Technician_RegionFields, descending: Technician_RegionFields, limit: Int, equalTo: Technician_RegionEqualToArgument, greaterThan: Technician_RegionGreaterThanArgument, greaterThanOrEqualTo: Technician_RegionGreaterThanOrEqualToArgument, lessThan: Technician_RegionLessThanArgument, lessThanOrEqualTo: Technician_RegionLessThanOrEqualToArgument, containedIn: Technician_RegionContainedInArgument, containsAll: Technician_RegionContainsAllArgument, exists: Technician_RegionExistsArgument): [Technician_Region]
  Technician(objectId: ID, ascending: TechnicianFields, descending: TechnicianFields, limit: Int, equalTo: TechnicianEqualToArgument, greaterThan: TechnicianGreaterThanArgument, greaterThanOrEqualTo: TechnicianGreaterThanOrEqualToArgument, lessThan: TechnicianLessThanArgument, lessThanOrEqualTo: TechnicianLessThanOrEqualToArgument, containedIn: TechnicianContainedInArgument, containsAll: TechnicianContainsAllArgument, exists: TechnicianExistsArgument): [Technician]
  Technician_Certificate(objectId: ID, ascending: Technician_CertificateFields, descending: Technician_CertificateFields, limit: Int, equalTo: Technician_CertificateEqualToArgument, greaterThan: Technician_CertificateGreaterThanArgument, greaterThanOrEqualTo: Technician_CertificateGreaterThanOrEqualToArgument, lessThan: Technician_CertificateLessThanArgument, lessThanOrEqualTo: Technician_CertificateLessThanOrEqualToArgument, containedIn: Technician_CertificateContainedInArgument, containsAll: Technician_CertificateContainsAllArgument, exists: Technician_CertificateExistsArgument): [Technician_Certificate]
  Store_Category(objectId: ID, ascending: Store_CategoryFields, descending: Store_CategoryFields, limit: Int, equalTo: Store_CategoryEqualToArgument, greaterThan: Store_CategoryGreaterThanArgument, greaterThanOrEqualTo: Store_CategoryGreaterThanOrEqualToArgument, lessThan: Store_CategoryLessThanArgument, lessThanOrEqualTo: Store_CategoryLessThanOrEqualToArgument, containedIn: Store_CategoryContainedInArgument, containsAll: Store_CategoryContainsAllArgument, exists: Store_CategoryExistsArgument): [Store_Category]
  CX_DeliveryOrder(objectId: ID, ascending: CX_DeliveryOrderFields, descending: CX_DeliveryOrderFields, limit: Int, equalTo: CX_DeliveryOrderEqualToArgument, greaterThan: CX_DeliveryOrderGreaterThanArgument, greaterThanOrEqualTo: CX_DeliveryOrderGreaterThanOrEqualToArgument, lessThan: CX_DeliveryOrderLessThanArgument, lessThanOrEqualTo: CX_DeliveryOrderLessThanOrEqualToArgument, containedIn: CX_DeliveryOrderContainedInArgument, containsAll: CX_DeliveryOrderContainsAllArgument, exists: CX_DeliveryOrderExistsArgument): [CX_DeliveryOrder]
  Customer_CartSKU(objectId: ID, ascending: Customer_CartSKUFields, descending: Customer_CartSKUFields, limit: Int, equalTo: Customer_CartSKUEqualToArgument, greaterThan: Customer_CartSKUGreaterThanArgument, greaterThanOrEqualTo: Customer_CartSKUGreaterThanOrEqualToArgument, lessThan: Customer_CartSKULessThanArgument, lessThanOrEqualTo: Customer_CartSKULessThanOrEqualToArgument, containedIn: Customer_CartSKUContainedInArgument, containsAll: Customer_CartSKUContainsAllArgument, exists: Customer_CartSKUExistsArgument): [Customer_CartSKU]
  Activity(objectId: ID, ascending: ActivityFields, descending: ActivityFields, limit: Int, equalTo: ActivityEqualToArgument, greaterThan: ActivityGreaterThanArgument, greaterThanOrEqualTo: ActivityGreaterThanOrEqualToArgument, lessThan: ActivityLessThanArgument, lessThanOrEqualTo: ActivityLessThanOrEqualToArgument, containedIn: ActivityContainedInArgument, containsAll: ActivityContainsAllArgument, exists: ActivityExistsArgument): [Activity]
  Customer_Address(objectId: ID, ascending: Customer_AddressFields, descending: Customer_AddressFields, limit: Int, equalTo: Customer_AddressEqualToArgument, greaterThan: Customer_AddressGreaterThanArgument, greaterThanOrEqualTo: Customer_AddressGreaterThanOrEqualToArgument, lessThan: Customer_AddressLessThanArgument, lessThanOrEqualTo: Customer_AddressLessThanOrEqualToArgument, containedIn: Customer_AddressContainedInArgument, containsAll: Customer_AddressContainsAllArgument, exists: Customer_AddressExistsArgument): [Customer_Address]
  Store_Branch(objectId: ID, ascending: Store_BranchFields, descending: Store_BranchFields, limit: Int, equalTo: Store_BranchEqualToArgument, greaterThan: Store_BranchGreaterThanArgument, greaterThanOrEqualTo: Store_BranchGreaterThanOrEqualToArgument, lessThan: Store_BranchLessThanArgument, lessThanOrEqualTo: Store_BranchLessThanOrEqualToArgument, containedIn: Store_BranchContainedInArgument, containsAll: Store_BranchContainsAllArgument, exists: Store_BranchExistsArgument): [Store_Branch]
  CX_Technician_Experience(objectId: ID, ascending: CX_Technician_ExperienceFields, descending: CX_Technician_ExperienceFields, limit: Int, equalTo: CX_Technician_ExperienceEqualToArgument, greaterThan: CX_Technician_ExperienceGreaterThanArgument, greaterThanOrEqualTo: CX_Technician_ExperienceGreaterThanOrEqualToArgument, lessThan: CX_Technician_ExperienceLessThanArgument, lessThanOrEqualTo: CX_Technician_ExperienceLessThanOrEqualToArgument, containedIn: CX_Technician_ExperienceContainedInArgument, containsAll: CX_Technician_ExperienceContainsAllArgument, exists: CX_Technician_ExperienceExistsArgument): [CX_Technician_Experience]
  Topic(objectId: ID, ascending: TopicFields, descending: TopicFields, limit: Int, equalTo: TopicEqualToArgument, greaterThan: TopicGreaterThanArgument, greaterThanOrEqualTo: TopicGreaterThanOrEqualToArgument, lessThan: TopicLessThanArgument, lessThanOrEqualTo: TopicLessThanOrEqualToArgument, containedIn: TopicContainedInArgument, containsAll: TopicContainsAllArgument, exists: TopicExistsArgument): [Topic]
  _Followee(objectId: ID, ascending: _FolloweeFields, descending: _FolloweeFields, limit: Int, equalTo: _FolloweeEqualToArgument, greaterThan: _FolloweeGreaterThanArgument, greaterThanOrEqualTo: _FolloweeGreaterThanOrEqualToArgument, lessThan: _FolloweeLessThanArgument, lessThanOrEqualTo: _FolloweeLessThanOrEqualToArgument, containedIn: _FolloweeContainedInArgument, containsAll: _FolloweeContainsAllArgument, exists: _FolloweeExistsArgument): [_Followee]
  Technician_Category(objectId: ID, ascending: Technician_CategoryFields, descending: Technician_CategoryFields, limit: Int, equalTo: Technician_CategoryEqualToArgument, greaterThan: Technician_CategoryGreaterThanArgument, greaterThanOrEqualTo: Technician_CategoryGreaterThanOrEqualToArgument, lessThan: Technician_CategoryLessThanArgument, lessThanOrEqualTo: Technician_CategoryLessThanOrEqualToArgument, containedIn: Technician_CategoryContainedInArgument, containsAll: Technician_CategoryContainsAllArgument, exists: Technician_CategoryExistsArgument): [Technician_Category]
  CX_Router(objectId: ID, ascending: CX_RouterFields, descending: CX_RouterFields, limit: Int, equalTo: CX_RouterEqualToArgument, greaterThan: CX_RouterGreaterThanArgument, greaterThanOrEqualTo: CX_RouterGreaterThanOrEqualToArgument, lessThan: CX_RouterLessThanArgument, lessThanOrEqualTo: CX_RouterLessThanOrEqualToArgument, containedIn: CX_RouterContainedInArgument, containsAll: CX_RouterContainsAllArgument, exists: CX_RouterExistsArgument): [CX_Router]
  CX_Router_Line(objectId: ID, ascending: CX_Router_LineFields, descending: CX_Router_LineFields, limit: Int, equalTo: CX_Router_LineEqualToArgument, greaterThan: CX_Router_LineGreaterThanArgument, greaterThanOrEqualTo: CX_Router_LineGreaterThanOrEqualToArgument, lessThan: CX_Router_LineLessThanArgument, lessThanOrEqualTo: CX_Router_LineLessThanOrEqualToArgument, containedIn: CX_Router_LineContainedInArgument, containsAll: CX_Router_LineContainsAllArgument, exists: CX_Router_LineExistsArgument): [CX_Router_Line]
  CX_Job(objectId: ID, ascending: CX_JobFields, descending: CX_JobFields, limit: Int, equalTo: CX_JobEqualToArgument, greaterThan: CX_JobGreaterThanArgument, greaterThanOrEqualTo: CX_JobGreaterThanOrEqualToArgument, lessThan: CX_JobLessThanArgument, lessThanOrEqualTo: CX_JobLessThanOrEqualToArgument, containedIn: CX_JobContainedInArgument, containsAll: CX_JobContainsAllArgument, exists: CX_JobExistsArgument): [CX_Job]
  Article(objectId: ID, ascending: ArticleFields, descending: ArticleFields, limit: Int, equalTo: ArticleEqualToArgument, greaterThan: ArticleGreaterThanArgument, greaterThanOrEqualTo: ArticleGreaterThanOrEqualToArgument, lessThan: ArticleLessThanArgument, lessThanOrEqualTo: ArticleLessThanOrEqualToArgument, containedIn: ArticleContainedInArgument, containsAll: ArticleContainsAllArgument, exists: ArticleExistsArgument): [Article]
  Supplier(objectId: ID, ascending: SupplierFields, descending: SupplierFields, limit: Int, equalTo: SupplierEqualToArgument, greaterThan: SupplierGreaterThanArgument, greaterThanOrEqualTo: SupplierGreaterThanOrEqualToArgument, lessThan: SupplierLessThanArgument, lessThanOrEqualTo: SupplierLessThanOrEqualToArgument, containedIn: SupplierContainedInArgument, containsAll: SupplierContainsAllArgument, exists: SupplierExistsArgument): [Supplier]
  Account(objectId: ID, ascending: AccountFields, descending: AccountFields, limit: Int, equalTo: AccountEqualToArgument, greaterThan: AccountGreaterThanArgument, greaterThanOrEqualTo: AccountGreaterThanOrEqualToArgument, lessThan: AccountLessThanArgument, lessThanOrEqualTo: AccountLessThanOrEqualToArgument, containedIn: AccountContainedInArgument, containsAll: AccountContainsAllArgument, exists: AccountExistsArgument): [Account]
  CX_Calendar_Day(objectId: ID, ascending: CX_Calendar_DayFields, descending: CX_Calendar_DayFields, limit: Int, equalTo: CX_Calendar_DayEqualToArgument, greaterThan: CX_Calendar_DayGreaterThanArgument, greaterThanOrEqualTo: CX_Calendar_DayGreaterThanOrEqualToArgument, lessThan: CX_Calendar_DayLessThanArgument, lessThanOrEqualTo: CX_Calendar_DayLessThanOrEqualToArgument, containedIn: CX_Calendar_DayContainedInArgument, containsAll: CX_Calendar_DayContainsAllArgument, exists: CX_Calendar_DayExistsArgument): [CX_Calendar_Day]
  BASE_Payment(objectId: ID, ascending: BASE_PaymentFields, descending: BASE_PaymentFields, limit: Int, equalTo: BASE_PaymentEqualToArgument, greaterThan: BASE_PaymentGreaterThanArgument, greaterThanOrEqualTo: BASE_PaymentGreaterThanOrEqualToArgument, lessThan: BASE_PaymentLessThanArgument, lessThanOrEqualTo: BASE_PaymentLessThanOrEqualToArgument, containedIn: BASE_PaymentContainedInArgument, containsAll: BASE_PaymentContainsAllArgument, exists: BASE_PaymentExistsArgument): [BASE_Payment]
  CX_Store(objectId: ID, ascending: CX_StoreFields, descending: CX_StoreFields, limit: Int, equalTo: CX_StoreEqualToArgument, greaterThan: CX_StoreGreaterThanArgument, greaterThanOrEqualTo: CX_StoreGreaterThanOrEqualToArgument, lessThan: CX_StoreLessThanArgument, lessThanOrEqualTo: CX_StoreLessThanOrEqualToArgument, containedIn: CX_StoreContainedInArgument, containsAll: CX_StoreContainsAllArgument, exists: CX_StoreExistsArgument): [CX_Store]
  _Conversation(objectId: ID, ascending: _ConversationFields, descending: _ConversationFields, limit: Int, equalTo: _ConversationEqualToArgument, greaterThan: _ConversationGreaterThanArgument, greaterThanOrEqualTo: _ConversationGreaterThanOrEqualToArgument, lessThan: _ConversationLessThanArgument, lessThanOrEqualTo: _ConversationLessThanOrEqualToArgument, containedIn: _ConversationContainedInArgument, containsAll: _ConversationContainsAllArgument, exists: _ConversationExistsArgument): [_Conversation]
  BASE_Region(objectId: ID, ascending: BASE_RegionFields, descending: BASE_RegionFields, limit: Int, equalTo: BASE_RegionEqualToArgument, greaterThan: BASE_RegionGreaterThanArgument, greaterThanOrEqualTo: BASE_RegionGreaterThanOrEqualToArgument, lessThan: BASE_RegionLessThanArgument, lessThanOrEqualTo: BASE_RegionLessThanOrEqualToArgument, containedIn: BASE_RegionContainedInArgument, containsAll: BASE_RegionContainsAllArgument, exists: BASE_RegionExistsArgument): [BASE_Region]
  CX_Technician(objectId: ID, ascending: CX_TechnicianFields, descending: CX_TechnicianFields, limit: Int, equalTo: CX_TechnicianEqualToArgument, greaterThan: CX_TechnicianGreaterThanArgument, greaterThanOrEqualTo: CX_TechnicianGreaterThanOrEqualToArgument, lessThan: CX_TechnicianLessThanArgument, lessThanOrEqualTo: CX_TechnicianLessThanOrEqualToArgument, containedIn: CX_TechnicianContainedInArgument, containsAll: CX_TechnicianContainsAllArgument, exists: CX_TechnicianExistsArgument): [CX_Technician]
  _Role(objectId: ID, ascending: _RoleFields, descending: _RoleFields, limit: Int, equalTo: _RoleEqualToArgument, greaterThan: _RoleGreaterThanArgument, greaterThanOrEqualTo: _RoleGreaterThanOrEqualToArgument, lessThan: _RoleLessThanArgument, lessThanOrEqualTo: _RoleLessThanOrEqualToArgument, containedIn: _RoleContainedInArgument, containsAll: _RoleContainsAllArgument, exists: _RoleExistsArgument): [_Role]
  BASE_Setting(objectId: ID, ascending: BASE_SettingFields, descending: BASE_SettingFields, limit: Int, equalTo: BASE_SettingEqualToArgument, greaterThan: BASE_SettingGreaterThanArgument, greaterThanOrEqualTo: BASE_SettingGreaterThanOrEqualToArgument, lessThan: BASE_SettingLessThanArgument, lessThanOrEqualTo: BASE_SettingLessThanOrEqualToArgument, containedIn: BASE_SettingContainedInArgument, containsAll: BASE_SettingContainsAllArgument, exists: BASE_SettingExistsArgument): [BASE_Setting]
  CX_Technician_Region(objectId: ID, ascending: CX_Technician_RegionFields, descending: CX_Technician_RegionFields, limit: Int, equalTo: CX_Technician_RegionEqualToArgument, greaterThan: CX_Technician_RegionGreaterThanArgument, greaterThanOrEqualTo: CX_Technician_RegionGreaterThanOrEqualToArgument, lessThan: CX_Technician_RegionLessThanArgument, lessThanOrEqualTo: CX_Technician_RegionLessThanOrEqualToArgument, containedIn: CX_Technician_RegionContainedInArgument, containsAll: CX_Technician_RegionContainsAllArgument, exists: CX_Technician_RegionExistsArgument): [CX_Technician_Region]
  CX_SaleOrder(objectId: ID, ascending: CX_SaleOrderFields, descending: CX_SaleOrderFields, limit: Int, equalTo: CX_SaleOrderEqualToArgument, greaterThan: CX_SaleOrderGreaterThanArgument, greaterThanOrEqualTo: CX_SaleOrderGreaterThanOrEqualToArgument, lessThan: CX_SaleOrderLessThanArgument, lessThanOrEqualTo: CX_SaleOrderLessThanOrEqualToArgument, containedIn: CX_SaleOrderContainedInArgument, containsAll: CX_SaleOrderContainsAllArgument, exists: CX_SaleOrderExistsArgument): [CX_SaleOrder]
  Demo(objectId: ID, ascending: DemoFields, descending: DemoFields, limit: Int, equalTo: DemoEqualToArgument, greaterThan: DemoGreaterThanArgument, greaterThanOrEqualTo: DemoGreaterThanOrEqualToArgument, lessThan: DemoLessThanArgument, lessThanOrEqualTo: DemoLessThanOrEqualToArgument, containedIn: DemoContainedInArgument, containsAll: DemoContainsAllArgument, exists: DemoExistsArgument): [Demo]
  BASE_Customer(objectId: ID, ascending: BASE_CustomerFields, descending: BASE_CustomerFields, limit: Int, equalTo: BASE_CustomerEqualToArgument, greaterThan: BASE_CustomerGreaterThanArgument, greaterThanOrEqualTo: BASE_CustomerGreaterThanOrEqualToArgument, lessThan: BASE_CustomerLessThanArgument, lessThanOrEqualTo: BASE_CustomerLessThanOrEqualToArgument, containedIn: BASE_CustomerContainedInArgument, containsAll: BASE_CustomerContainsAllArgument, exists: BASE_CustomerExistsArgument): [BASE_Customer]
  Mini(objectId: ID, ascending: MiniFields, descending: MiniFields, limit: Int, equalTo: MiniEqualToArgument, greaterThan: MiniGreaterThanArgument, greaterThanOrEqualTo: MiniGreaterThanOrEqualToArgument, lessThan: MiniLessThanArgument, lessThanOrEqualTo: MiniLessThanOrEqualToArgument, containedIn: MiniContainedInArgument, containsAll: MiniContainsAllArgument, exists: MiniExistsArgument): [Mini]
  Payment(objectId: ID, ascending: PaymentFields, descending: PaymentFields, limit: Int, equalTo: PaymentEqualToArgument, greaterThan: PaymentGreaterThanArgument, greaterThanOrEqualTo: PaymentGreaterThanOrEqualToArgument, lessThan: PaymentLessThanArgument, lessThanOrEqualTo: PaymentLessThanOrEqualToArgument, containedIn: PaymentContainedInArgument, containsAll: PaymentContainsAllArgument, exists: PaymentExistsArgument): [Payment]
  BASE_Account(objectId: ID, ascending: BASE_AccountFields, descending: BASE_AccountFields, limit: Int, equalTo: BASE_AccountEqualToArgument, greaterThan: BASE_AccountGreaterThanArgument, greaterThanOrEqualTo: BASE_AccountGreaterThanOrEqualToArgument, lessThan: BASE_AccountLessThanArgument, lessThanOrEqualTo: BASE_AccountLessThanOrEqualToArgument, containedIn: BASE_AccountContainedInArgument, containsAll: BASE_AccountContainsAllArgument, exists: BASE_AccountExistsArgument): [BASE_Account]
  Demand(objectId: ID, ascending: DemandFields, descending: DemandFields, limit: Int, equalTo: DemandEqualToArgument, greaterThan: DemandGreaterThanArgument, greaterThanOrEqualTo: DemandGreaterThanOrEqualToArgument, lessThan: DemandLessThanArgument, lessThanOrEqualTo: DemandLessThanOrEqualToArgument, containedIn: DemandContainedInArgument, containsAll: DemandContainsAllArgument, exists: DemandExistsArgument): [Demand]
  Demo_Experience(objectId: ID, ascending: Demo_ExperienceFields, descending: Demo_ExperienceFields, limit: Int, equalTo: Demo_ExperienceEqualToArgument, greaterThan: Demo_ExperienceGreaterThanArgument, greaterThanOrEqualTo: Demo_ExperienceGreaterThanOrEqualToArgument, lessThan: Demo_ExperienceLessThanArgument, lessThanOrEqualTo: Demo_ExperienceLessThanOrEqualToArgument, containedIn: Demo_ExperienceContainedInArgument, containsAll: Demo_ExperienceContainsAllArgument, exists: Demo_ExperienceExistsArgument): [Demo_Experience]
  Employee(objectId: ID, ascending: EmployeeFields, descending: EmployeeFields, limit: Int, equalTo: EmployeeEqualToArgument, greaterThan: EmployeeGreaterThanArgument, greaterThanOrEqualTo: EmployeeGreaterThanOrEqualToArgument, lessThan: EmployeeLessThanArgument, lessThanOrEqualTo: EmployeeLessThanOrEqualToArgument, containedIn: EmployeeContainedInArgument, containsAll: EmployeeContainsAllArgument, exists: EmployeeExistsArgument): [Employee]
  Todo(objectId: ID, ascending: TodoFields, descending: TodoFields, limit: Int, equalTo: TodoEqualToArgument, greaterThan: TodoGreaterThanArgument, greaterThanOrEqualTo: TodoGreaterThanOrEqualToArgument, lessThan: TodoLessThanArgument, lessThanOrEqualTo: TodoLessThanOrEqualToArgument, containedIn: TodoContainedInArgument, containsAll: TodoContainsAllArgument, exists: TodoExistsArgument): [Todo]
  CX_Store_Category(objectId: ID, ascending: CX_Store_CategoryFields, descending: CX_Store_CategoryFields, limit: Int, equalTo: CX_Store_CategoryEqualToArgument, greaterThan: CX_Store_CategoryGreaterThanArgument, greaterThanOrEqualTo: CX_Store_CategoryGreaterThanOrEqualToArgument, lessThan: CX_Store_CategoryLessThanArgument, lessThanOrEqualTo: CX_Store_CategoryLessThanOrEqualToArgument, containedIn: CX_Store_CategoryContainedInArgument, containsAll: CX_Store_CategoryContainsAllArgument, exists: CX_Store_CategoryExistsArgument): [CX_Store_Category]
  CX_Studio(objectId: ID, ascending: CX_StudioFields, descending: CX_StudioFields, limit: Int, equalTo: CX_StudioEqualToArgument, greaterThan: CX_StudioGreaterThanArgument, greaterThanOrEqualTo: CX_StudioGreaterThanOrEqualToArgument, lessThan: CX_StudioLessThanArgument, lessThanOrEqualTo: CX_StudioLessThanOrEqualToArgument, containedIn: CX_StudioContainedInArgument, containsAll: CX_StudioContainsAllArgument, exists: CX_StudioExistsArgument): [CX_Studio]
  Item_Region(objectId: ID, ascending: Item_RegionFields, descending: Item_RegionFields, limit: Int, equalTo: Item_RegionEqualToArgument, greaterThan: Item_RegionGreaterThanArgument, greaterThanOrEqualTo: Item_RegionGreaterThanOrEqualToArgument, lessThan: Item_RegionLessThanArgument, lessThanOrEqualTo: Item_RegionLessThanOrEqualToArgument, containedIn: Item_RegionContainedInArgument, containsAll: Item_RegionContainsAllArgument, exists: Item_RegionExistsArgument): [Item_Region]
  Reviews(objectId: ID, ascending: ReviewsFields, descending: ReviewsFields, limit: Int, equalTo: ReviewsEqualToArgument, greaterThan: ReviewsGreaterThanArgument, greaterThanOrEqualTo: ReviewsGreaterThanOrEqualToArgument, lessThan: ReviewsLessThanArgument, lessThanOrEqualTo: ReviewsLessThanOrEqualToArgument, containedIn: ReviewsContainedInArgument, containsAll: ReviewsContainsAllArgument, exists: ReviewsExistsArgument): [Reviews]
  SKU(objectId: ID, ascending: SKUFields, descending: SKUFields, limit: Int, equalTo: SKUEqualToArgument, greaterThan: SKUGreaterThanArgument, greaterThanOrEqualTo: SKUGreaterThanOrEqualToArgument, lessThan: SKULessThanArgument, lessThanOrEqualTo: SKULessThanOrEqualToArgument, containedIn: SKUContainedInArgument, containsAll: SKUContainsAllArgument, exists: SKUExistsArgument): [SKU]
  CX_PurchaseOrder(objectId: ID, ascending: CX_PurchaseOrderFields, descending: CX_PurchaseOrderFields, limit: Int, equalTo: CX_PurchaseOrderEqualToArgument, greaterThan: CX_PurchaseOrderGreaterThanArgument, greaterThanOrEqualTo: CX_PurchaseOrderGreaterThanOrEqualToArgument, lessThan: CX_PurchaseOrderLessThanArgument, lessThanOrEqualTo: CX_PurchaseOrderLessThanOrEqualToArgument, containedIn: CX_PurchaseOrderContainedInArgument, containsAll: CX_PurchaseOrderContainsAllArgument, exists: CX_PurchaseOrderExistsArgument): [CX_PurchaseOrder]
  Order_Line(objectId: ID, ascending: Order_LineFields, descending: Order_LineFields, limit: Int, equalTo: Order_LineEqualToArgument, greaterThan: Order_LineGreaterThanArgument, greaterThanOrEqualTo: Order_LineGreaterThanOrEqualToArgument, lessThan: Order_LineLessThanArgument, lessThanOrEqualTo: Order_LineLessThanOrEqualToArgument, containedIn: Order_LineContainedInArgument, containsAll: Order_LineContainsAllArgument, exists: Order_LineExistsArgument): [Order_Line]
  Item(objectId: ID, ascending: ItemFields, descending: ItemFields, limit: Int, equalTo: ItemEqualToArgument, greaterThan: ItemGreaterThanArgument, greaterThanOrEqualTo: ItemGreaterThanOrEqualToArgument, lessThan: ItemLessThanArgument, lessThanOrEqualTo: ItemLessThanOrEqualToArgument, containedIn: ItemContainedInArgument, containsAll: ItemContainsAllArgument, exists: ItemExistsArgument): [Item]
  Employee_Experience(objectId: ID, ascending: Employee_ExperienceFields, descending: Employee_ExperienceFields, limit: Int, equalTo: Employee_ExperienceEqualToArgument, greaterThan: Employee_ExperienceGreaterThanArgument, greaterThanOrEqualTo: Employee_ExperienceGreaterThanOrEqualToArgument, lessThan: Employee_ExperienceLessThanArgument, lessThanOrEqualTo: Employee_ExperienceLessThanOrEqualToArgument, containedIn: Employee_ExperienceContainedInArgument, containsAll: Employee_ExperienceContainsAllArgument, exists: Employee_ExperienceExistsArgument): [Employee_Experience]
  Region(objectId: ID, ascending: RegionFields, descending: RegionFields, limit: Int, equalTo: RegionEqualToArgument, greaterThan: RegionGreaterThanArgument, greaterThanOrEqualTo: RegionGreaterThanOrEqualToArgument, lessThan: RegionLessThanArgument, lessThanOrEqualTo: RegionLessThanOrEqualToArgument, containedIn: RegionContainedInArgument, containsAll: RegionContainsAllArgument, exists: RegionExistsArgument): [Region]
  Supplier_Category(objectId: ID, ascending: Supplier_CategoryFields, descending: Supplier_CategoryFields, limit: Int, equalTo: Supplier_CategoryEqualToArgument, greaterThan: Supplier_CategoryGreaterThanArgument, greaterThanOrEqualTo: Supplier_CategoryGreaterThanOrEqualToArgument, lessThan: Supplier_CategoryLessThanArgument, lessThanOrEqualTo: Supplier_CategoryLessThanOrEqualToArgument, containedIn: Supplier_CategoryContainedInArgument, containsAll: Supplier_CategoryContainsAllArgument, exists: Supplier_CategoryExistsArgument): [Supplier_Category]
  _File(objectId: ID, ascending: _FileFields, descending: _FileFields, limit: Int, equalTo: _FileEqualToArgument, greaterThan: _FileGreaterThanArgument, greaterThanOrEqualTo: _FileGreaterThanOrEqualToArgument, lessThan: _FileLessThanArgument, lessThanOrEqualTo: _FileLessThanOrEqualToArgument, containedIn: _FileContainedInArgument, containsAll: _FileContainsAllArgument, exists: _FileExistsArgument): [_File]
  BASE_Category(objectId: ID, ascending: BASE_CategoryFields, descending: BASE_CategoryFields, limit: Int, equalTo: BASE_CategoryEqualToArgument, greaterThan: BASE_CategoryGreaterThanArgument, greaterThanOrEqualTo: BASE_CategoryGreaterThanOrEqualToArgument, lessThan: BASE_CategoryLessThanArgument, lessThanOrEqualTo: BASE_CategoryLessThanOrEqualToArgument, containedIn: BASE_CategoryContainedInArgument, containsAll: BASE_CategoryContainsAllArgument, exists: BASE_CategoryExistsArgument): [BASE_Category]
  CX_Calendar(objectId: ID, ascending: CX_CalendarFields, descending: CX_CalendarFields, limit: Int, equalTo: CX_CalendarEqualToArgument, greaterThan: CX_CalendarGreaterThanArgument, greaterThanOrEqualTo: CX_CalendarGreaterThanOrEqualToArgument, lessThan: CX_CalendarLessThanArgument, lessThanOrEqualTo: CX_CalendarLessThanOrEqualToArgument, containedIn: CX_CalendarContainedInArgument, containsAll: CX_CalendarContainsAllArgument, exists: CX_CalendarExistsArgument): [CX_Calendar]
  Technician_Experience(objectId: ID, ascending: Technician_ExperienceFields, descending: Technician_ExperienceFields, limit: Int, equalTo: Technician_ExperienceEqualToArgument, greaterThan: Technician_ExperienceGreaterThanArgument, greaterThanOrEqualTo: Technician_ExperienceGreaterThanOrEqualToArgument, lessThan: Technician_ExperienceLessThanArgument, lessThanOrEqualTo: Technician_ExperienceLessThanOrEqualToArgument, containedIn: Technician_ExperienceContainedInArgument, containsAll: Technician_ExperienceContainsAllArgument, exists: Technician_ExperienceExistsArgument): [Technician_Experience]
  CX_BOM(objectId: ID, ascending: CX_BOMFields, descending: CX_BOMFields, limit: Int, equalTo: CX_BOMEqualToArgument, greaterThan: CX_BOMGreaterThanArgument, greaterThanOrEqualTo: CX_BOMGreaterThanOrEqualToArgument, lessThan: CX_BOMLessThanArgument, lessThanOrEqualTo: CX_BOMLessThanOrEqualToArgument, containedIn: CX_BOMContainedInArgument, containsAll: CX_BOMContainsAllArgument, exists: CX_BOMExistsArgument): [CX_BOM]
  CX_BOM_Line(objectId: ID, ascending: CX_BOM_LineFields, descending: CX_BOM_LineFields, limit: Int, equalTo: CX_BOM_LineEqualToArgument, greaterThan: CX_BOM_LineGreaterThanArgument, greaterThanOrEqualTo: CX_BOM_LineGreaterThanOrEqualToArgument, lessThan: CX_BOM_LineLessThanArgument, lessThanOrEqualTo: CX_BOM_LineLessThanOrEqualToArgument, containedIn: CX_BOM_LineContainedInArgument, containsAll: CX_BOM_LineContainsAllArgument, exists: CX_BOM_LineExistsArgument): [CX_BOM_Line]
  Transfer(objectId: ID, ascending: TransferFields, descending: TransferFields, limit: Int, equalTo: TransferEqualToArgument, greaterThan: TransferGreaterThanArgument, greaterThanOrEqualTo: TransferGreaterThanOrEqualToArgument, lessThan: TransferLessThanArgument, lessThanOrEqualTo: TransferLessThanOrEqualToArgument, containedIn: TransferContainedInArgument, containsAll: TransferContainsAllArgument, exists: TransferExistsArgument): [Transfer]
}

type LeanStorageMutation {
  Demo_Education(updatedAt: Date, uistate: Float, school: String, objectId: ID, createdAt: Date, state: Float, uiworkyears: Float, lineno: Float): Demo_Education
  CX_ChargeOrder(objectId: ID, createdAt: Date, updatedAt: Date, state: Float, orderno: String): CX_ChargeOrder
  BASE_Sharelog(updatedAt: Date, userid: String, logno: String, objectId: ID, createdAt: Date, state: Float, sharecount: Float, pagecode: String, clickcount: Float): BASE_Sharelog
  Order(updatedAt: Date, paymentOrder_orderno: String, uistate: Float, shippingRegion_name: String, shippingReceiverName: String, supplierstoretechnician_name: String, logo: File, objectId: ID, totalPrice: Float, shippingAddress_Id: String, shipstate: Float, payType: Float, shippingOrderNo: String, createdAt: Date, state: Float, shippingCompany: String, item_name: String, shippingPrice: Float, orderno: String, starttime: Date, shippingAddress_name: String, paystate: Float, shippingReceiverPhone: String, category_type: Float, customer_name: String): Order
  Setting(updatedAt: Date, name: String, objectId: ID, createdAt: Date, state: Float, code: String, obj: Object): Setting
  BASE_Sharelog_Cost(updatedAt: Date, userid: String, useragent: Object, objectId: ID, createdAt: Date, type: Float, lineno: Float): BASE_Sharelog_Cost
  Store(address: String, billEmail: String, updatedAt: Date, region_name: String, logo: File, managerPhone: String, name: String, objectId: ID, managerEmail: String, bank: String, branchcount: Float, createdAt: Date, state: Float, defaultpostage: Float, managerWeChat: String, pic6: File, tel: String, account: String, summary: String, pic4: File, payee: String, pic3: File, code: String, pic7: File, pic1: File, period: Float, pic8: File, managerName: String, pic5: File, expirydate: Date, storeType: Float, pic2: File, company: String): Store
  BASE_Transfer(toaccount_code: String, payobj: Object, updatedAt: Date, paymentOrder_orderno: String, fromaccount_code: String, objectId: ID, createdAt: Date, type: Float, state: Float, toaccount_name: String, orderno: String, fromaccount_name: String): BASE_Transfer
  Category(description: String, updatedAt: Date, name: String, objectId: ID, createdAt: Date, type: Float, state: Float, icon: File, code: String): Category
  e(objectId: ID, createdAt: Date, updatedAt: Date, name: String): e
  CX_Technician_Certificate(certificatename: String, updatedAt: Date, objectId: ID, createdAt: Date, photopage: File, numberpage: File, photowithCertificate: File, certificatecode: String, lineno: Float): CX_Technician_Certificate
  Log(objectId: ID, createdAt: Date, updatedAt: Date, level: String, message: String, component: String): Log
  BASE_Article(updatedAt: Date, desc: String, logo: File, content: String, name: String, objectId: ID, createdAt: Date, state: Float, count: Float, url: String, code: String, pic: File): BASE_Article
  _User(salt: String, indentify: Boolean, email: String, sessionToken: String, updatedAt: Date, sex: Float, IDCardNum: String, password: String, handIDCard: File, objectId: ID, username: String, createdAt: Date, emailVerified: Boolean, mobilePhoneNumber: String, avatar: File, IDCardName: String, IDCard: File, authData: Object, mobilePhoneVerified: Boolean): _User
  allJSON(objectId: ID, createdAt: Date, updatedAt: Date): allJSON
  _Follower(objectId: ID, createdAt: Date, updatedAt: Date): _Follower
  _Installation(valid: Boolean, vendor: String, timeZone: String, updatedAt: Date, channels: Array, objectId: ID, deviceToken: String, createdAt: Date, deviceType: String, installationId: String, badge: Float): _Installation
  BASE_Address(updatedAt: Date, name: String, objectId: ID, createdAt: Date, state: Float, code: String): BASE_Address
  Customer_FavoriteLine(updatedAt: Date, objectId: ID, createdAt: Date, state: Float, lineno: Float): Customer_FavoriteLine
  CX_Service(rotationpic7: File, updatedAt: Date, detailpic4: File, desc: String, detailpic1: File, detailpic7: File, rotationpic2: File, name: String, objectId: ID, rotationpic3: File, originalprice: Float, detailpic3: File, createdAt: Date, detailpic2: File, state: Float, sellCount: Float, detailpic6: File, servicerate: Float, rotationpic8: File, rotationpic6: File, category_name: String, detailpic8: File, technician_code: String, code: String, category_code: String, detailpic5: File, price: Float, rotationpic5: File, servicetype: Float, rotationpic1: File, rotationpic4: File, technician_name: String): CX_Service
  JOY_Match(objectId: ID, createdAt: Date, updatedAt: Date, totalprice: Float, orderno: String): JOY_Match
  Customer(updatedAt: Date, name: String, objectId: ID, createdAt: Date, state: Float, code: String): Customer
  Technician_Region(updatedAt: Date, region_name: String, objectId: ID, createdAt: Date, state: Float, lineno: Float): Technician_Region
  Technician(address: String, joyheight: Float, updatedAt: Date, age: Float, desc: String, sex: Float, phone: String, edufieldofstudy: String, name: String, objectId: ID, joyconstellation: Float, signature: String, nickname: String, createdAt: Date, edudegree: String, state: Float, pic6: File, pic4: File, eduage: Float, pic3: File, avatar: File, code: String, pic7: File, idcardno: String, pic1: File, joyoccupation: String, pic8: File, pic5: File, joyweight: Float, techphotowithidcard: File, pic2: File, techphotoofidcarda: File, servicetype: Float): Technician
  Technician_Certificate(certificatename: String, updatedAt: Date, objectId: ID, createdAt: Date, state: Float, photopage: File, numberpage: File, photowithCertificate: File, certificatecode: String, lineno: Float): Technician_Certificate
  Store_Category(updatedAt: Date, objectId: ID, createdAt: Date, state: Float, category_name: String, lineno: Float): Store_Category
  CX_DeliveryOrder(objectId: ID, createdAt: Date, updatedAt: Date, state: Float, orderno: String): CX_DeliveryOrder
  Customer_CartSKU(updatedAt: Date, objectId: ID, createdAt: Date, state: Float, qty: Float, sku_name: String, lineno: Float): Customer_CartSKU
  Activity(updatedAt: Date, name: String, objectId: ID, createdAt: Date, state: Float, code: String): Activity
  Customer_Address(address: String, updatedAt: Date, region_name: String, Isdefault: Boolean, phone: String, objectId: ID, createdAt: Date, state: Float, receivername: String, lineno: Float): Customer_Address
  Store_Branch(address: String, updatedAt: Date, region_name: String, logo: File, phone: String, name: String, objectId: ID, createdAt: Date, state: Float, lineno: Float): Store_Branch
  CX_Technician_Experience(updatedAt: Date, desc: String, timefrom: Date, objectId: ID, createdAt: Date, iscurrnetworkhere: Boolean, lineno: Float, company: String, timeto: Date): CX_Technician_Experience
  Topic(updatedAt: Date, name: String, objectId: ID, createdAt: Date, state: Float, code: String): Topic
  _Followee(objectId: ID, createdAt: Date, updatedAt: Date): _Followee
  Technician_Category(updatedAt: Date, objectId: ID, createdAt: Date, state: Float, category_name: String, lineno: Float, category_type: Float): Technician_Category
  CX_Router(updatedAt: Date, name: String, objectId: ID, createdAt: Date, state: Float, category_name: String, code: String, category_code: String): CX_Router
  CX_Router_Line(objectId: ID, createdAt: Date, updatedAt: Date, lineno: Float): CX_Router_Line
  CX_Job(updatedAt: Date, name: String, objectId: ID, createdAt: Date, state: Float, code: String): CX_Job
  Article(updatedAt: Date, name: String, objectId: ID, createdAt: Date, state: Float, count: Float, url: String, pic: String): Article
  Supplier(address: String, billEmail: String, updatedAt: Date, region_name: String, logo: File, managerPhone: String, name: String, objectId: ID, managerEmail: String, bank: String, createdAt: Date, state: Float, defaultpostage: Float, managerWeChat: String, pic6: File, tel: String, account: String, summary: String, pic4: File, payee: String, pic3: File, code: String, pic7: File, pic1: File, period: Float, pic8: File, managerName: String, pic5: File, expirydate: Date, pic2: File, supplierType: Float): Supplier
  Account(updatedAt: Date, accountno: String, name: String, ownertype: Float, objectId: ID, store_name: String, createdAt: Date, type: Float, state: Float, supplier_name: String, code: String, customer_cardno: String, Customer_name: String, technician_name: String): Account
  CX_Calendar_Day(updatedAt: Date, enable: Boolean, objectId: ID, Day: Date, createdAt: Date, lineno: Float): CX_Calendar_Day
  BASE_Payment(updatedAt: Date, objectId: ID, createdAt: Date, type: Float, state: Float, orderno: String): BASE_Payment
  CX_Store(address: String, billEmail: String, updatedAt: Date, accountno: String, region_name: String, logo: File, managerPhone: String, name: String, objectId: ID, managerEmail: String, bank: String, createdAt: Date, state: Float, defaultpostage: Float, managerWeChat: String, rate: Float, pic6: File, effectrate: Float, tel: String, servicerate: Float, summary: String, pic4: File, payee: String, region_code: String, pic3: File, account_code: String, code: String, attituderate: Float, pic7: File, ordercount: Float, minprice: Float, pic1: File, period: Float, pic8: File, managerName: String, pic5: File, account_name: String, expirydate: Date, storeType: Float, pic2: File, company: String): CX_Store
  _Conversation(unique: Boolean, updatedAt: Date, name: String, objectId: ID, m: Array, tr: Boolean, createdAt: Date, type: Float, lm: Date, c: String, uniqueId: String, mu: Array, sys: Boolean, price: String, conver: String): _Conversation
  BASE_Region(updatedAt: Date, name: String, objectId: ID, createdAt: Date, state: Float, radius: Float, code: String, shortname: String, geo_address: GeoPoint): BASE_Region
  CX_Technician(address: String, joyheight: Float, updatedAt: Date, age: Float, desc: String, sex: Float, accountno: String, phone: String, edufieldofstudy: String, name: String, objectId: ID, job_name: String, joyconstellation: Float, nickname: String, bank: String, createdAt: Date, edudegree: String, state: Float, rate: Float, pic6: File, pic4: File, payee: String, job_code: String, pic3: File, avatar: File, account_code: String, code: String, pic7: File, idcardno: String, ordercount: Float, pic1: File, pic8: File, pic5: File, account_name: String, joyweight: Float, techphotowithidcard: File, pic2: File, techphotoofidcarda: File, servicetype: Float): CX_Technician
  _Role(name: String, objectId: ID, createdAt: Date, updatedAt: Date): _Role
  BASE_Setting(updatedAt: Date, name: String, objectId: ID, createdAt: Date, type: String, state: Float, code: String, obj: Object, version: String, prj: String): BASE_Setting
  CX_Technician_Region(objectId: ID, createdAt: Date, updatedAt: Date, lineno: Float): CX_Technician_Region
  CX_SaleOrder(shippingAddress_code: String, updatedAt: Date, paymentOrder_orderno: String, shippingRegion_code: String, uistate: Float, shippingRegion_name: String, shippingReceiverName: String, customer_code: String, objectId: ID, totalPrice: Float, store_name: String, shipstate: Float, payType: Float, store_code: String, createdAt: Date, state: Float, deliveryOrder_orderno: String, technician_code: String, shippingPrice: Float, orderno: String, shippingAddress_name: String, paystate: Float, shippingReceiverPhone: String, customer_name: String, technician_name: String, purchaseOrder_orderno: String): CX_SaleOrder
  Demo(updatedAt: Date, uistate: Float, p191: File, p21: Float, objectId: ID, p192: File, createdAt: Date, state: Float, uiworkyears: Float, orderno: String): Demo
  BASE_Customer(vipCardNumber: String, updatedAt: Date, sex: Float, region_name: String, phone: String, wxcountry: String, name: String, objectId: ID, birthday: Date, createdAt: Date, state: Float, region_code: String, avatar: File, code: String, wxcity: String, wxprovince: String): BASE_Customer
  Mini(objectId: ID, createdAt: Date, updatedAt: Date): Mini
  Payment(updatedAt: Date, objectId: ID, createdAt: Date, type: Float, state: Float, orderno: String): Payment
  BASE_Account(updatedAt: Date, accountno: String, name: String, ownertype: Float, objectId: ID, createdAt: Date, type: Float, state: Float, code: String, Customer_code: String, customer_cardno: String, Customer_name: String): BASE_Account
  Demand(updatedAt: Date, name: String, objectId: ID, createdAt: Date, state: Float, code: String): Demand
  Demo_Experience(updatedAt: Date, uistate: Float, objectId: ID, createdAt: Date, state: Float, uiworkyears: Float, lineno: Float): Demo_Experience
  Employee(address: String, email: String, updatedAt: Date, uistate: Float, sex: Float, marryState: Boolean, name: String, objectId: ID, createdAt: Date, state: Float, uiworkyears: Float, tel: String, workExperience: Float, photo: File, idCard: String, orderno: String, job: Float): Employee
  Todo(objectId: ID, createdAt: Date, updatedAt: Date, name: String, content: String): Todo
  CX_Store_Category(objectId: ID, createdAt: Date, updatedAt: Date, lineno: Float): CX_Store_Category
  CX_Studio(updatedAt: Date, name: String, objectId: ID, createdAt: Date, state: Float, code: String): CX_Studio
  Item_Region(updatedAt: Date, region_name: String, objectId: ID, createdAt: Date, state: Float, lineno: Float): Item_Region
  Reviews(sourceorder_orderno: String, experiencerate: Float, updatedAt: Date, contentpic2: File, content: String, objectId: ID, createdAt: Date, state: Float, effectrate: Float, servicerate: Float, contentpic1: File, orderno: String, ratetype: Float, environmentalrate: Float, contentpic3: File): Reviews
  SKU(updatedAt: Date, name: String, objectId: ID, originalprice: Float, createdAt: Date, state: Float, item_name: String, attributelist: Array, shipcost: Float, code: String, qty: Float, pic: File, price: Float, category_type: Float): SKU
  CX_PurchaseOrder(objectId: ID, createdAt: Date, updatedAt: Date, state: Float, orderno: String): CX_PurchaseOrder
  Order_Line(unitCostPrice: Float, linePrice: Float, updatedAt: Date, desc: String, uistate: Float, objectId: ID, shipstate: Float, createdAt: Date, type: Float, state: Float, qty: Float, linePriceBeforeDiscounts: Float, sku_name: String, starttime: Date, paystate: Float, lineno: Float, servicetype: Float): Order_Line
  Item(rotationpic7: File, updatedAt: Date, detailpic4: File, desc: String, detailpic1: File, detailpic7: File, rotationpic2: File, name: String, objectId: ID, store_name: String, rotationpic3: File, originalprice: Float, detailpic3: File, createdAt: Date, detailpic2: File, state: Float, sellCount: Float, supplier_name: String, detailpic6: File, rotationpic8: File, rotationpic6: File, category_name: String, detailpic8: File, code: String, detailpic5: File, price: Float, rotationpic5: File, category_type: Float, servicetype: Float, rotationpic1: File, rotationpic4: File, technician_name: String): Item
  Employee_Experience(description: String, updatedAt: Date, uistate: Float, timefrom: Date, objectId: ID, createdAt: Date, state: Float, uiworkyears: Float, title: String, iscurrnetworkhere: Boolean, lineno: Float, company: String, timeto: Date): Employee_Experience
  Region(updatedAt: Date, name: String, objectId: ID, createdAt: Date, state: Float, code: String, shortname: String): Region
  Supplier_Category(updatedAt: Date, objectId: ID, createdAt: Date, state: Float, category_name: String, lineno: Float): Supplier_Category
  _File(mime_type: String, updatedAt: Date, key: String, name: String, objectId: ID, createdAt: Date, url: String, provider: String, metaData: Object, bucket: String): _File
  BASE_Category(updatedAt: Date, group: String, desc: String, name: String, objectId: ID, createdAt: Date, state: Float, parent_name: String, parent_code: String, avatar: File, code: String, avatardisable: File): BASE_Category
  CX_Calendar(updatedAt: Date, name: String, objectId: ID, createdAt: Date, state: Float, technician_code: String, code: String, technician_name: String): CX_Calendar
  Technician_Experience(description: String, updatedAt: Date, timefrom: Date, objectId: ID, createdAt: Date, state: Float, iscurrnetworkhere: Boolean, lineno: Float, company: String, timeto: Date): Technician_Experience
  CX_BOM(updatedAt: Date, name: String, objectId: ID, createdAt: Date, state: Float, category_name: String, code: String, category_code: String): CX_BOM
  CX_BOM_Line(objectId: ID, createdAt: Date, updatedAt: Date, lineno: Float): CX_BOM_Line
  Transfer(payobj: Object, orderInfo: Object, updatedAt: Date, paymentOrder_orderno: String, objectId: ID, totalPrice: Float, payType: String, createdAt: Date, type: Float, state: Float, saleOrder_orderno: String, toaccount_name: String, paytype: Float, orderno: String, fromaccount_name: String): Transfer
}

type Log {
  objectId: ID
  createdAt: Date
  updatedAt: Date
  level: String
  message: String
  component: String
}

input LogContainedInArgument {
  objectId: [ID]
  createdAt: [ID]
  updatedAt: [ID]
  level: [ID]
  message: [ID]
  component: [ID]
}

input LogContainsAllArgument {
  objectId: [ID]
  createdAt: [ID]
  updatedAt: [ID]
  level: [ID]
  message: [ID]
  component: [ID]
}

input LogEqualToArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  level: String
  message: String
  component: String
}

input LogExistsArgument {
  objectId: Boolean
  createdAt: Boolean
  updatedAt: Boolean
  level: Boolean
  message: Boolean
  component: Boolean
}

enum LogFields {
  objectId
  createdAt
  updatedAt
  level
  message
  component
}

input LogGreaterThanArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  level: String
  message: String
  component: String
}

input LogGreaterThanOrEqualToArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  level: String
  message: String
  component: String
}

input LogLessThanArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  level: String
  message: String
  component: String
}

input LogLessThanOrEqualToArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  level: String
  message: String
  component: String
}

type Mini {
  objectId: ID
  createdAt: Date
  updatedAt: Date
}

input MiniContainedInArgument {
  objectId: [ID]
  createdAt: [ID]
  updatedAt: [ID]
}

input MiniContainsAllArgument {
  objectId: [ID]
  createdAt: [ID]
  updatedAt: [ID]
}

input MiniEqualToArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
}

input MiniExistsArgument {
  objectId: Boolean
  createdAt: Boolean
  updatedAt: Boolean
}

enum MiniFields {
  objectId
  createdAt
  updatedAt
}

input MiniGreaterThanArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
}

input MiniGreaterThanOrEqualToArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
}

input MiniLessThanArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
}

input MiniLessThanOrEqualToArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
}

scalar Object

type Order {
  updatedAt: Date
  paymentOrder_orderno: String
  uistate: Float
  shippingRegion_name: String
  shippingReceiverName: String
  supplierstoretechnician_name: String
  logo: File
  objectId: ID
  totalPrice: Float
  shippingAddress_Id: String
  shipstate: Float
  payType: Float
  shippingRegion: Region
  shippingOrderNo: String
  createdAt: Date
  state: Float
  customer: Customer
  shippingCompany: String
  item_name: String
  shippingPrice: Float
  paymentOrder: Payment
  orderno: String
  starttime: Date
  shippingAddress_name: String
  paystate: Float
  shippingReceiverPhone: String
  category_type: Float
  customer_name: String
  createdby: _User
  sourceorderOfReviews(objectId: ID, ascending: ReviewsFields, descending: ReviewsFields, limit: Int, equalTo: ReviewsEqualToArgument, greaterThan: ReviewsGreaterThanArgument, greaterThanOrEqualTo: ReviewsGreaterThanOrEqualToArgument, lessThan: ReviewsLessThanArgument, lessThanOrEqualTo: ReviewsLessThanOrEqualToArgument, containedIn: ReviewsContainedInArgument, containsAll: ReviewsContainsAllArgument, exists: ReviewsExistsArgument): [Reviews]
  orderOfOrder_Line(objectId: ID, ascending: Order_LineFields, descending: Order_LineFields, limit: Int, equalTo: Order_LineEqualToArgument, greaterThan: Order_LineGreaterThanArgument, greaterThanOrEqualTo: Order_LineGreaterThanOrEqualToArgument, lessThan: Order_LineLessThanArgument, lessThanOrEqualTo: Order_LineLessThanOrEqualToArgument, containedIn: Order_LineContainedInArgument, containsAll: Order_LineContainsAllArgument, exists: Order_LineExistsArgument): [Order_Line]
  orderOfTransfer(objectId: ID, ascending: TransferFields, descending: TransferFields, limit: Int, equalTo: TransferEqualToArgument, greaterThan: TransferGreaterThanArgument, greaterThanOrEqualTo: TransferGreaterThanOrEqualToArgument, lessThan: TransferLessThanArgument, lessThanOrEqualTo: TransferLessThanOrEqualToArgument, containedIn: TransferContainedInArgument, containsAll: TransferContainsAllArgument, exists: TransferExistsArgument): [Transfer]
  saleOrderOfTransfer(objectId: ID, ascending: TransferFields, descending: TransferFields, limit: Int, equalTo: TransferEqualToArgument, greaterThan: TransferGreaterThanArgument, greaterThanOrEqualTo: TransferGreaterThanOrEqualToArgument, lessThan: TransferLessThanArgument, lessThanOrEqualTo: TransferLessThanOrEqualToArgument, containedIn: TransferContainedInArgument, containsAll: TransferContainsAllArgument, exists: TransferExistsArgument): [Transfer]
}

type Order_Line {
  unitCostPrice: Float
  linePrice: Float
  updatedAt: Date
  desc: String
  uistate: Float
  objectId: ID
  item: Item
  shipstate: Float
  createdAt: Date
  type: Float
  state: Float
  sku: SKU
  qty: Float
  order: Order
  linePriceBeforeDiscounts: Float
  sku_name: String
  starttime: Date
  paystate: Float
  lineno: Float
  servicetype: Float
  createdby: _User
}

input Order_LineContainedInArgument {
  unitCostPrice: [ID]
  linePrice: [ID]
  updatedAt: [ID]
  desc: [ID]
  uistate: [ID]
  objectId: [ID]
  item: [ID]
  shipstate: [ID]
  createdAt: [ID]
  type: [ID]
  state: [ID]
  sku: [ID]
  qty: [ID]
  order: [ID]
  linePriceBeforeDiscounts: [ID]
  sku_name: [ID]
  starttime: [ID]
  paystate: [ID]
  lineno: [ID]
  servicetype: [ID]
  createdby: [ID]
}

input Order_LineContainsAllArgument {
  unitCostPrice: [ID]
  linePrice: [ID]
  updatedAt: [ID]
  desc: [ID]
  uistate: [ID]
  objectId: [ID]
  item: [ID]
  shipstate: [ID]
  createdAt: [ID]
  type: [ID]
  state: [ID]
  sku: [ID]
  qty: [ID]
  order: [ID]
  linePriceBeforeDiscounts: [ID]
  sku_name: [ID]
  starttime: [ID]
  paystate: [ID]
  lineno: [ID]
  servicetype: [ID]
  createdby: [ID]
}

input Order_LineEqualToArgument {
  unitCostPrice: Float
  linePrice: Float
  updatedAt: Date
  desc: String
  uistate: Float
  objectId: String
  shipstate: Float
  createdAt: Date
  type: Float
  state: Float
  qty: Float
  linePriceBeforeDiscounts: Float
  sku_name: String
  starttime: Date
  paystate: Float
  lineno: Float
  servicetype: Float
}

input Order_LineExistsArgument {
  unitCostPrice: Boolean
  linePrice: Boolean
  updatedAt: Boolean
  desc: Boolean
  uistate: Boolean
  objectId: Boolean
  item: Boolean
  shipstate: Boolean
  createdAt: Boolean
  type: Boolean
  state: Boolean
  sku: Boolean
  qty: Boolean
  order: Boolean
  linePriceBeforeDiscounts: Boolean
  sku_name: Boolean
  starttime: Boolean
  paystate: Boolean
  lineno: Boolean
  servicetype: Boolean
  createdby: Boolean
}

enum Order_LineFields {
  unitCostPrice
  linePrice
  updatedAt
  desc
  uistate
  objectId
  item
  shipstate
  createdAt
  type
  state
  sku
  qty
  order
  linePriceBeforeDiscounts
  sku_name
  starttime
  paystate
  lineno
  servicetype
  createdby
}

input Order_LineGreaterThanArgument {
  unitCostPrice: Float
  linePrice: Float
  updatedAt: Date
  desc: String
  uistate: Float
  objectId: String
  shipstate: Float
  createdAt: Date
  type: Float
  state: Float
  qty: Float
  linePriceBeforeDiscounts: Float
  sku_name: String
  starttime: Date
  paystate: Float
  lineno: Float
  servicetype: Float
}

input Order_LineGreaterThanOrEqualToArgument {
  unitCostPrice: Float
  linePrice: Float
  updatedAt: Date
  desc: String
  uistate: Float
  objectId: String
  shipstate: Float
  createdAt: Date
  type: Float
  state: Float
  qty: Float
  linePriceBeforeDiscounts: Float
  sku_name: String
  starttime: Date
  paystate: Float
  lineno: Float
  servicetype: Float
}

input Order_LineLessThanArgument {
  unitCostPrice: Float
  linePrice: Float
  updatedAt: Date
  desc: String
  uistate: Float
  objectId: String
  shipstate: Float
  createdAt: Date
  type: Float
  state: Float
  qty: Float
  linePriceBeforeDiscounts: Float
  sku_name: String
  starttime: Date
  paystate: Float
  lineno: Float
  servicetype: Float
}

input Order_LineLessThanOrEqualToArgument {
  unitCostPrice: Float
  linePrice: Float
  updatedAt: Date
  desc: String
  uistate: Float
  objectId: String
  shipstate: Float
  createdAt: Date
  type: Float
  state: Float
  qty: Float
  linePriceBeforeDiscounts: Float
  sku_name: String
  starttime: Date
  paystate: Float
  lineno: Float
  servicetype: Float
}

input OrderContainedInArgument {
  updatedAt: [ID]
  paymentOrder_orderno: [ID]
  uistate: [ID]
  shippingRegion_name: [ID]
  shippingReceiverName: [ID]
  supplierstoretechnician_name: [ID]
  logo: [ID]
  objectId: [ID]
  totalPrice: [ID]
  shippingAddress_Id: [ID]
  shipstate: [ID]
  payType: [ID]
  shippingRegion: [ID]
  shippingOrderNo: [ID]
  createdAt: [ID]
  state: [ID]
  customer: [ID]
  shippingCompany: [ID]
  item_name: [ID]
  shippingPrice: [ID]
  paymentOrder: [ID]
  orderno: [ID]
  starttime: [ID]
  shippingAddress_name: [ID]
  paystate: [ID]
  shippingReceiverPhone: [ID]
  category_type: [ID]
  customer_name: [ID]
  createdby: [ID]
}

input OrderContainsAllArgument {
  updatedAt: [ID]
  paymentOrder_orderno: [ID]
  uistate: [ID]
  shippingRegion_name: [ID]
  shippingReceiverName: [ID]
  supplierstoretechnician_name: [ID]
  logo: [ID]
  objectId: [ID]
  totalPrice: [ID]
  shippingAddress_Id: [ID]
  shipstate: [ID]
  payType: [ID]
  shippingRegion: [ID]
  shippingOrderNo: [ID]
  createdAt: [ID]
  state: [ID]
  customer: [ID]
  shippingCompany: [ID]
  item_name: [ID]
  shippingPrice: [ID]
  paymentOrder: [ID]
  orderno: [ID]
  starttime: [ID]
  shippingAddress_name: [ID]
  paystate: [ID]
  shippingReceiverPhone: [ID]
  category_type: [ID]
  customer_name: [ID]
  createdby: [ID]
}

input OrderEqualToArgument {
  updatedAt: Date
  paymentOrder_orderno: String
  uistate: Float
  shippingRegion_name: String
  shippingReceiverName: String
  supplierstoretechnician_name: String
  logo: File
  objectId: String
  totalPrice: Float
  shippingAddress_Id: String
  shipstate: Float
  payType: Float
  shippingOrderNo: String
  createdAt: Date
  state: Float
  shippingCompany: String
  item_name: String
  shippingPrice: Float
  orderno: String
  starttime: Date
  shippingAddress_name: String
  paystate: Float
  shippingReceiverPhone: String
  category_type: Float
  customer_name: String
}

input OrderExistsArgument {
  updatedAt: Boolean
  paymentOrder_orderno: Boolean
  uistate: Boolean
  shippingRegion_name: Boolean
  shippingReceiverName: Boolean
  supplierstoretechnician_name: Boolean
  logo: Boolean
  objectId: Boolean
  totalPrice: Boolean
  shippingAddress_Id: Boolean
  shipstate: Boolean
  payType: Boolean
  shippingRegion: Boolean
  shippingOrderNo: Boolean
  createdAt: Boolean
  state: Boolean
  customer: Boolean
  shippingCompany: Boolean
  item_name: Boolean
  shippingPrice: Boolean
  paymentOrder: Boolean
  orderno: Boolean
  starttime: Boolean
  shippingAddress_name: Boolean
  paystate: Boolean
  shippingReceiverPhone: Boolean
  category_type: Boolean
  customer_name: Boolean
  createdby: Boolean
}

enum OrderFields {
  updatedAt
  paymentOrder_orderno
  uistate
  shippingRegion_name
  shippingReceiverName
  supplierstoretechnician_name
  logo
  objectId
  totalPrice
  shippingAddress_Id
  shipstate
  payType
  shippingRegion
  shippingOrderNo
  createdAt
  state
  customer
  shippingCompany
  item_name
  shippingPrice
  paymentOrder
  orderno
  starttime
  shippingAddress_name
  paystate
  shippingReceiverPhone
  category_type
  customer_name
  createdby
}

input OrderGreaterThanArgument {
  updatedAt: Date
  paymentOrder_orderno: String
  uistate: Float
  shippingRegion_name: String
  shippingReceiverName: String
  supplierstoretechnician_name: String
  logo: File
  objectId: String
  totalPrice: Float
  shippingAddress_Id: String
  shipstate: Float
  payType: Float
  shippingOrderNo: String
  createdAt: Date
  state: Float
  shippingCompany: String
  item_name: String
  shippingPrice: Float
  orderno: String
  starttime: Date
  shippingAddress_name: String
  paystate: Float
  shippingReceiverPhone: String
  category_type: Float
  customer_name: String
}

input OrderGreaterThanOrEqualToArgument {
  updatedAt: Date
  paymentOrder_orderno: String
  uistate: Float
  shippingRegion_name: String
  shippingReceiverName: String
  supplierstoretechnician_name: String
  logo: File
  objectId: String
  totalPrice: Float
  shippingAddress_Id: String
  shipstate: Float
  payType: Float
  shippingOrderNo: String
  createdAt: Date
  state: Float
  shippingCompany: String
  item_name: String
  shippingPrice: Float
  orderno: String
  starttime: Date
  shippingAddress_name: String
  paystate: Float
  shippingReceiverPhone: String
  category_type: Float
  customer_name: String
}

input OrderLessThanArgument {
  updatedAt: Date
  paymentOrder_orderno: String
  uistate: Float
  shippingRegion_name: String
  shippingReceiverName: String
  supplierstoretechnician_name: String
  logo: File
  objectId: String
  totalPrice: Float
  shippingAddress_Id: String
  shipstate: Float
  payType: Float
  shippingOrderNo: String
  createdAt: Date
  state: Float
  shippingCompany: String
  item_name: String
  shippingPrice: Float
  orderno: String
  starttime: Date
  shippingAddress_name: String
  paystate: Float
  shippingReceiverPhone: String
  category_type: Float
  customer_name: String
}

input OrderLessThanOrEqualToArgument {
  updatedAt: Date
  paymentOrder_orderno: String
  uistate: Float
  shippingRegion_name: String
  shippingReceiverName: String
  supplierstoretechnician_name: String
  logo: File
  objectId: String
  totalPrice: Float
  shippingAddress_Id: String
  shipstate: Float
  payType: Float
  shippingOrderNo: String
  createdAt: Date
  state: Float
  shippingCompany: String
  item_name: String
  shippingPrice: Float
  orderno: String
  starttime: Date
  shippingAddress_name: String
  paystate: Float
  shippingReceiverPhone: String
  category_type: Float
  customer_name: String
}

type Payment {
  updatedAt: Date
  objectId: ID
  createdAt: Date
  type: Float
  state: Float
  orderno: String
  createdby: _User
  paymentOrderOfOrder(objectId: ID, ascending: OrderFields, descending: OrderFields, limit: Int, equalTo: OrderEqualToArgument, greaterThan: OrderGreaterThanArgument, greaterThanOrEqualTo: OrderGreaterThanOrEqualToArgument, lessThan: OrderLessThanArgument, lessThanOrEqualTo: OrderLessThanOrEqualToArgument, containedIn: OrderContainedInArgument, containsAll: OrderContainsAllArgument, exists: OrderExistsArgument): [Order]
  paymentOrderOfTransfer(objectId: ID, ascending: TransferFields, descending: TransferFields, limit: Int, equalTo: TransferEqualToArgument, greaterThan: TransferGreaterThanArgument, greaterThanOrEqualTo: TransferGreaterThanOrEqualToArgument, lessThan: TransferLessThanArgument, lessThanOrEqualTo: TransferLessThanOrEqualToArgument, containedIn: TransferContainedInArgument, containsAll: TransferContainsAllArgument, exists: TransferExistsArgument): [Transfer]
}

input PaymentContainedInArgument {
  updatedAt: [ID]
  objectId: [ID]
  createdAt: [ID]
  type: [ID]
  state: [ID]
  orderno: [ID]
  createdby: [ID]
}

input PaymentContainsAllArgument {
  updatedAt: [ID]
  objectId: [ID]
  createdAt: [ID]
  type: [ID]
  state: [ID]
  orderno: [ID]
  createdby: [ID]
}

input PaymentEqualToArgument {
  updatedAt: Date
  objectId: String
  createdAt: Date
  type: Float
  state: Float
  orderno: String
}

input PaymentExistsArgument {
  updatedAt: Boolean
  objectId: Boolean
  createdAt: Boolean
  type: Boolean
  state: Boolean
  orderno: Boolean
  createdby: Boolean
}

enum PaymentFields {
  updatedAt
  objectId
  createdAt
  type
  state
  orderno
  createdby
}

input PaymentGreaterThanArgument {
  updatedAt: Date
  objectId: String
  createdAt: Date
  type: Float
  state: Float
  orderno: String
}

input PaymentGreaterThanOrEqualToArgument {
  updatedAt: Date
  objectId: String
  createdAt: Date
  type: Float
  state: Float
  orderno: String
}

input PaymentLessThanArgument {
  updatedAt: Date
  objectId: String
  createdAt: Date
  type: Float
  state: Float
  orderno: String
}

input PaymentLessThanOrEqualToArgument {
  updatedAt: Date
  objectId: String
  createdAt: Date
  type: Float
  state: Float
  orderno: String
}

type Region {
  updatedAt: Date
  name: String
  objectId: ID
  createdAt: Date
  state: Float
  code: String
  shortname: String
  createdby: _User
  shippingRegionOfOrder(objectId: ID, ascending: OrderFields, descending: OrderFields, limit: Int, equalTo: OrderEqualToArgument, greaterThan: OrderGreaterThanArgument, greaterThanOrEqualTo: OrderGreaterThanOrEqualToArgument, lessThan: OrderLessThanArgument, lessThanOrEqualTo: OrderLessThanOrEqualToArgument, containedIn: OrderContainedInArgument, containsAll: OrderContainsAllArgument, exists: OrderExistsArgument): [Order]
  regionOfStore(objectId: ID, ascending: StoreFields, descending: StoreFields, limit: Int, equalTo: StoreEqualToArgument, greaterThan: StoreGreaterThanArgument, greaterThanOrEqualTo: StoreGreaterThanOrEqualToArgument, lessThan: StoreLessThanArgument, lessThanOrEqualTo: StoreLessThanOrEqualToArgument, containedIn: StoreContainedInArgument, containsAll: StoreContainsAllArgument, exists: StoreExistsArgument): [Store]
  regionOfTechnician_Region(objectId: ID, ascending: Technician_RegionFields, descending: Technician_RegionFields, limit: Int, equalTo: Technician_RegionEqualToArgument, greaterThan: Technician_RegionGreaterThanArgument, greaterThanOrEqualTo: Technician_RegionGreaterThanOrEqualToArgument, lessThan: Technician_RegionLessThanArgument, lessThanOrEqualTo: Technician_RegionLessThanOrEqualToArgument, containedIn: Technician_RegionContainedInArgument, containsAll: Technician_RegionContainsAllArgument, exists: Technician_RegionExistsArgument): [Technician_Region]
  regionOfCustomer_Address(objectId: ID, ascending: Customer_AddressFields, descending: Customer_AddressFields, limit: Int, equalTo: Customer_AddressEqualToArgument, greaterThan: Customer_AddressGreaterThanArgument, greaterThanOrEqualTo: Customer_AddressGreaterThanOrEqualToArgument, lessThan: Customer_AddressLessThanArgument, lessThanOrEqualTo: Customer_AddressLessThanOrEqualToArgument, containedIn: Customer_AddressContainedInArgument, containsAll: Customer_AddressContainsAllArgument, exists: Customer_AddressExistsArgument): [Customer_Address]
  regionOfStore_Branch(objectId: ID, ascending: Store_BranchFields, descending: Store_BranchFields, limit: Int, equalTo: Store_BranchEqualToArgument, greaterThan: Store_BranchGreaterThanArgument, greaterThanOrEqualTo: Store_BranchGreaterThanOrEqualToArgument, lessThan: Store_BranchLessThanArgument, lessThanOrEqualTo: Store_BranchLessThanOrEqualToArgument, containedIn: Store_BranchContainedInArgument, containsAll: Store_BranchContainsAllArgument, exists: Store_BranchExistsArgument): [Store_Branch]
  regionOfSupplier(objectId: ID, ascending: SupplierFields, descending: SupplierFields, limit: Int, equalTo: SupplierEqualToArgument, greaterThan: SupplierGreaterThanArgument, greaterThanOrEqualTo: SupplierGreaterThanOrEqualToArgument, lessThan: SupplierLessThanArgument, lessThanOrEqualTo: SupplierLessThanOrEqualToArgument, containedIn: SupplierContainedInArgument, containsAll: SupplierContainsAllArgument, exists: SupplierExistsArgument): [Supplier]
  regionOfItem_Region(objectId: ID, ascending: Item_RegionFields, descending: Item_RegionFields, limit: Int, equalTo: Item_RegionEqualToArgument, greaterThan: Item_RegionGreaterThanArgument, greaterThanOrEqualTo: Item_RegionGreaterThanOrEqualToArgument, lessThan: Item_RegionLessThanArgument, lessThanOrEqualTo: Item_RegionLessThanOrEqualToArgument, containedIn: Item_RegionContainedInArgument, containsAll: Item_RegionContainsAllArgument, exists: Item_RegionExistsArgument): [Item_Region]
}

input RegionContainedInArgument {
  updatedAt: [ID]
  name: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  code: [ID]
  shortname: [ID]
  createdby: [ID]
}

input RegionContainsAllArgument {
  updatedAt: [ID]
  name: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  code: [ID]
  shortname: [ID]
  createdby: [ID]
}

input RegionEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  code: String
  shortname: String
}

input RegionExistsArgument {
  updatedAt: Boolean
  name: Boolean
  objectId: Boolean
  createdAt: Boolean
  state: Boolean
  code: Boolean
  shortname: Boolean
  createdby: Boolean
}

enum RegionFields {
  updatedAt
  name
  objectId
  createdAt
  state
  code
  shortname
  createdby
}

input RegionGreaterThanArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  code: String
  shortname: String
}

input RegionGreaterThanOrEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  code: String
  shortname: String
}

input RegionLessThanArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  code: String
  shortname: String
}

input RegionLessThanOrEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  code: String
  shortname: String
}

type Reviews {
  sourceorder_orderno: String
  experiencerate: Float
  updatedAt: Date
  contentpic2: File
  content: String
  objectId: ID
  createdAt: Date
  state: Float
  effectrate: Float
  servicerate: Float
  sourceorder: Order
  contentpic1: File
  orderno: String
  ratetype: Float
  environmentalrate: Float
  contentpic3: File
  createdby: _User
}

input ReviewsContainedInArgument {
  sourceorder_orderno: [ID]
  experiencerate: [ID]
  updatedAt: [ID]
  contentpic2: [ID]
  content: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  effectrate: [ID]
  servicerate: [ID]
  sourceorder: [ID]
  contentpic1: [ID]
  orderno: [ID]
  ratetype: [ID]
  environmentalrate: [ID]
  contentpic3: [ID]
  createdby: [ID]
}

input ReviewsContainsAllArgument {
  sourceorder_orderno: [ID]
  experiencerate: [ID]
  updatedAt: [ID]
  contentpic2: [ID]
  content: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  effectrate: [ID]
  servicerate: [ID]
  sourceorder: [ID]
  contentpic1: [ID]
  orderno: [ID]
  ratetype: [ID]
  environmentalrate: [ID]
  contentpic3: [ID]
  createdby: [ID]
}

input ReviewsEqualToArgument {
  sourceorder_orderno: String
  experiencerate: Float
  updatedAt: Date
  contentpic2: File
  content: String
  objectId: String
  createdAt: Date
  state: Float
  effectrate: Float
  servicerate: Float
  contentpic1: File
  orderno: String
  ratetype: Float
  environmentalrate: Float
  contentpic3: File
}

input ReviewsExistsArgument {
  sourceorder_orderno: Boolean
  experiencerate: Boolean
  updatedAt: Boolean
  contentpic2: Boolean
  content: Boolean
  objectId: Boolean
  createdAt: Boolean
  state: Boolean
  effectrate: Boolean
  servicerate: Boolean
  sourceorder: Boolean
  contentpic1: Boolean
  orderno: Boolean
  ratetype: Boolean
  environmentalrate: Boolean
  contentpic3: Boolean
  createdby: Boolean
}

enum ReviewsFields {
  sourceorder_orderno
  experiencerate
  updatedAt
  contentpic2
  content
  objectId
  createdAt
  state
  effectrate
  servicerate
  sourceorder
  contentpic1
  orderno
  ratetype
  environmentalrate
  contentpic3
  createdby
}

input ReviewsGreaterThanArgument {
  sourceorder_orderno: String
  experiencerate: Float
  updatedAt: Date
  contentpic2: File
  content: String
  objectId: String
  createdAt: Date
  state: Float
  effectrate: Float
  servicerate: Float
  contentpic1: File
  orderno: String
  ratetype: Float
  environmentalrate: Float
  contentpic3: File
}

input ReviewsGreaterThanOrEqualToArgument {
  sourceorder_orderno: String
  experiencerate: Float
  updatedAt: Date
  contentpic2: File
  content: String
  objectId: String
  createdAt: Date
  state: Float
  effectrate: Float
  servicerate: Float
  contentpic1: File
  orderno: String
  ratetype: Float
  environmentalrate: Float
  contentpic3: File
}

input ReviewsLessThanArgument {
  sourceorder_orderno: String
  experiencerate: Float
  updatedAt: Date
  contentpic2: File
  content: String
  objectId: String
  createdAt: Date
  state: Float
  effectrate: Float
  servicerate: Float
  contentpic1: File
  orderno: String
  ratetype: Float
  environmentalrate: Float
  contentpic3: File
}

input ReviewsLessThanOrEqualToArgument {
  sourceorder_orderno: String
  experiencerate: Float
  updatedAt: Date
  contentpic2: File
  content: String
  objectId: String
  createdAt: Date
  state: Float
  effectrate: Float
  servicerate: Float
  contentpic1: File
  orderno: String
  ratetype: Float
  environmentalrate: Float
  contentpic3: File
}

type Setting {
  updatedAt: Date
  name: String
  objectId: ID
  createdAt: Date
  state: Float
  code: String
  obj: Object
  createdby: _User
}

input SettingContainedInArgument {
  updatedAt: [ID]
  name: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  code: [ID]
  obj: [ID]
  createdby: [ID]
}

input SettingContainsAllArgument {
  updatedAt: [ID]
  name: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  code: [ID]
  obj: [ID]
  createdby: [ID]
}

input SettingEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  code: String
  obj: Object
}

input SettingExistsArgument {
  updatedAt: Boolean
  name: Boolean
  objectId: Boolean
  createdAt: Boolean
  state: Boolean
  code: Boolean
  obj: Boolean
  createdby: Boolean
}

enum SettingFields {
  updatedAt
  name
  objectId
  createdAt
  state
  code
  obj
  createdby
}

input SettingGreaterThanArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  code: String
  obj: Object
}

input SettingGreaterThanOrEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  code: String
  obj: Object
}

input SettingLessThanArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  code: String
  obj: Object
}

input SettingLessThanOrEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  code: String
  obj: Object
}

type SKU {
  updatedAt: Date
  name: String
  objectId: ID
  item: Item
  originalprice: Float
  createdAt: Date
  state: Float
  item_name: String
  attributelist: Array
  shipcost: Float
  code: String
  qty: Float
  pic: File
  price: Float
  category_type: Float
  createdby: _User
  skuOfCustomer_CartSKU(objectId: ID, ascending: Customer_CartSKUFields, descending: Customer_CartSKUFields, limit: Int, equalTo: Customer_CartSKUEqualToArgument, greaterThan: Customer_CartSKUGreaterThanArgument, greaterThanOrEqualTo: Customer_CartSKUGreaterThanOrEqualToArgument, lessThan: Customer_CartSKULessThanArgument, lessThanOrEqualTo: Customer_CartSKULessThanOrEqualToArgument, containedIn: Customer_CartSKUContainedInArgument, containsAll: Customer_CartSKUContainsAllArgument, exists: Customer_CartSKUExistsArgument): [Customer_CartSKU]
  skuOfOrder_Line(objectId: ID, ascending: Order_LineFields, descending: Order_LineFields, limit: Int, equalTo: Order_LineEqualToArgument, greaterThan: Order_LineGreaterThanArgument, greaterThanOrEqualTo: Order_LineGreaterThanOrEqualToArgument, lessThan: Order_LineLessThanArgument, lessThanOrEqualTo: Order_LineLessThanOrEqualToArgument, containedIn: Order_LineContainedInArgument, containsAll: Order_LineContainsAllArgument, exists: Order_LineExistsArgument): [Order_Line]
}

input SKUContainedInArgument {
  updatedAt: [ID]
  name: [ID]
  objectId: [ID]
  item: [ID]
  originalprice: [ID]
  createdAt: [ID]
  state: [ID]
  item_name: [ID]
  attributelist: [ID]
  shipcost: [ID]
  code: [ID]
  qty: [ID]
  pic: [ID]
  price: [ID]
  category_type: [ID]
  createdby: [ID]
}

input SKUContainsAllArgument {
  updatedAt: [ID]
  name: [ID]
  objectId: [ID]
  item: [ID]
  originalprice: [ID]
  createdAt: [ID]
  state: [ID]
  item_name: [ID]
  attributelist: [ID]
  shipcost: [ID]
  code: [ID]
  qty: [ID]
  pic: [ID]
  price: [ID]
  category_type: [ID]
  createdby: [ID]
}

input SKUEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  originalprice: Float
  createdAt: Date
  state: Float
  item_name: String
  attributelist: Array
  shipcost: Float
  code: String
  qty: Float
  pic: File
  price: Float
  category_type: Float
}

input SKUExistsArgument {
  updatedAt: Boolean
  name: Boolean
  objectId: Boolean
  item: Boolean
  originalprice: Boolean
  createdAt: Boolean
  state: Boolean
  item_name: Boolean
  attributelist: Boolean
  shipcost: Boolean
  code: Boolean
  qty: Boolean
  pic: Boolean
  price: Boolean
  category_type: Boolean
  createdby: Boolean
}

enum SKUFields {
  updatedAt
  name
  objectId
  item
  originalprice
  createdAt
  state
  item_name
  attributelist
  shipcost
  code
  qty
  pic
  price
  category_type
  createdby
}

input SKUGreaterThanArgument {
  updatedAt: Date
  name: String
  objectId: String
  originalprice: Float
  createdAt: Date
  state: Float
  item_name: String
  attributelist: Array
  shipcost: Float
  code: String
  qty: Float
  pic: File
  price: Float
  category_type: Float
}

input SKUGreaterThanOrEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  originalprice: Float
  createdAt: Date
  state: Float
  item_name: String
  attributelist: Array
  shipcost: Float
  code: String
  qty: Float
  pic: File
  price: Float
  category_type: Float
}

input SKULessThanArgument {
  updatedAt: Date
  name: String
  objectId: String
  originalprice: Float
  createdAt: Date
  state: Float
  item_name: String
  attributelist: Array
  shipcost: Float
  code: String
  qty: Float
  pic: File
  price: Float
  category_type: Float
}

input SKULessThanOrEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  originalprice: Float
  createdAt: Date
  state: Float
  item_name: String
  attributelist: Array
  shipcost: Float
  code: String
  qty: Float
  pic: File
  price: Float
  category_type: Float
}

type Store {
  address: String
  billEmail: String
  updatedAt: Date
  region_name: String
  logo: File
  managerPhone: String
  name: String
  objectId: ID
  managerEmail: String
  bank: String
  branchcount: Float
  createdAt: Date
  state: Float
  defaultpostage: Float
  managerWeChat: String
  pic6: File
  tel: String
  account: String
  region: Region
  summary: String
  pic4: File
  payee: String
  pic3: File
  code: String
  pic7: File
  pic1: File
  period: Float
  pic8: File
  managerName: String
  pic5: File
  expirydate: Date
  storeType: Float
  pic2: File
  company: String
  createdby: _User
  storeOfStore_Category(objectId: ID, ascending: Store_CategoryFields, descending: Store_CategoryFields, limit: Int, equalTo: Store_CategoryEqualToArgument, greaterThan: Store_CategoryGreaterThanArgument, greaterThanOrEqualTo: Store_CategoryGreaterThanOrEqualToArgument, lessThan: Store_CategoryLessThanArgument, lessThanOrEqualTo: Store_CategoryLessThanOrEqualToArgument, containedIn: Store_CategoryContainedInArgument, containsAll: Store_CategoryContainsAllArgument, exists: Store_CategoryExistsArgument): [Store_Category]
  storeOfStore_Branch(objectId: ID, ascending: Store_BranchFields, descending: Store_BranchFields, limit: Int, equalTo: Store_BranchEqualToArgument, greaterThan: Store_BranchGreaterThanArgument, greaterThanOrEqualTo: Store_BranchGreaterThanOrEqualToArgument, lessThan: Store_BranchLessThanArgument, lessThanOrEqualTo: Store_BranchLessThanOrEqualToArgument, containedIn: Store_BranchContainedInArgument, containsAll: Store_BranchContainsAllArgument, exists: Store_BranchExistsArgument): [Store_Branch]
  storeOfAccount(objectId: ID, ascending: AccountFields, descending: AccountFields, limit: Int, equalTo: AccountEqualToArgument, greaterThan: AccountGreaterThanArgument, greaterThanOrEqualTo: AccountGreaterThanOrEqualToArgument, lessThan: AccountLessThanArgument, lessThanOrEqualTo: AccountLessThanOrEqualToArgument, containedIn: AccountContainedInArgument, containsAll: AccountContainsAllArgument, exists: AccountExistsArgument): [Account]
  storeOfItem(objectId: ID, ascending: ItemFields, descending: ItemFields, limit: Int, equalTo: ItemEqualToArgument, greaterThan: ItemGreaterThanArgument, greaterThanOrEqualTo: ItemGreaterThanOrEqualToArgument, lessThan: ItemLessThanArgument, lessThanOrEqualTo: ItemLessThanOrEqualToArgument, containedIn: ItemContainedInArgument, containsAll: ItemContainsAllArgument, exists: ItemExistsArgument): [Item]
}

type Store_Branch {
  address: String
  updatedAt: Date
  store: Store
  region_name: String
  logo: File
  phone: String
  name: String
  objectId: ID
  createdAt: Date
  state: Float
  region: Region
  lineno: Float
  createdby: _User
}

input Store_BranchContainedInArgument {
  address: [ID]
  updatedAt: [ID]
  store: [ID]
  region_name: [ID]
  logo: [ID]
  phone: [ID]
  name: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  region: [ID]
  lineno: [ID]
  createdby: [ID]
}

input Store_BranchContainsAllArgument {
  address: [ID]
  updatedAt: [ID]
  store: [ID]
  region_name: [ID]
  logo: [ID]
  phone: [ID]
  name: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  region: [ID]
  lineno: [ID]
  createdby: [ID]
}

input Store_BranchEqualToArgument {
  address: String
  updatedAt: Date
  region_name: String
  logo: File
  phone: String
  name: String
  objectId: String
  createdAt: Date
  state: Float
  lineno: Float
}

input Store_BranchExistsArgument {
  address: Boolean
  updatedAt: Boolean
  store: Boolean
  region_name: Boolean
  logo: Boolean
  phone: Boolean
  name: Boolean
  objectId: Boolean
  createdAt: Boolean
  state: Boolean
  region: Boolean
  lineno: Boolean
  createdby: Boolean
}

enum Store_BranchFields {
  address
  updatedAt
  store
  region_name
  logo
  phone
  name
  objectId
  createdAt
  state
  region
  lineno
  createdby
}

input Store_BranchGreaterThanArgument {
  address: String
  updatedAt: Date
  region_name: String
  logo: File
  phone: String
  name: String
  objectId: String
  createdAt: Date
  state: Float
  lineno: Float
}

input Store_BranchGreaterThanOrEqualToArgument {
  address: String
  updatedAt: Date
  region_name: String
  logo: File
  phone: String
  name: String
  objectId: String
  createdAt: Date
  state: Float
  lineno: Float
}

input Store_BranchLessThanArgument {
  address: String
  updatedAt: Date
  region_name: String
  logo: File
  phone: String
  name: String
  objectId: String
  createdAt: Date
  state: Float
  lineno: Float
}

input Store_BranchLessThanOrEqualToArgument {
  address: String
  updatedAt: Date
  region_name: String
  logo: File
  phone: String
  name: String
  objectId: String
  createdAt: Date
  state: Float
  lineno: Float
}

type Store_Category {
  category: Category
  updatedAt: Date
  store: Store
  objectId: ID
  createdAt: Date
  state: Float
  category_name: String
  lineno: Float
  createdby: _User
}

input Store_CategoryContainedInArgument {
  category: [ID]
  updatedAt: [ID]
  store: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  category_name: [ID]
  lineno: [ID]
  createdby: [ID]
}

input Store_CategoryContainsAllArgument {
  category: [ID]
  updatedAt: [ID]
  store: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  category_name: [ID]
  lineno: [ID]
  createdby: [ID]
}

input Store_CategoryEqualToArgument {
  updatedAt: Date
  objectId: String
  createdAt: Date
  state: Float
  category_name: String
  lineno: Float
}

input Store_CategoryExistsArgument {
  category: Boolean
  updatedAt: Boolean
  store: Boolean
  objectId: Boolean
  createdAt: Boolean
  state: Boolean
  category_name: Boolean
  lineno: Boolean
  createdby: Boolean
}

enum Store_CategoryFields {
  category
  updatedAt
  store
  objectId
  createdAt
  state
  category_name
  lineno
  createdby
}

input Store_CategoryGreaterThanArgument {
  updatedAt: Date
  objectId: String
  createdAt: Date
  state: Float
  category_name: String
  lineno: Float
}

input Store_CategoryGreaterThanOrEqualToArgument {
  updatedAt: Date
  objectId: String
  createdAt: Date
  state: Float
  category_name: String
  lineno: Float
}

input Store_CategoryLessThanArgument {
  updatedAt: Date
  objectId: String
  createdAt: Date
  state: Float
  category_name: String
  lineno: Float
}

input Store_CategoryLessThanOrEqualToArgument {
  updatedAt: Date
  objectId: String
  createdAt: Date
  state: Float
  category_name: String
  lineno: Float
}

input StoreContainedInArgument {
  address: [ID]
  billEmail: [ID]
  updatedAt: [ID]
  region_name: [ID]
  logo: [ID]
  managerPhone: [ID]
  name: [ID]
  objectId: [ID]
  managerEmail: [ID]
  bank: [ID]
  branchcount: [ID]
  createdAt: [ID]
  state: [ID]
  defaultpostage: [ID]
  managerWeChat: [ID]
  pic6: [ID]
  tel: [ID]
  account: [ID]
  region: [ID]
  summary: [ID]
  pic4: [ID]
  payee: [ID]
  pic3: [ID]
  code: [ID]
  pic7: [ID]
  pic1: [ID]
  period: [ID]
  pic8: [ID]
  managerName: [ID]
  pic5: [ID]
  expirydate: [ID]
  storeType: [ID]
  pic2: [ID]
  company: [ID]
  createdby: [ID]
}

input StoreContainsAllArgument {
  address: [ID]
  billEmail: [ID]
  updatedAt: [ID]
  region_name: [ID]
  logo: [ID]
  managerPhone: [ID]
  name: [ID]
  objectId: [ID]
  managerEmail: [ID]
  bank: [ID]
  branchcount: [ID]
  createdAt: [ID]
  state: [ID]
  defaultpostage: [ID]
  managerWeChat: [ID]
  pic6: [ID]
  tel: [ID]
  account: [ID]
  region: [ID]
  summary: [ID]
  pic4: [ID]
  payee: [ID]
  pic3: [ID]
  code: [ID]
  pic7: [ID]
  pic1: [ID]
  period: [ID]
  pic8: [ID]
  managerName: [ID]
  pic5: [ID]
  expirydate: [ID]
  storeType: [ID]
  pic2: [ID]
  company: [ID]
  createdby: [ID]
}

input StoreEqualToArgument {
  address: String
  billEmail: String
  updatedAt: Date
  region_name: String
  logo: File
  managerPhone: String
  name: String
  objectId: String
  managerEmail: String
  bank: String
  branchcount: Float
  createdAt: Date
  state: Float
  defaultpostage: Float
  managerWeChat: String
  pic6: File
  tel: String
  account: String
  summary: String
  pic4: File
  payee: String
  pic3: File
  code: String
  pic7: File
  pic1: File
  period: Float
  pic8: File
  managerName: String
  pic5: File
  expirydate: Date
  storeType: Float
  pic2: File
  company: String
}

input StoreExistsArgument {
  address: Boolean
  billEmail: Boolean
  updatedAt: Boolean
  region_name: Boolean
  logo: Boolean
  managerPhone: Boolean
  name: Boolean
  objectId: Boolean
  managerEmail: Boolean
  bank: Boolean
  branchcount: Boolean
  createdAt: Boolean
  state: Boolean
  defaultpostage: Boolean
  managerWeChat: Boolean
  pic6: Boolean
  tel: Boolean
  account: Boolean
  region: Boolean
  summary: Boolean
  pic4: Boolean
  payee: Boolean
  pic3: Boolean
  code: Boolean
  pic7: Boolean
  pic1: Boolean
  period: Boolean
  pic8: Boolean
  managerName: Boolean
  pic5: Boolean
  expirydate: Boolean
  storeType: Boolean
  pic2: Boolean
  company: Boolean
  createdby: Boolean
}

enum StoreFields {
  address
  billEmail
  updatedAt
  region_name
  logo
  managerPhone
  name
  objectId
  managerEmail
  bank
  branchcount
  createdAt
  state
  defaultpostage
  managerWeChat
  pic6
  tel
  account
  region
  summary
  pic4
  payee
  pic3
  code
  pic7
  pic1
  period
  pic8
  managerName
  pic5
  expirydate
  storeType
  pic2
  company
  createdby
}

input StoreGreaterThanArgument {
  address: String
  billEmail: String
  updatedAt: Date
  region_name: String
  logo: File
  managerPhone: String
  name: String
  objectId: String
  managerEmail: String
  bank: String
  branchcount: Float
  createdAt: Date
  state: Float
  defaultpostage: Float
  managerWeChat: String
  pic6: File
  tel: String
  account: String
  summary: String
  pic4: File
  payee: String
  pic3: File
  code: String
  pic7: File
  pic1: File
  period: Float
  pic8: File
  managerName: String
  pic5: File
  expirydate: Date
  storeType: Float
  pic2: File
  company: String
}

input StoreGreaterThanOrEqualToArgument {
  address: String
  billEmail: String
  updatedAt: Date
  region_name: String
  logo: File
  managerPhone: String
  name: String
  objectId: String
  managerEmail: String
  bank: String
  branchcount: Float
  createdAt: Date
  state: Float
  defaultpostage: Float
  managerWeChat: String
  pic6: File
  tel: String
  account: String
  summary: String
  pic4: File
  payee: String
  pic3: File
  code: String
  pic7: File
  pic1: File
  period: Float
  pic8: File
  managerName: String
  pic5: File
  expirydate: Date
  storeType: Float
  pic2: File
  company: String
}

input StoreLessThanArgument {
  address: String
  billEmail: String
  updatedAt: Date
  region_name: String
  logo: File
  managerPhone: String
  name: String
  objectId: String
  managerEmail: String
  bank: String
  branchcount: Float
  createdAt: Date
  state: Float
  defaultpostage: Float
  managerWeChat: String
  pic6: File
  tel: String
  account: String
  summary: String
  pic4: File
  payee: String
  pic3: File
  code: String
  pic7: File
  pic1: File
  period: Float
  pic8: File
  managerName: String
  pic5: File
  expirydate: Date
  storeType: Float
  pic2: File
  company: String
}

input StoreLessThanOrEqualToArgument {
  address: String
  billEmail: String
  updatedAt: Date
  region_name: String
  logo: File
  managerPhone: String
  name: String
  objectId: String
  managerEmail: String
  bank: String
  branchcount: Float
  createdAt: Date
  state: Float
  defaultpostage: Float
  managerWeChat: String
  pic6: File
  tel: String
  account: String
  summary: String
  pic4: File
  payee: String
  pic3: File
  code: String
  pic7: File
  pic1: File
  period: Float
  pic8: File
  managerName: String
  pic5: File
  expirydate: Date
  storeType: Float
  pic2: File
  company: String
}

type Supplier {
  address: String
  billEmail: String
  updatedAt: Date
  region_name: String
  logo: File
  managerPhone: String
  name: String
  objectId: ID
  managerEmail: String
  bank: String
  createdAt: Date
  state: Float
  defaultpostage: Float
  managerWeChat: String
  pic6: File
  tel: String
  account: String
  region: Region
  summary: String
  pic4: File
  payee: String
  pic3: File
  code: String
  pic7: File
  pic1: File
  period: Float
  pic8: File
  managerName: String
  pic5: File
  expirydate: Date
  pic2: File
  supplierType: Float
  createdby: _User
  supplierOfAccount(objectId: ID, ascending: AccountFields, descending: AccountFields, limit: Int, equalTo: AccountEqualToArgument, greaterThan: AccountGreaterThanArgument, greaterThanOrEqualTo: AccountGreaterThanOrEqualToArgument, lessThan: AccountLessThanArgument, lessThanOrEqualTo: AccountLessThanOrEqualToArgument, containedIn: AccountContainedInArgument, containsAll: AccountContainsAllArgument, exists: AccountExistsArgument): [Account]
  supplierOfItem(objectId: ID, ascending: ItemFields, descending: ItemFields, limit: Int, equalTo: ItemEqualToArgument, greaterThan: ItemGreaterThanArgument, greaterThanOrEqualTo: ItemGreaterThanOrEqualToArgument, lessThan: ItemLessThanArgument, lessThanOrEqualTo: ItemLessThanOrEqualToArgument, containedIn: ItemContainedInArgument, containsAll: ItemContainsAllArgument, exists: ItemExistsArgument): [Item]
  supplierOfSupplier_Category(objectId: ID, ascending: Supplier_CategoryFields, descending: Supplier_CategoryFields, limit: Int, equalTo: Supplier_CategoryEqualToArgument, greaterThan: Supplier_CategoryGreaterThanArgument, greaterThanOrEqualTo: Supplier_CategoryGreaterThanOrEqualToArgument, lessThan: Supplier_CategoryLessThanArgument, lessThanOrEqualTo: Supplier_CategoryLessThanOrEqualToArgument, containedIn: Supplier_CategoryContainedInArgument, containsAll: Supplier_CategoryContainsAllArgument, exists: Supplier_CategoryExistsArgument): [Supplier_Category]
}

type Supplier_Category {
  category: Category
  supplier: Supplier
  updatedAt: Date
  objectId: ID
  createdAt: Date
  state: Float
  category_name: String
  lineno: Float
  createdby: _User
}

input Supplier_CategoryContainedInArgument {
  category: [ID]
  supplier: [ID]
  updatedAt: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  category_name: [ID]
  lineno: [ID]
  createdby: [ID]
}

input Supplier_CategoryContainsAllArgument {
  category: [ID]
  supplier: [ID]
  updatedAt: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  category_name: [ID]
  lineno: [ID]
  createdby: [ID]
}

input Supplier_CategoryEqualToArgument {
  updatedAt: Date
  objectId: String
  createdAt: Date
  state: Float
  category_name: String
  lineno: Float
}

input Supplier_CategoryExistsArgument {
  category: Boolean
  supplier: Boolean
  updatedAt: Boolean
  objectId: Boolean
  createdAt: Boolean
  state: Boolean
  category_name: Boolean
  lineno: Boolean
  createdby: Boolean
}

enum Supplier_CategoryFields {
  category
  supplier
  updatedAt
  objectId
  createdAt
  state
  category_name
  lineno
  createdby
}

input Supplier_CategoryGreaterThanArgument {
  updatedAt: Date
  objectId: String
  createdAt: Date
  state: Float
  category_name: String
  lineno: Float
}

input Supplier_CategoryGreaterThanOrEqualToArgument {
  updatedAt: Date
  objectId: String
  createdAt: Date
  state: Float
  category_name: String
  lineno: Float
}

input Supplier_CategoryLessThanArgument {
  updatedAt: Date
  objectId: String
  createdAt: Date
  state: Float
  category_name: String
  lineno: Float
}

input Supplier_CategoryLessThanOrEqualToArgument {
  updatedAt: Date
  objectId: String
  createdAt: Date
  state: Float
  category_name: String
  lineno: Float
}

input SupplierContainedInArgument {
  address: [ID]
  billEmail: [ID]
  updatedAt: [ID]
  region_name: [ID]
  logo: [ID]
  managerPhone: [ID]
  name: [ID]
  objectId: [ID]
  managerEmail: [ID]
  bank: [ID]
  createdAt: [ID]
  state: [ID]
  defaultpostage: [ID]
  managerWeChat: [ID]
  pic6: [ID]
  tel: [ID]
  account: [ID]
  region: [ID]
  summary: [ID]
  pic4: [ID]
  payee: [ID]
  pic3: [ID]
  code: [ID]
  pic7: [ID]
  pic1: [ID]
  period: [ID]
  pic8: [ID]
  managerName: [ID]
  pic5: [ID]
  expirydate: [ID]
  pic2: [ID]
  supplierType: [ID]
  createdby: [ID]
}

input SupplierContainsAllArgument {
  address: [ID]
  billEmail: [ID]
  updatedAt: [ID]
  region_name: [ID]
  logo: [ID]
  managerPhone: [ID]
  name: [ID]
  objectId: [ID]
  managerEmail: [ID]
  bank: [ID]
  createdAt: [ID]
  state: [ID]
  defaultpostage: [ID]
  managerWeChat: [ID]
  pic6: [ID]
  tel: [ID]
  account: [ID]
  region: [ID]
  summary: [ID]
  pic4: [ID]
  payee: [ID]
  pic3: [ID]
  code: [ID]
  pic7: [ID]
  pic1: [ID]
  period: [ID]
  pic8: [ID]
  managerName: [ID]
  pic5: [ID]
  expirydate: [ID]
  pic2: [ID]
  supplierType: [ID]
  createdby: [ID]
}

input SupplierEqualToArgument {
  address: String
  billEmail: String
  updatedAt: Date
  region_name: String
  logo: File
  managerPhone: String
  name: String
  objectId: String
  managerEmail: String
  bank: String
  createdAt: Date
  state: Float
  defaultpostage: Float
  managerWeChat: String
  pic6: File
  tel: String
  account: String
  summary: String
  pic4: File
  payee: String
  pic3: File
  code: String
  pic7: File
  pic1: File
  period: Float
  pic8: File
  managerName: String
  pic5: File
  expirydate: Date
  pic2: File
  supplierType: Float
}

input SupplierExistsArgument {
  address: Boolean
  billEmail: Boolean
  updatedAt: Boolean
  region_name: Boolean
  logo: Boolean
  managerPhone: Boolean
  name: Boolean
  objectId: Boolean
  managerEmail: Boolean
  bank: Boolean
  createdAt: Boolean
  state: Boolean
  defaultpostage: Boolean
  managerWeChat: Boolean
  pic6: Boolean
  tel: Boolean
  account: Boolean
  region: Boolean
  summary: Boolean
  pic4: Boolean
  payee: Boolean
  pic3: Boolean
  code: Boolean
  pic7: Boolean
  pic1: Boolean
  period: Boolean
  pic8: Boolean
  managerName: Boolean
  pic5: Boolean
  expirydate: Boolean
  pic2: Boolean
  supplierType: Boolean
  createdby: Boolean
}

enum SupplierFields {
  address
  billEmail
  updatedAt
  region_name
  logo
  managerPhone
  name
  objectId
  managerEmail
  bank
  createdAt
  state
  defaultpostage
  managerWeChat
  pic6
  tel
  account
  region
  summary
  pic4
  payee
  pic3
  code
  pic7
  pic1
  period
  pic8
  managerName
  pic5
  expirydate
  pic2
  supplierType
  createdby
}

input SupplierGreaterThanArgument {
  address: String
  billEmail: String
  updatedAt: Date
  region_name: String
  logo: File
  managerPhone: String
  name: String
  objectId: String
  managerEmail: String
  bank: String
  createdAt: Date
  state: Float
  defaultpostage: Float
  managerWeChat: String
  pic6: File
  tel: String
  account: String
  summary: String
  pic4: File
  payee: String
  pic3: File
  code: String
  pic7: File
  pic1: File
  period: Float
  pic8: File
  managerName: String
  pic5: File
  expirydate: Date
  pic2: File
  supplierType: Float
}

input SupplierGreaterThanOrEqualToArgument {
  address: String
  billEmail: String
  updatedAt: Date
  region_name: String
  logo: File
  managerPhone: String
  name: String
  objectId: String
  managerEmail: String
  bank: String
  createdAt: Date
  state: Float
  defaultpostage: Float
  managerWeChat: String
  pic6: File
  tel: String
  account: String
  summary: String
  pic4: File
  payee: String
  pic3: File
  code: String
  pic7: File
  pic1: File
  period: Float
  pic8: File
  managerName: String
  pic5: File
  expirydate: Date
  pic2: File
  supplierType: Float
}

input SupplierLessThanArgument {
  address: String
  billEmail: String
  updatedAt: Date
  region_name: String
  logo: File
  managerPhone: String
  name: String
  objectId: String
  managerEmail: String
  bank: String
  createdAt: Date
  state: Float
  defaultpostage: Float
  managerWeChat: String
  pic6: File
  tel: String
  account: String
  summary: String
  pic4: File
  payee: String
  pic3: File
  code: String
  pic7: File
  pic1: File
  period: Float
  pic8: File
  managerName: String
  pic5: File
  expirydate: Date
  pic2: File
  supplierType: Float
}

input SupplierLessThanOrEqualToArgument {
  address: String
  billEmail: String
  updatedAt: Date
  region_name: String
  logo: File
  managerPhone: String
  name: String
  objectId: String
  managerEmail: String
  bank: String
  createdAt: Date
  state: Float
  defaultpostage: Float
  managerWeChat: String
  pic6: File
  tel: String
  account: String
  summary: String
  pic4: File
  payee: String
  pic3: File
  code: String
  pic7: File
  pic1: File
  period: Float
  pic8: File
  managerName: String
  pic5: File
  expirydate: Date
  pic2: File
  supplierType: Float
}

type Technician {
  address: String
  joyheight: Float
  updatedAt: Date
  age: Float
  desc: String
  sex: Float
  phone: String
  edufieldofstudy: String
  name: String
  objectId: ID
  joyconstellation: Float
  signature: String
  nickname: String
  createdAt: Date
  edudegree: String
  state: Float
  pic6: File
  pic4: File
  eduage: Float
  pic3: File
  avatar: File
  code: String
  pic7: File
  idcardno: String
  pic1: File
  joyoccupation: String
  pic8: File
  pic5: File
  joyweight: Float
  techphotowithidcard: File
  pic2: File
  techphotoofidcarda: File
  servicetype: Float
  createdby: _User
  technicianOfTechnician_Region(objectId: ID, ascending: Technician_RegionFields, descending: Technician_RegionFields, limit: Int, equalTo: Technician_RegionEqualToArgument, greaterThan: Technician_RegionGreaterThanArgument, greaterThanOrEqualTo: Technician_RegionGreaterThanOrEqualToArgument, lessThan: Technician_RegionLessThanArgument, lessThanOrEqualTo: Technician_RegionLessThanOrEqualToArgument, containedIn: Technician_RegionContainedInArgument, containsAll: Technician_RegionContainsAllArgument, exists: Technician_RegionExistsArgument): [Technician_Region]
  TechnicianOfTechnician_Certificate(objectId: ID, ascending: Technician_CertificateFields, descending: Technician_CertificateFields, limit: Int, equalTo: Technician_CertificateEqualToArgument, greaterThan: Technician_CertificateGreaterThanArgument, greaterThanOrEqualTo: Technician_CertificateGreaterThanOrEqualToArgument, lessThan: Technician_CertificateLessThanArgument, lessThanOrEqualTo: Technician_CertificateLessThanOrEqualToArgument, containedIn: Technician_CertificateContainedInArgument, containsAll: Technician_CertificateContainsAllArgument, exists: Technician_CertificateExistsArgument): [Technician_Certificate]
  technicianOfTechnician_Certificate(objectId: ID, ascending: Technician_CertificateFields, descending: Technician_CertificateFields, limit: Int, equalTo: Technician_CertificateEqualToArgument, greaterThan: Technician_CertificateGreaterThanArgument, greaterThanOrEqualTo: Technician_CertificateGreaterThanOrEqualToArgument, lessThan: Technician_CertificateLessThanArgument, lessThanOrEqualTo: Technician_CertificateLessThanOrEqualToArgument, containedIn: Technician_CertificateContainedInArgument, containsAll: Technician_CertificateContainsAllArgument, exists: Technician_CertificateExistsArgument): [Technician_Certificate]
  technicianOfTechnician_Category(objectId: ID, ascending: Technician_CategoryFields, descending: Technician_CategoryFields, limit: Int, equalTo: Technician_CategoryEqualToArgument, greaterThan: Technician_CategoryGreaterThanArgument, greaterThanOrEqualTo: Technician_CategoryGreaterThanOrEqualToArgument, lessThan: Technician_CategoryLessThanArgument, lessThanOrEqualTo: Technician_CategoryLessThanOrEqualToArgument, containedIn: Technician_CategoryContainedInArgument, containsAll: Technician_CategoryContainsAllArgument, exists: Technician_CategoryExistsArgument): [Technician_Category]
  technicianOfAccount(objectId: ID, ascending: AccountFields, descending: AccountFields, limit: Int, equalTo: AccountEqualToArgument, greaterThan: AccountGreaterThanArgument, greaterThanOrEqualTo: AccountGreaterThanOrEqualToArgument, lessThan: AccountLessThanArgument, lessThanOrEqualTo: AccountLessThanOrEqualToArgument, containedIn: AccountContainedInArgument, containsAll: AccountContainsAllArgument, exists: AccountExistsArgument): [Account]
  technicianOfItem(objectId: ID, ascending: ItemFields, descending: ItemFields, limit: Int, equalTo: ItemEqualToArgument, greaterThan: ItemGreaterThanArgument, greaterThanOrEqualTo: ItemGreaterThanOrEqualToArgument, lessThan: ItemLessThanArgument, lessThanOrEqualTo: ItemLessThanOrEqualToArgument, containedIn: ItemContainedInArgument, containsAll: ItemContainsAllArgument, exists: ItemExistsArgument): [Item]
  technicianOfTechnician_Experience(objectId: ID, ascending: Technician_ExperienceFields, descending: Technician_ExperienceFields, limit: Int, equalTo: Technician_ExperienceEqualToArgument, greaterThan: Technician_ExperienceGreaterThanArgument, greaterThanOrEqualTo: Technician_ExperienceGreaterThanOrEqualToArgument, lessThan: Technician_ExperienceLessThanArgument, lessThanOrEqualTo: Technician_ExperienceLessThanOrEqualToArgument, containedIn: Technician_ExperienceContainedInArgument, containsAll: Technician_ExperienceContainsAllArgument, exists: Technician_ExperienceExistsArgument): [Technician_Experience]
}

type Technician_Category {
  category: Category
  updatedAt: Date
  technician: Technician
  objectId: ID
  createdAt: Date
  state: Float
  category_name: String
  lineno: Float
  category_type: Float
  createdby: _User
}

input Technician_CategoryContainedInArgument {
  category: [ID]
  updatedAt: [ID]
  technician: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  category_name: [ID]
  lineno: [ID]
  category_type: [ID]
  createdby: [ID]
}

input Technician_CategoryContainsAllArgument {
  category: [ID]
  updatedAt: [ID]
  technician: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  category_name: [ID]
  lineno: [ID]
  category_type: [ID]
  createdby: [ID]
}

input Technician_CategoryEqualToArgument {
  updatedAt: Date
  objectId: String
  createdAt: Date
  state: Float
  category_name: String
  lineno: Float
  category_type: Float
}

input Technician_CategoryExistsArgument {
  category: Boolean
  updatedAt: Boolean
  technician: Boolean
  objectId: Boolean
  createdAt: Boolean
  state: Boolean
  category_name: Boolean
  lineno: Boolean
  category_type: Boolean
  createdby: Boolean
}

enum Technician_CategoryFields {
  category
  updatedAt
  technician
  objectId
  createdAt
  state
  category_name
  lineno
  category_type
  createdby
}

input Technician_CategoryGreaterThanArgument {
  updatedAt: Date
  objectId: String
  createdAt: Date
  state: Float
  category_name: String
  lineno: Float
  category_type: Float
}

input Technician_CategoryGreaterThanOrEqualToArgument {
  updatedAt: Date
  objectId: String
  createdAt: Date
  state: Float
  category_name: String
  lineno: Float
  category_type: Float
}

input Technician_CategoryLessThanArgument {
  updatedAt: Date
  objectId: String
  createdAt: Date
  state: Float
  category_name: String
  lineno: Float
  category_type: Float
}

input Technician_CategoryLessThanOrEqualToArgument {
  updatedAt: Date
  objectId: String
  createdAt: Date
  state: Float
  category_name: String
  lineno: Float
  category_type: Float
}

type Technician_Certificate {
  Technician: Technician
  certificatename: String
  updatedAt: Date
  technician: Technician
  objectId: ID
  createdAt: Date
  state: Float
  photopage: File
  numberpage: File
  photowithCertificate: File
  certificatecode: String
  lineno: Float
  createdby: _User
}

input Technician_CertificateContainedInArgument {
  Technician: [ID]
  certificatename: [ID]
  updatedAt: [ID]
  technician: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  photopage: [ID]
  numberpage: [ID]
  photowithCertificate: [ID]
  certificatecode: [ID]
  lineno: [ID]
  createdby: [ID]
}

input Technician_CertificateContainsAllArgument {
  Technician: [ID]
  certificatename: [ID]
  updatedAt: [ID]
  technician: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  photopage: [ID]
  numberpage: [ID]
  photowithCertificate: [ID]
  certificatecode: [ID]
  lineno: [ID]
  createdby: [ID]
}

input Technician_CertificateEqualToArgument {
  certificatename: String
  updatedAt: Date
  objectId: String
  createdAt: Date
  state: Float
  photopage: File
  numberpage: File
  photowithCertificate: File
  certificatecode: String
  lineno: Float
}

input Technician_CertificateExistsArgument {
  Technician: Boolean
  certificatename: Boolean
  updatedAt: Boolean
  technician: Boolean
  objectId: Boolean
  createdAt: Boolean
  state: Boolean
  photopage: Boolean
  numberpage: Boolean
  photowithCertificate: Boolean
  certificatecode: Boolean
  lineno: Boolean
  createdby: Boolean
}

enum Technician_CertificateFields {
  Technician
  certificatename
  updatedAt
  technician
  objectId
  createdAt
  state
  photopage
  numberpage
  photowithCertificate
  certificatecode
  lineno
  createdby
}

input Technician_CertificateGreaterThanArgument {
  certificatename: String
  updatedAt: Date
  objectId: String
  createdAt: Date
  state: Float
  photopage: File
  numberpage: File
  photowithCertificate: File
  certificatecode: String
  lineno: Float
}

input Technician_CertificateGreaterThanOrEqualToArgument {
  certificatename: String
  updatedAt: Date
  objectId: String
  createdAt: Date
  state: Float
  photopage: File
  numberpage: File
  photowithCertificate: File
  certificatecode: String
  lineno: Float
}

input Technician_CertificateLessThanArgument {
  certificatename: String
  updatedAt: Date
  objectId: String
  createdAt: Date
  state: Float
  photopage: File
  numberpage: File
  photowithCertificate: File
  certificatecode: String
  lineno: Float
}

input Technician_CertificateLessThanOrEqualToArgument {
  certificatename: String
  updatedAt: Date
  objectId: String
  createdAt: Date
  state: Float
  photopage: File
  numberpage: File
  photowithCertificate: File
  certificatecode: String
  lineno: Float
}

type Technician_Experience {
  description: String
  updatedAt: Date
  timefrom: Date
  technician: Technician
  objectId: ID
  createdAt: Date
  state: Float
  iscurrnetworkhere: Boolean
  lineno: Float
  company: String
  timeto: Date
  createdby: _User
}

input Technician_ExperienceContainedInArgument {
  description: [ID]
  updatedAt: [ID]
  timefrom: [ID]
  technician: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  iscurrnetworkhere: [ID]
  lineno: [ID]
  company: [ID]
  timeto: [ID]
  createdby: [ID]
}

input Technician_ExperienceContainsAllArgument {
  description: [ID]
  updatedAt: [ID]
  timefrom: [ID]
  technician: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  iscurrnetworkhere: [ID]
  lineno: [ID]
  company: [ID]
  timeto: [ID]
  createdby: [ID]
}

input Technician_ExperienceEqualToArgument {
  description: String
  updatedAt: Date
  timefrom: Date
  objectId: String
  createdAt: Date
  state: Float
  iscurrnetworkhere: Boolean
  lineno: Float
  company: String
  timeto: Date
}

input Technician_ExperienceExistsArgument {
  description: Boolean
  updatedAt: Boolean
  timefrom: Boolean
  technician: Boolean
  objectId: Boolean
  createdAt: Boolean
  state: Boolean
  iscurrnetworkhere: Boolean
  lineno: Boolean
  company: Boolean
  timeto: Boolean
  createdby: Boolean
}

enum Technician_ExperienceFields {
  description
  updatedAt
  timefrom
  technician
  objectId
  createdAt
  state
  iscurrnetworkhere
  lineno
  company
  timeto
  createdby
}

input Technician_ExperienceGreaterThanArgument {
  description: String
  updatedAt: Date
  timefrom: Date
  objectId: String
  createdAt: Date
  state: Float
  iscurrnetworkhere: Boolean
  lineno: Float
  company: String
  timeto: Date
}

input Technician_ExperienceGreaterThanOrEqualToArgument {
  description: String
  updatedAt: Date
  timefrom: Date
  objectId: String
  createdAt: Date
  state: Float
  iscurrnetworkhere: Boolean
  lineno: Float
  company: String
  timeto: Date
}

input Technician_ExperienceLessThanArgument {
  description: String
  updatedAt: Date
  timefrom: Date
  objectId: String
  createdAt: Date
  state: Float
  iscurrnetworkhere: Boolean
  lineno: Float
  company: String
  timeto: Date
}

input Technician_ExperienceLessThanOrEqualToArgument {
  description: String
  updatedAt: Date
  timefrom: Date
  objectId: String
  createdAt: Date
  state: Float
  iscurrnetworkhere: Boolean
  lineno: Float
  company: String
  timeto: Date
}

type Technician_Region {
  updatedAt: Date
  region_name: String
  technician: Technician
  objectId: ID
  createdAt: Date
  state: Float
  region: Region
  lineno: Float
  createdby: _User
}

input Technician_RegionContainedInArgument {
  updatedAt: [ID]
  region_name: [ID]
  technician: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  region: [ID]
  lineno: [ID]
  createdby: [ID]
}

input Technician_RegionContainsAllArgument {
  updatedAt: [ID]
  region_name: [ID]
  technician: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  region: [ID]
  lineno: [ID]
  createdby: [ID]
}

input Technician_RegionEqualToArgument {
  updatedAt: Date
  region_name: String
  objectId: String
  createdAt: Date
  state: Float
  lineno: Float
}

input Technician_RegionExistsArgument {
  updatedAt: Boolean
  region_name: Boolean
  technician: Boolean
  objectId: Boolean
  createdAt: Boolean
  state: Boolean
  region: Boolean
  lineno: Boolean
  createdby: Boolean
}

enum Technician_RegionFields {
  updatedAt
  region_name
  technician
  objectId
  createdAt
  state
  region
  lineno
  createdby
}

input Technician_RegionGreaterThanArgument {
  updatedAt: Date
  region_name: String
  objectId: String
  createdAt: Date
  state: Float
  lineno: Float
}

input Technician_RegionGreaterThanOrEqualToArgument {
  updatedAt: Date
  region_name: String
  objectId: String
  createdAt: Date
  state: Float
  lineno: Float
}

input Technician_RegionLessThanArgument {
  updatedAt: Date
  region_name: String
  objectId: String
  createdAt: Date
  state: Float
  lineno: Float
}

input Technician_RegionLessThanOrEqualToArgument {
  updatedAt: Date
  region_name: String
  objectId: String
  createdAt: Date
  state: Float
  lineno: Float
}

input TechnicianContainedInArgument {
  address: [ID]
  joyheight: [ID]
  updatedAt: [ID]
  age: [ID]
  desc: [ID]
  sex: [ID]
  phone: [ID]
  edufieldofstudy: [ID]
  name: [ID]
  objectId: [ID]
  joyconstellation: [ID]
  signature: [ID]
  nickname: [ID]
  createdAt: [ID]
  edudegree: [ID]
  state: [ID]
  pic6: [ID]
  pic4: [ID]
  eduage: [ID]
  pic3: [ID]
  avatar: [ID]
  code: [ID]
  pic7: [ID]
  idcardno: [ID]
  pic1: [ID]
  joyoccupation: [ID]
  pic8: [ID]
  pic5: [ID]
  joyweight: [ID]
  techphotowithidcard: [ID]
  pic2: [ID]
  techphotoofidcarda: [ID]
  servicetype: [ID]
  createdby: [ID]
}

input TechnicianContainsAllArgument {
  address: [ID]
  joyheight: [ID]
  updatedAt: [ID]
  age: [ID]
  desc: [ID]
  sex: [ID]
  phone: [ID]
  edufieldofstudy: [ID]
  name: [ID]
  objectId: [ID]
  joyconstellation: [ID]
  signature: [ID]
  nickname: [ID]
  createdAt: [ID]
  edudegree: [ID]
  state: [ID]
  pic6: [ID]
  pic4: [ID]
  eduage: [ID]
  pic3: [ID]
  avatar: [ID]
  code: [ID]
  pic7: [ID]
  idcardno: [ID]
  pic1: [ID]
  joyoccupation: [ID]
  pic8: [ID]
  pic5: [ID]
  joyweight: [ID]
  techphotowithidcard: [ID]
  pic2: [ID]
  techphotoofidcarda: [ID]
  servicetype: [ID]
  createdby: [ID]
}

input TechnicianEqualToArgument {
  address: String
  joyheight: Float
  updatedAt: Date
  age: Float
  desc: String
  sex: Float
  phone: String
  edufieldofstudy: String
  name: String
  objectId: String
  joyconstellation: Float
  signature: String
  nickname: String
  createdAt: Date
  edudegree: String
  state: Float
  pic6: File
  pic4: File
  eduage: Float
  pic3: File
  avatar: File
  code: String
  pic7: File
  idcardno: String
  pic1: File
  joyoccupation: String
  pic8: File
  pic5: File
  joyweight: Float
  techphotowithidcard: File
  pic2: File
  techphotoofidcarda: File
  servicetype: Float
}

input TechnicianExistsArgument {
  address: Boolean
  joyheight: Boolean
  updatedAt: Boolean
  age: Boolean
  desc: Boolean
  sex: Boolean
  phone: Boolean
  edufieldofstudy: Boolean
  name: Boolean
  objectId: Boolean
  joyconstellation: Boolean
  signature: Boolean
  nickname: Boolean
  createdAt: Boolean
  edudegree: Boolean
  state: Boolean
  pic6: Boolean
  pic4: Boolean
  eduage: Boolean
  pic3: Boolean
  avatar: Boolean
  code: Boolean
  pic7: Boolean
  idcardno: Boolean
  pic1: Boolean
  joyoccupation: Boolean
  pic8: Boolean
  pic5: Boolean
  joyweight: Boolean
  techphotowithidcard: Boolean
  pic2: Boolean
  techphotoofidcarda: Boolean
  servicetype: Boolean
  createdby: Boolean
}

enum TechnicianFields {
  address
  joyheight
  updatedAt
  age
  desc
  sex
  phone
  edufieldofstudy
  name
  objectId
  joyconstellation
  signature
  nickname
  createdAt
  edudegree
  state
  pic6
  pic4
  eduage
  pic3
  avatar
  code
  pic7
  idcardno
  pic1
  joyoccupation
  pic8
  pic5
  joyweight
  techphotowithidcard
  pic2
  techphotoofidcarda
  servicetype
  createdby
}

input TechnicianGreaterThanArgument {
  address: String
  joyheight: Float
  updatedAt: Date
  age: Float
  desc: String
  sex: Float
  phone: String
  edufieldofstudy: String
  name: String
  objectId: String
  joyconstellation: Float
  signature: String
  nickname: String
  createdAt: Date
  edudegree: String
  state: Float
  pic6: File
  pic4: File
  eduage: Float
  pic3: File
  avatar: File
  code: String
  pic7: File
  idcardno: String
  pic1: File
  joyoccupation: String
  pic8: File
  pic5: File
  joyweight: Float
  techphotowithidcard: File
  pic2: File
  techphotoofidcarda: File
  servicetype: Float
}

input TechnicianGreaterThanOrEqualToArgument {
  address: String
  joyheight: Float
  updatedAt: Date
  age: Float
  desc: String
  sex: Float
  phone: String
  edufieldofstudy: String
  name: String
  objectId: String
  joyconstellation: Float
  signature: String
  nickname: String
  createdAt: Date
  edudegree: String
  state: Float
  pic6: File
  pic4: File
  eduage: Float
  pic3: File
  avatar: File
  code: String
  pic7: File
  idcardno: String
  pic1: File
  joyoccupation: String
  pic8: File
  pic5: File
  joyweight: Float
  techphotowithidcard: File
  pic2: File
  techphotoofidcarda: File
  servicetype: Float
}

input TechnicianLessThanArgument {
  address: String
  joyheight: Float
  updatedAt: Date
  age: Float
  desc: String
  sex: Float
  phone: String
  edufieldofstudy: String
  name: String
  objectId: String
  joyconstellation: Float
  signature: String
  nickname: String
  createdAt: Date
  edudegree: String
  state: Float
  pic6: File
  pic4: File
  eduage: Float
  pic3: File
  avatar: File
  code: String
  pic7: File
  idcardno: String
  pic1: File
  joyoccupation: String
  pic8: File
  pic5: File
  joyweight: Float
  techphotowithidcard: File
  pic2: File
  techphotoofidcarda: File
  servicetype: Float
}

input TechnicianLessThanOrEqualToArgument {
  address: String
  joyheight: Float
  updatedAt: Date
  age: Float
  desc: String
  sex: Float
  phone: String
  edufieldofstudy: String
  name: String
  objectId: String
  joyconstellation: Float
  signature: String
  nickname: String
  createdAt: Date
  edudegree: String
  state: Float
  pic6: File
  pic4: File
  eduage: Float
  pic3: File
  avatar: File
  code: String
  pic7: File
  idcardno: String
  pic1: File
  joyoccupation: String
  pic8: File
  pic5: File
  joyweight: Float
  techphotowithidcard: File
  pic2: File
  techphotoofidcarda: File
  servicetype: Float
}

type Todo {
  objectId: ID
  createdAt: Date
  updatedAt: Date
  name: String
  content: String
}

input TodoContainedInArgument {
  objectId: [ID]
  createdAt: [ID]
  updatedAt: [ID]
  name: [ID]
  content: [ID]
}

input TodoContainsAllArgument {
  objectId: [ID]
  createdAt: [ID]
  updatedAt: [ID]
  name: [ID]
  content: [ID]
}

input TodoEqualToArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  name: String
  content: String
}

input TodoExistsArgument {
  objectId: Boolean
  createdAt: Boolean
  updatedAt: Boolean
  name: Boolean
  content: Boolean
}

enum TodoFields {
  objectId
  createdAt
  updatedAt
  name
  content
}

input TodoGreaterThanArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  name: String
  content: String
}

input TodoGreaterThanOrEqualToArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  name: String
  content: String
}

input TodoLessThanArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  name: String
  content: String
}

input TodoLessThanOrEqualToArgument {
  objectId: String
  createdAt: Date
  updatedAt: Date
  name: String
  content: String
}

type Topic {
  updatedAt: Date
  name: String
  objectId: ID
  createdAt: Date
  state: Float
  code: String
  createdby: _User
}

input TopicContainedInArgument {
  updatedAt: [ID]
  name: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  code: [ID]
  createdby: [ID]
}

input TopicContainsAllArgument {
  updatedAt: [ID]
  name: [ID]
  objectId: [ID]
  createdAt: [ID]
  state: [ID]
  code: [ID]
  createdby: [ID]
}

input TopicEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  code: String
}

input TopicExistsArgument {
  updatedAt: Boolean
  name: Boolean
  objectId: Boolean
  createdAt: Boolean
  state: Boolean
  code: Boolean
  createdby: Boolean
}

enum TopicFields {
  updatedAt
  name
  objectId
  createdAt
  state
  code
  createdby
}

input TopicGreaterThanArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  code: String
}

input TopicGreaterThanOrEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  code: String
}

input TopicLessThanArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  code: String
}

input TopicLessThanOrEqualToArgument {
  updatedAt: Date
  name: String
  objectId: String
  createdAt: Date
  state: Float
  code: String
}

type Transfer {
  payobj: Object
  orderInfo: Object
  updatedAt: Date
  paymentOrder_orderno: String
  fromaccount: Account
  objectId: ID
  totalPrice: Float
  payType: String
  createdAt: Date
  type: Float
  state: Float
  saleOrder_orderno: String
  toaccount_name: String
  paymentOrder: Payment
  paytype: Float
  orderno: String
  order: Order
  fromaccount_name: String
  toaccount: Account
  saleOrder: Order
  createdby: _User
}

input TransferContainedInArgument {
  payobj: [ID]
  orderInfo: [ID]
  updatedAt: [ID]
  paymentOrder_orderno: [ID]
  fromaccount: [ID]
  objectId: [ID]
  totalPrice: [ID]
  payType: [ID]
  createdAt: [ID]
  type: [ID]
  state: [ID]
  saleOrder_orderno: [ID]
  toaccount_name: [ID]
  paymentOrder: [ID]
  paytype: [ID]
  orderno: [ID]
  order: [ID]
  fromaccount_name: [ID]
  toaccount: [ID]
  saleOrder: [ID]
  createdby: [ID]
}

input TransferContainsAllArgument {
  payobj: [ID]
  orderInfo: [ID]
  updatedAt: [ID]
  paymentOrder_orderno: [ID]
  fromaccount: [ID]
  objectId: [ID]
  totalPrice: [ID]
  payType: [ID]
  createdAt: [ID]
  type: [ID]
  state: [ID]
  saleOrder_orderno: [ID]
  toaccount_name: [ID]
  paymentOrder: [ID]
  paytype: [ID]
  orderno: [ID]
  order: [ID]
  fromaccount_name: [ID]
  toaccount: [ID]
  saleOrder: [ID]
  createdby: [ID]
}

input TransferEqualToArgument {
  payobj: Object
  orderInfo: Object
  updatedAt: Date
  paymentOrder_orderno: String
  objectId: String
  totalPrice: Float
  payType: String
  createdAt: Date
  type: Float
  state: Float
  saleOrder_orderno: String
  toaccount_name: String
  paytype: Float
  orderno: String
  fromaccount_name: String
}

input TransferExistsArgument {
  payobj: Boolean
  orderInfo: Boolean
  updatedAt: Boolean
  paymentOrder_orderno: Boolean
  fromaccount: Boolean
  objectId: Boolean
  totalPrice: Boolean
  payType: Boolean
  createdAt: Boolean
  type: Boolean
  state: Boolean
  saleOrder_orderno: Boolean
  toaccount_name: Boolean
  paymentOrder: Boolean
  paytype: Boolean
  orderno: Boolean
  order: Boolean
  fromaccount_name: Boolean
  toaccount: Boolean
  saleOrder: Boolean
  createdby: Boolean
}

enum TransferFields {
  payobj
  orderInfo
  updatedAt
  paymentOrder_orderno
  fromaccount
  objectId
  totalPrice
  payType
  createdAt
  type
  state
  saleOrder_orderno
  toaccount_name
  paymentOrder
  paytype
  orderno
  order
  fromaccount_name
  toaccount
  saleOrder
  createdby
}

input TransferGreaterThanArgument {
  payobj: Object
  orderInfo: Object
  updatedAt: Date
  paymentOrder_orderno: String
  objectId: String
  totalPrice: Float
  payType: String
  createdAt: Date
  type: Float
  state: Float
  saleOrder_orderno: String
  toaccount_name: String
  paytype: Float
  orderno: String
  fromaccount_name: String
}

input TransferGreaterThanOrEqualToArgument {
  payobj: Object
  orderInfo: Object
  updatedAt: Date
  paymentOrder_orderno: String
  objectId: String
  totalPrice: Float
  payType: String
  createdAt: Date
  type: Float
  state: Float
  saleOrder_orderno: String
  toaccount_name: String
  paytype: Float
  orderno: String
  fromaccount_name: String
}

input TransferLessThanArgument {
  payobj: Object
  orderInfo: Object
  updatedAt: Date
  paymentOrder_orderno: String
  objectId: String
  totalPrice: Float
  payType: String
  createdAt: Date
  type: Float
  state: Float
  saleOrder_orderno: String
  toaccount_name: String
  paytype: Float
  orderno: String
  fromaccount_name: String
}

input TransferLessThanOrEqualToArgument {
  payobj: Object
  orderInfo: Object
  updatedAt: Date
  paymentOrder_orderno: String
  objectId: String
  totalPrice: Float
  payType: String
  createdAt: Date
  type: Float
  state: Float
  saleOrder_orderno: String
  toaccount_name: String
  paytype: Float
  orderno: String
  fromaccount_name: String
}
